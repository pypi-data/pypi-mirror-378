# coding: utf-8

"""
    DeltaStream REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from deltastream.api.controlplane.openapi_client.models.result_set import ResultSet

class TestResultSet(unittest.TestCase):
    """ResultSet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResultSet:
        """Test ResultSet
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResultSet`
        """
        model = ResultSet()
        if include_optional:
            return ResultSet(
                sql_state = '',
                message = '',
                statement_id = '',
                statement_ids = [
                    ''
                    ],
                created_on = 56,
                metadata = deltastream.api.controlplane.openapi_client.models.result_set_metadata.ResultSetMetadata(
                    encoding = 'json', 
                    partition_info = [
                        deltastream.api.controlplane.openapi_client.models.result_set_partition_info.ResultSetPartitionInfo(
                            row_count = 0, )
                        ], 
                    columns = [
                        deltastream.api.controlplane.openapi_client.models.result_set_columns_inner.ResultSetColumns_inner(
                            name = '', 
                            type = '', 
                            nullable = True, 
                            display_hint = '', )
                        ], 
                    dataplane_request = deltastream.api.controlplane.openapi_client.models.dataplane_request.DataplaneRequest(
                        token = '', 
                        uri = '', 
                        statement_id = '', 
                        query_id = '', 
                        request_type = 'result-set', ), 
                    context = deltastream.api.controlplane.openapi_client.models.result_set_context.ResultSetContext(
                        organization_id = '', 
                        role_name = '', 
                        database_name = '', 
                        schema_name = '', 
                        store_name = '', 
                        compute_pool_name = '', ), ),
                data = [
                    [
                        null
                        ]
                    ]
            )
        else:
            return ResultSet(
                sql_state = '',
                statement_id = '',
                created_on = 56,
                metadata = deltastream.api.controlplane.openapi_client.models.result_set_metadata.ResultSetMetadata(
                    encoding = 'json', 
                    partition_info = [
                        deltastream.api.controlplane.openapi_client.models.result_set_partition_info.ResultSetPartitionInfo(
                            row_count = 0, )
                        ], 
                    columns = [
                        deltastream.api.controlplane.openapi_client.models.result_set_columns_inner.ResultSetColumns_inner(
                            name = '', 
                            type = '', 
                            nullable = True, 
                            display_hint = '', )
                        ], 
                    dataplane_request = deltastream.api.controlplane.openapi_client.models.dataplane_request.DataplaneRequest(
                        token = '', 
                        uri = '', 
                        statement_id = '', 
                        query_id = '', 
                        request_type = 'result-set', ), 
                    context = deltastream.api.controlplane.openapi_client.models.result_set_context.ResultSetContext(
                        organization_id = '', 
                        role_name = '', 
                        database_name = '', 
                        schema_name = '', 
                        store_name = '', 
                        compute_pool_name = '', ), ),
        )
        """

    def testResultSet(self):
        """Test ResultSet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
