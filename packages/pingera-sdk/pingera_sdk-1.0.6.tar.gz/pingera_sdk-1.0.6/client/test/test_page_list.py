# coding: utf-8

"""
    Pingera API

     The official API for Pingera, a monitoring and status page platform. This API allows you to manage checks, organizations, incidents, and more.   Some useful links: * [Pingera website](https://pingera.ru?utm_source=api_docs) * [API documentation](https://docs.pingera.ru/api/overview) * [Application](https://app.pingera.ru) * [Status page](https://status.pingera.ru) 

    The version of the OpenAPI document: v1
    Contact: privet@pingera.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pingera.models.page_list import PageList

class TestPageList(unittest.TestCase):
    """PageList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PageList:
        """Test PageList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PageList`
        """
        model = PageList()
        if include_optional:
            return PageList(
                pages = [
                    pingera.models.page.Page(
                        viewers_must_be_team_members = False, 
                        country = 'Russia', 
                        language = 'ru', 
                        css_button_color = '#007bff', 
                        css_button_border_color = '#007bff', 
                        css_spinner_color = '#007bff', 
                        css_body_background_color = '#ffffff', 
                        support_url = 'https://mycompany.com/support', 
                        css_greens = '#28a745', 
                        css_yellows = '#ffc107', 
                        allow_incident_subscribers = True, 
                        city = 'New York', 
                        company_logo = 'https://example.com/logo.png', 
                        notifications_from_email = 'noreply@mycompany.com', 
                        css_oranges = '#fd7e14', 
                        css_no_data = '#6c757d', 
                        transactional_logo = 'https://example.com/email-logo.png', 
                        headline = 'Real-time status and performance monitoring for MyCompany services', 
                        allow_email_subscribers = True, 
                        allow_webhook_subscribers = True, 
                        time_zone = 'America/New_York', 
                        page_description = 'Real-time status and performance monitoring for MyCompany services', 
                        url = 'https://mycompany.com', 
                        template_id = 'tpl123abc456', 
                        notifications_email_footer = 'You are receiving this email because you are subscribed to updates from MyCompany.', 
                        state = 'NY', 
                        hero_cover = 'https://example.com/hero.jpg', 
                        css_button_text_color = '#ffffff', 
                        allow_sms_subscribers = False, 
                        css_font_color = '#333333', 
                        css_border_color = '#dee2e6', 
                        domain = 'status.mycompany.com', 
                        favicon_logo = 'https://example.com/favicon.ico', 
                        css_reds = '#dc3545', 
                        css_link_color = '#007bff', 
                        template = Modern, 
                        css_button_hover_color = '#0056b3', 
                        created_at = '2024-01-15T10:00Z', 
                        updated_at = '2024-01-15T14:00Z', 
                        ip_restrictions = '192.168.1.0/24,10.0.0.0/8', 
                        css_blues = '#007bff', 
                        allow_rss_atom_feeds = True, 
                        css_graph_color = '#6f42c1', 
                        id = 'abc123def456', 
                        css_light_font_color = '#666666', 
                        email_logo = 'https://example.com/email-logo.png', 
                        activity_score = 85, 
                        hidden_from_search = False, 
                        name = 'MyCompany Status', 
                        organization_id = 'org123abc456', 
                        allow_page_subscribers = True, 
                        subdomain = 'mycompany', )
                    ],
                pagination = pingera.models.pagination.Pagination(
                    has_next = True, 
                    has_prev = False, 
                    total_pages = 5, 
                    page = 1, 
                    page_size = 20, 
                    total_items = 100, )
            )
        else:
            return PageList(
        )
        """

    def testPageList(self):
        """Test PageList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
