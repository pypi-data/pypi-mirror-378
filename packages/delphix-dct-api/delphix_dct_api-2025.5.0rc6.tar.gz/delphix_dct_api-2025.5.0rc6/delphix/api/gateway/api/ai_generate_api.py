"""
    Delphix DCT API

    Delphix DCT API  # noqa: E501

    The version of the OpenAPI document: 3.24.0
    Contact: support@delphix.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from delphix.api.gateway.api_client import ApiClient, Endpoint as _Endpoint
from delphix.api.gateway.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from delphix.api.gateway.model.error_response import ErrorResponse
from delphix.api.gateway.model.generate_data_operation import GenerateDataOperation
from delphix.api.gateway.model.generate_data_request import GenerateDataRequest
from delphix.api.gateway.model.generate_data_response import GenerateDataResponse
from delphix.api.gateway.model.get_all_generate_data_operations_response import GetAllGenerateDataOperationsResponse
from delphix.api.gateway.model.get_generate_data_values_response import GetGenerateDataValuesResponse
from delphix.api.gateway.model.search_body import SearchBody


class AiGenerateApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        def __download_generate_values(
            self,
            generate_data_operation_id,
            format,
            **kwargs
        ):
            """Download all values generated by the operation in the specified format  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.download_generate_values(generate_data_operation_id, format, async_req=True)
            >>> result = thread.get()

            Args:
                generate_data_operation_id (str): The id of the generate data operation
                format (str): The format for the generated file

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                file_type
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['generate_data_operation_id'] = \
                generate_data_operation_id
            kwargs['format'] = \
                format
            return self.call_with_http_info(**kwargs)

        self.download_generate_values = _Endpoint(
            settings={
                'response_type': (file_type,),
                'auth': [
                    'ApiKeyAuth'
                ],
                'endpoint_path': '/ai/generate/{generateDataOperationId}/download',
                'operation_id': 'download_generate_values',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'generate_data_operation_id',
                    'format',
                ],
                'required': [
                    'generate_data_operation_id',
                    'format',
                ],
                'nullable': [
                ],
                'enum': [
                    'format',
                ],
                'validation': [
                    'generate_data_operation_id',
                ]
            },
            root_map={
                'validations': {
                    ('generate_data_operation_id',): {

                        'min_length': 1,
                    },
                },
                'allowed_values': {
                    ('format',): {

                        "JSON": "JSON",
                        "SECURE_LOOKUP": "SECURE_LOOKUP"
                    },
                },
                'openapi_types': {
                    'generate_data_operation_id':
                        (str,),
                    'format':
                        (str,),
                },
                'attribute_map': {
                    'generate_data_operation_id': 'generateDataOperationId',
                    'format': 'format',
                },
                'location_map': {
                    'generate_data_operation_id': 'path',
                    'format': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'text/plain; charset=utf-8',
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__download_generate_values
        )

        def __generate_data(
            self,
            **kwargs
        ):
            """Initiate an operation that creates a list of data values using generative AI  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.generate_data(async_req=True)
            >>> result = thread.get()


            Keyword Args:
                generate_data_request (GenerateDataRequest): [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                GenerateDataResponse
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            return self.call_with_http_info(**kwargs)

        self.generate_data = _Endpoint(
            settings={
                'response_type': (GenerateDataResponse,),
                'auth': [
                    'ApiKeyAuth'
                ],
                'endpoint_path': '/ai/generate',
                'operation_id': 'generate_data',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'generate_data_request',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'generate_data_request':
                        (GenerateDataRequest,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'generate_data_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__generate_data
        )

        def __get_all_generate_operations(
            self,
            **kwargs
        ):
            """Get the details of all data generate operations  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.get_all_generate_operations(async_req=True)
            >>> result = thread.get()


            Keyword Args:
                limit (int): Maximum number of objects to return per query. The value must be between 1 and 1000. Default is 100.. [optional] if omitted the server will use the default value of 100
                cursor (str): Cursor to fetch the next or previous page of results. The value of this property must be extracted from the 'prev_cursor' or 'next_cursor' property of a PaginatedResponseMetadata which is contained in the response of list and search API endpoints.. [optional]
                sort (str, none_type): The field to sort results by. A property name with a prepended '-' signifies a descending order.. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                GetAllGenerateDataOperationsResponse
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            return self.call_with_http_info(**kwargs)

        self.get_all_generate_operations = _Endpoint(
            settings={
                'response_type': (GetAllGenerateDataOperationsResponse,),
                'auth': [
                    'ApiKeyAuth'
                ],
                'endpoint_path': '/ai/generate',
                'operation_id': 'get_all_generate_operations',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'limit',
                    'cursor',
                    'sort',
                ],
                'required': [],
                'nullable': [
                    'sort',
                ],
                'enum': [
                    'sort',
                ],
                'validation': [
                    'limit',
                    'cursor',
                ]
            },
            root_map={
                'validations': {
                    ('limit',): {

                        'inclusive_maximum': 1000,
                        'inclusive_minimum': 1,
                    },
                    ('cursor',): {
                        'max_length': 4096,
                        'min_length': 1,
                    },
                },
                'allowed_values': {
                    ('sort',): {
                        'None': None,
                        "ID": "id",
                        "-ID": "-id",
                        "NAME": "name",
                        "-NAME": "-name",
                        "DESCRIPTION": "description",
                        "-DESCRIPTION": "-description",
                        "STATUS": "status",
                        "-STATUS": "-status",
                        "DATA_TYPE": "data_type",
                        "-DATA_TYPE": "-data_type",
                        "REQUESTED_COUNT": "requested_count",
                        "-REQUESTED_COUNT": "-requested_count",
                        "GENERATED_COUNT": "generated_count",
                        "-GENERATED_COUNT": "-generated_count",
                        "ALLOW_DUPLICATES": "allow_duplicates",
                        "-ALLOW_DUPLICATES": "-allow_duplicates",
                        "MAX_VALUE_LENGTH": "max_value_length",
                        "-MAX_VALUE_LENGTH": "-max_value_length",
                        "TRIM_VALUES": "trim_values",
                        "-TRIM_VALUES": "-trim_values",
                        "FILTER_CHARACTERS": "filter_characters",
                        "-FILTER_CHARACTERS": "-filter_characters",
                        "MULTILINE_VALUES": "multiline_values",
                        "-MULTILINE_VALUES": "-multiline_values",
                        "EXPIRATION_TIME": "expiration_time",
                        "-EXPIRATION_TIME": "-expiration_time",
                        "ACCOUNT_ID": "account_id",
                        "-ACCOUNT_ID": "-account_id",
                        "PRIORITY": "priority",
                        "-PRIORITY": "-priority",
                        "SUBMIT_TIME": "submit_time",
                        "-SUBMIT_TIME": "-submit_time",
                        "START_TIME": "start_time",
                        "-START_TIME": "-start_time",
                        "END_TIME": "end_time",
                        "-END_TIME": "-end_time",
                        "LLM_MODEL_NAME": "llm_model_name",
                        "-LLM_MODEL_NAME": "-llm_model_name",
                        "ERROR_TOLERANCE": "error_tolerance",
                        "-ERROR_TOLERANCE": "-error_tolerance"
                    },
                },
                'openapi_types': {
                    'limit':
                        (int,),
                    'cursor':
                        (str,),
                    'sort':
                        (str, none_type,),
                },
                'attribute_map': {
                    'limit': 'limit',
                    'cursor': 'cursor',
                    'sort': 'sort',
                },
                'location_map': {
                    'limit': 'query',
                    'cursor': 'query',
                    'sort': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__get_all_generate_operations
        )

        def __get_generate_operation(
            self,
            generate_data_operation_id,
            **kwargs
        ):
            """Get the details of a data generate operation  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.get_generate_operation(generate_data_operation_id, async_req=True)
            >>> result = thread.get()

            Args:
                generate_data_operation_id (str): The id of the generate data operation

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                GenerateDataOperation
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['generate_data_operation_id'] = \
                generate_data_operation_id
            return self.call_with_http_info(**kwargs)

        self.get_generate_operation = _Endpoint(
            settings={
                'response_type': (GenerateDataOperation,),
                'auth': [
                    'ApiKeyAuth'
                ],
                'endpoint_path': '/ai/generate/{generateDataOperationId}',
                'operation_id': 'get_generate_operation',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'generate_data_operation_id',
                ],
                'required': [
                    'generate_data_operation_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'generate_data_operation_id',
                ]
            },
            root_map={
                'validations': {
                    ('generate_data_operation_id',): {

                        'min_length': 1,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'generate_data_operation_id':
                        (str,),
                },
                'attribute_map': {
                    'generate_data_operation_id': 'generateDataOperationId',
                },
                'location_map': {
                    'generate_data_operation_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__get_generate_operation
        )

        def __get_generate_values(
            self,
            generate_data_operation_id,
            **kwargs
        ):
            """Get all values generated by a data generate operation  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.get_generate_values(generate_data_operation_id, async_req=True)
            >>> result = thread.get()

            Args:
                generate_data_operation_id (str): The id of the generate data operation

            Keyword Args:
                limit (int): Maximum number of objects to return per query. The value must be between 1 and 1000. Default is 100.. [optional] if omitted the server will use the default value of 100
                cursor (str): Cursor to fetch the next or previous page of results. The value of this property must be extracted from the 'prev_cursor' or 'next_cursor' property of a PaginatedResponseMetadata which is contained in the response of list and search API endpoints.. [optional]
                sort (str, none_type): The field to sort results by. A property name with a prepended '-' signifies a descending order.. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                GetGenerateDataValuesResponse
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['generate_data_operation_id'] = \
                generate_data_operation_id
            return self.call_with_http_info(**kwargs)

        self.get_generate_values = _Endpoint(
            settings={
                'response_type': (GetGenerateDataValuesResponse,),
                'auth': [
                    'ApiKeyAuth'
                ],
                'endpoint_path': '/ai/generate/{generateDataOperationId}/values',
                'operation_id': 'get_generate_values',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'generate_data_operation_id',
                    'limit',
                    'cursor',
                    'sort',
                ],
                'required': [
                    'generate_data_operation_id',
                ],
                'nullable': [
                    'sort',
                ],
                'enum': [
                    'sort',
                ],
                'validation': [
                    'generate_data_operation_id',
                    'limit',
                    'cursor',
                ]
            },
            root_map={
                'validations': {
                    ('generate_data_operation_id',): {

                        'min_length': 1,
                    },
                    ('limit',): {

                        'inclusive_maximum': 1000,
                        'inclusive_minimum': 1,
                    },
                    ('cursor',): {
                        'max_length': 4096,
                        'min_length': 1,
                    },
                },
                'allowed_values': {
                    ('sort',): {
                        'None': None,
                        "VALUE": "value",
                        "-VALUE": "-value"
                    },
                },
                'openapi_types': {
                    'generate_data_operation_id':
                        (str,),
                    'limit':
                        (int,),
                    'cursor':
                        (str,),
                    'sort':
                        (str, none_type,),
                },
                'attribute_map': {
                    'generate_data_operation_id': 'generateDataOperationId',
                    'limit': 'limit',
                    'cursor': 'cursor',
                    'sort': 'sort',
                },
                'location_map': {
                    'generate_data_operation_id': 'path',
                    'limit': 'query',
                    'cursor': 'query',
                    'sort': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__get_generate_values
        )

        def __search_all_generate_operations(
            self,
            **kwargs
        ):
            """Search for the details of data generate operations  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.search_all_generate_operations(async_req=True)
            >>> result = thread.get()


            Keyword Args:
                limit (int): Maximum number of objects to return per query. The value must be between 1 and 1000. Default is 100.. [optional] if omitted the server will use the default value of 100
                cursor (str): Cursor to fetch the next or previous page of results. The value of this property must be extracted from the 'prev_cursor' or 'next_cursor' property of a PaginatedResponseMetadata which is contained in the response of list and search API endpoints.. [optional]
                sort (str, none_type): The field to sort results by. A property name with a prepended '-' signifies a descending order.. [optional]
                search_body (SearchBody): A request body containing a filter expression. This enables searching for items matching arbitrarily complex conditions. The list of attributes which can be used in filter expressions is available in the x-filterable vendor extension.  # Filter Expression Overview **Note: All keywords are case-insensitive**  ## Comparison Operators | Operator | Description | Example | | --- | --- | --- | | CONTAINS | Substring or membership testing for string and list attributes respectively. | field3 CONTAINS 'foobar', field4 CONTAINS TRUE  | | IN | Tests if field is a member of a list literal. List can contain a maximum of 100 values | field2 IN ['Goku', 'Vegeta'] | | GE | Tests if a field is greater than or equal to a literal value | field1 GE 1.2e-2 | | GT | Tests if a field is greater than a literal value | field1 GT 1.2e-2 | | LE | Tests if a field is less than or equal to a literal value | field1 LE 9000 | | LT | Tests if a field is less than a literal value | field1 LT 9.02 | | NE | Tests if a field is not equal to a literal value | field1 NE 42 | | EQ | Tests if a field is equal to a literal value | field1 EQ 42 |  ## Search Operator The SEARCH operator filters for items which have any filterable attribute that contains the input string as a substring, comparison is done case-insensitively. This is not restricted to attributes with string values. Specifically `SEARCH '12'` would match an item with an attribute with an integer value of `123`.  ## Logical Operators Ordered by precedence. | Operator | Description | Example | | --- | --- | --- | | NOT | Logical NOT (Right associative) | NOT field1 LE 9000 | | AND | Logical AND (Left Associative) | field1 GT 9000 AND field2 EQ 'Goku' | | OR | Logical OR (Left Associative) | field1 GT 9000 OR field2 EQ 'Goku' |  ## Grouping Parenthesis `()` can be used to override operator precedence.  For example: NOT (field1 LT 1234 AND field2 CONTAINS 'foo')  ## Literal Values | Literal      | Description | Examples | | --- | --- | --- | | Nil | Represents the absence of a value | nil, Nil, nIl, NIL | | Boolean | true/false boolean | true, false, True, False, TRUE, FALSE | | Number | Signed integer and floating point numbers. Also supports scientific notation. | 0, 1, -1, 1.2, 0.35, 1.2e-2, -1.2e+2 | | String | Single or double quoted | \"foo\", \"bar\", \"foo bar\", 'foo', 'bar', 'foo bar' | | Datetime | Formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) | 2018-04-27T18:39:26.397237+00:00 | | List | Comma-separated literals wrapped in square brackets | [0], [0, 1], ['foo', \"bar\"] |  ## Limitations - A maximum of 8 unique identifiers may be used inside a filter expression. . [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                GetAllGenerateDataOperationsResponse
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            return self.call_with_http_info(**kwargs)

        self.search_all_generate_operations = _Endpoint(
            settings={
                'response_type': (GetAllGenerateDataOperationsResponse,),
                'auth': [
                    'ApiKeyAuth'
                ],
                'endpoint_path': '/ai/generate/search',
                'operation_id': 'search_all_generate_operations',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'limit',
                    'cursor',
                    'sort',
                    'search_body',
                ],
                'required': [],
                'nullable': [
                    'sort',
                ],
                'enum': [
                    'sort',
                ],
                'validation': [
                    'limit',
                    'cursor',
                ]
            },
            root_map={
                'validations': {
                    ('limit',): {

                        'inclusive_maximum': 1000,
                        'inclusive_minimum': 1,
                    },
                    ('cursor',): {
                        'max_length': 4096,
                        'min_length': 1,
                    },
                },
                'allowed_values': {
                    ('sort',): {
                        'None': None,
                        "ID": "id",
                        "-ID": "-id",
                        "NAME": "name",
                        "-NAME": "-name",
                        "DESCRIPTION": "description",
                        "-DESCRIPTION": "-description",
                        "STATUS": "status",
                        "-STATUS": "-status",
                        "DATA_TYPE": "data_type",
                        "-DATA_TYPE": "-data_type",
                        "REQUESTED_COUNT": "requested_count",
                        "-REQUESTED_COUNT": "-requested_count",
                        "GENERATED_COUNT": "generated_count",
                        "-GENERATED_COUNT": "-generated_count",
                        "ALLOW_DUPLICATES": "allow_duplicates",
                        "-ALLOW_DUPLICATES": "-allow_duplicates",
                        "MAX_VALUE_LENGTH": "max_value_length",
                        "-MAX_VALUE_LENGTH": "-max_value_length",
                        "TRIM_VALUES": "trim_values",
                        "-TRIM_VALUES": "-trim_values",
                        "FILTER_CHARACTERS": "filter_characters",
                        "-FILTER_CHARACTERS": "-filter_characters",
                        "MULTILINE_VALUES": "multiline_values",
                        "-MULTILINE_VALUES": "-multiline_values",
                        "EXPIRATION_TIME": "expiration_time",
                        "-EXPIRATION_TIME": "-expiration_time",
                        "ACCOUNT_ID": "account_id",
                        "-ACCOUNT_ID": "-account_id",
                        "PRIORITY": "priority",
                        "-PRIORITY": "-priority",
                        "SUBMIT_TIME": "submit_time",
                        "-SUBMIT_TIME": "-submit_time",
                        "START_TIME": "start_time",
                        "-START_TIME": "-start_time",
                        "END_TIME": "end_time",
                        "-END_TIME": "-end_time",
                        "LLM_MODEL_NAME": "llm_model_name",
                        "-LLM_MODEL_NAME": "-llm_model_name",
                        "ERROR_TOLERANCE": "error_tolerance",
                        "-ERROR_TOLERANCE": "-error_tolerance"
                    },
                },
                'openapi_types': {
                    'limit':
                        (int,),
                    'cursor':
                        (str,),
                    'sort':
                        (str, none_type,),
                    'search_body':
                        (SearchBody,),
                },
                'attribute_map': {
                    'limit': 'limit',
                    'cursor': 'cursor',
                    'sort': 'sort',
                },
                'location_map': {
                    'limit': 'query',
                    'cursor': 'query',
                    'sort': 'query',
                    'search_body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__search_all_generate_operations
        )
