"""
    Delphix DCT API

    Delphix DCT API  # noqa: E501

    The version of the OpenAPI document: 3.24.0
    Contact: support@delphix.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from delphix.api.gateway.model_utils import (  # noqa: F401
    ApiTypeError,
    ModelComposed,
    ModelNormal,
    ModelSimple,
    cached_property,
    change_keys_js_to_python,
    convert_js_args_to_python_args,
    date,
    datetime,
    file_type,
    none_type,
    validate_get_composed_info,
)
from ..model_utils import OpenApiModel
from delphix.api.gateway.exceptions import ApiAttributeError


def lazy_import():
    from delphix.api.gateway.model.generate_data_attribute import GenerateDataAttribute
    globals()['GenerateDataAttribute'] = GenerateDataAttribute


class GenerateDataRequest(ModelNormal):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Attributes:
      allowed_values (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          with a capitalized key describing the allowed value and an allowed
          value. These dicts store the allowed enum values.
      attribute_map (dict): The key is attribute name
          and the value is json key in definition.
      discriminator_value_class_map (dict): A dict to go from the discriminator
          variable value to the discriminator class name.
      validations (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          that stores validations for max_length, min_length, max_items,
          min_items, exclusive_maximum, inclusive_maximum, exclusive_minimum,
          inclusive_minimum, and regex.
      additional_properties_type (tuple): A tuple of classes accepted
          as additional properties values.
    """

    allowed_values = {
    }

    validations = {
        ('attributes',): {
            'min_items': 0,
        },
        ('max_value_length',): {
            'inclusive_maximum': 4000,
            'inclusive_minimum': 1,
        },
        ('requested_count',): {
            'inclusive_minimum': 1,
        },
    }

    @cached_property
    def additional_properties_type():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded
        """
        lazy_import()
        return (bool, date, datetime, dict, float, int, list, str, none_type,)  # noqa: E501

    _nullable = False

    @cached_property
    def openapi_types():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded

        Returns
            openapi_types (dict): The key is attribute name
                and the value is attribute type.
        """
        lazy_import()
        return {
            'name': (str,),  # noqa: E501
            'data_type': (str,),  # noqa: E501
            'multiline_values': (bool,),  # noqa: E501
            'description': (str,),  # noqa: E501
            'attributes': ([GenerateDataAttribute],),  # noqa: E501
            'max_value_length': (int,),  # noqa: E501
            'requested_count': (int,),  # noqa: E501
            'filter_characters': (str,),  # noqa: E501
            'allow_duplicates': (bool,),  # noqa: E501
            'trim_values': (bool,),  # noqa: E501
            'retention_time': (int,),  # noqa: E501
            'error_tolerance': (int,),  # noqa: E501
            'priority': (int,),  # noqa: E501
        }

    @cached_property
    def discriminator():
        return None


    attribute_map = {
        'name': 'name',  # noqa: E501
        'data_type': 'data_type',  # noqa: E501
        'multiline_values': 'multiline_values',  # noqa: E501
        'description': 'description',  # noqa: E501
        'attributes': 'attributes',  # noqa: E501
        'max_value_length': 'max_value_length',  # noqa: E501
        'requested_count': 'requested_count',  # noqa: E501
        'filter_characters': 'filter_characters',  # noqa: E501
        'allow_duplicates': 'allow_duplicates',  # noqa: E501
        'trim_values': 'trim_values',  # noqa: E501
        'retention_time': 'retention_time',  # noqa: E501
        'error_tolerance': 'error_tolerance',  # noqa: E501
        'priority': 'priority',  # noqa: E501
    }

    read_only_vars = {
    }

    _composed_schemas = {}

    @classmethod
    @convert_js_args_to_python_args
    def _from_openapi_data(cls, name, data_type, multiline_values, *args, **kwargs):  # noqa: E501
        """GenerateDataRequest - a model defined in OpenAPI

        Args:
            name (str): A name for this data generation request. This name will be used for the generated file, if requested.
            data_type (str): The type of data to generate
            multiline_values (bool): Whether to allow generation of multiline values. Values generated with this setting true cannot be exported to secure lookup files. When this value is false, multiline values are rejected.

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
            description (str): An optional description for this data generation request. [optional]  # noqa: E501
            attributes ([GenerateDataAttribute]): Attributes to use when generating some values. For each attribute, generation will iterate over each value, so each attribute value will apply to a subset of the generated values. An empty \"\" in the values list will cause generation skip this attribute for some generated values.. [optional]  # noqa: E501
            max_value_length (int): The maximum length in characters for each generated value. Generated values which are too long are discarded. The default value depends on whether multiline_values is enabled.. [optional]  # noqa: E501
            requested_count (int): The number of values to generate. [optional] if omitted the server will use the default value of 10  # noqa: E501
            filter_characters (str): A Java regular expression that matches each character to filter from the generated values.. [optional] if omitted the server will use the default value of ""  # noqa: E501
            allow_duplicates (bool): Whether to allow duplicate values in the generated value list. [optional] if omitted the server will use the default value of False  # noqa: E501
            trim_values (bool): Whether to trim leading and trailing whitespace from generated values.. [optional] if omitted the server will use the default value of True  # noqa: E501
            retention_time (int): The length of time, in seconds, that generated values should be made available in the API. Values will always be available while the generated request is running. No value means data will be retained indefinitely.. [optional]  # noqa: E501
            error_tolerance (int): The quantity of unusable, duplicate or failed LLM prompts allowed before the generate operation will fail. This value is expressed as a percentage multiple of total expected number of prompts need to complete the generate operation. Given the high likelihood of duplicate values, this value should not be decreased unless it is critical to time/resource bound the generate operation.. [optional] if omitted the server will use the default value of 300  # noqa: E501
            priority (int): The request priority, where higher values mean higher priority. This will typically be 0 for bulk operations and 1 for sample generation.. [optional] if omitted the server will use the default value of 0  # noqa: E501
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        self = super(OpenApiModel, cls).__new__(cls)

        if args:
            raise ApiTypeError(
                "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                    args,
                    self.__class__.__name__,
                ),
                path_to_item=_path_to_item,
                valid_classes=(self.__class__,),
            )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        self.name = name
        self.data_type = data_type
        self.multiline_values = multiline_values
        for var_name, var_value in kwargs.items():
            if var_name not in self.attribute_map and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self.additional_properties_type is None:
                # discard variable.
                continue
            setattr(self, var_name, var_value)
        return self

    required_properties = set([
        '_data_store',
        '_check_type',
        '_spec_property_naming',
        '_path_to_item',
        '_configuration',
        '_visited_composed_classes',
    ])

    @convert_js_args_to_python_args
    def __init__(self, name, data_type, multiline_values, *args, **kwargs):  # noqa: E501
        """GenerateDataRequest - a model defined in OpenAPI

        Args:
            name (str): A name for this data generation request. This name will be used for the generated file, if requested.
            data_type (str): The type of data to generate
            multiline_values (bool): Whether to allow generation of multiline values. Values generated with this setting true cannot be exported to secure lookup files. When this value is false, multiline values are rejected.

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
            description (str): An optional description for this data generation request. [optional]  # noqa: E501
            attributes ([GenerateDataAttribute]): Attributes to use when generating some values. For each attribute, generation will iterate over each value, so each attribute value will apply to a subset of the generated values. An empty \"\" in the values list will cause generation skip this attribute for some generated values.. [optional]  # noqa: E501
            max_value_length (int): The maximum length in characters for each generated value. Generated values which are too long are discarded. The default value depends on whether multiline_values is enabled.. [optional]  # noqa: E501
            requested_count (int): The number of values to generate. [optional] if omitted the server will use the default value of 10  # noqa: E501
            filter_characters (str): A Java regular expression that matches each character to filter from the generated values.. [optional] if omitted the server will use the default value of ""  # noqa: E501
            allow_duplicates (bool): Whether to allow duplicate values in the generated value list. [optional] if omitted the server will use the default value of False  # noqa: E501
            trim_values (bool): Whether to trim leading and trailing whitespace from generated values.. [optional] if omitted the server will use the default value of True  # noqa: E501
            retention_time (int): The length of time, in seconds, that generated values should be made available in the API. Values will always be available while the generated request is running. No value means data will be retained indefinitely.. [optional]  # noqa: E501
            error_tolerance (int): The quantity of unusable, duplicate or failed LLM prompts allowed before the generate operation will fail. This value is expressed as a percentage multiple of total expected number of prompts need to complete the generate operation. Given the high likelihood of duplicate values, this value should not be decreased unless it is critical to time/resource bound the generate operation.. [optional] if omitted the server will use the default value of 300  # noqa: E501
            priority (int): The request priority, where higher values mean higher priority. This will typically be 0 for bulk operations and 1 for sample generation.. [optional] if omitted the server will use the default value of 0  # noqa: E501
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        if args:
            raise ApiTypeError(
                "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                    args,
                    self.__class__.__name__,
                ),
                path_to_item=_path_to_item,
                valid_classes=(self.__class__,),
            )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        self.name = name
        self.data_type = data_type
        self.multiline_values = multiline_values
        for var_name, var_value in kwargs.items():
            if var_name not in self.attribute_map and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self.additional_properties_type is None:
                # discard variable.
                continue
            setattr(self, var_name, var_value)
            if var_name in self.read_only_vars:
                raise ApiAttributeError(f"`{var_name}` is a read-only attribute. Use `from_openapi_data` to instantiate "
                                     f"class with read only attributes.")
