"""
    Delphix DCT API

    Delphix DCT API  # noqa: E501

    The version of the OpenAPI document: 3.24.0
    Contact: support@delphix.com
    Generated by: https://openapi-generator.tech
"""


import unittest

import delphix.api.gateway
from delphix.api.gateway.api.vdbs_api import VDBsApi  # noqa: E501


class TestVDBsApi(unittest.TestCase):
    """VDBsApi unit test stubs"""

    def setUp(self):
        self.api = VDBsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_vdb_tags(self):
        """Test case for create_vdb_tags

        Create tags for a VDB.  # noqa: E501
        """
        pass

    def test_delete_vdb(self):
        """Test case for delete_vdb

        Delete a VDB.  # noqa: E501
        """
        pass

    def test_delete_vdb_tags(self):
        """Test case for delete_vdb_tags

        Delete tags for a VDB.  # noqa: E501
        """
        pass

    def test_disable_vdb(self):
        """Test case for disable_vdb

        Disable a VDB.  # noqa: E501
        """
        pass

    def test_empty_vdb(self):
        """Test case for empty_vdb

        Provision an empty VDB.  # noqa: E501
        """
        pass

    def test_enable_vdb(self):
        """Test case for enable_vdb

        Enable a VDB.  # noqa: E501
        """
        pass

    def test_export_vdb_by_location(self):
        """Test case for export_vdb_by_location

        Export a vdb using timeflow location to a physical file system  # noqa: E501
        """
        pass

    def test_export_vdb_by_snapshot(self):
        """Test case for export_vdb_by_snapshot

        Export a vdb using snapshot to a physical file system  # noqa: E501
        """
        pass

    def test_export_vdb_by_timestamp(self):
        """Test case for export_vdb_by_timestamp

        Export a vdb using timestamp to a physical file system  # noqa: E501
        """
        pass

    def test_export_vdb_from_bookmark(self):
        """Test case for export_vdb_from_bookmark

        Export a vdb using bookmark to physical file system  # noqa: E501
        """
        pass

    def test_export_vdb_in_place(self):
        """Test case for export_vdb_in_place

        Convert a virtual database to a physical database on physical file system.  # noqa: E501
        """
        pass

    def test_export_vdb_to_asm_by_bookmark(self):
        """Test case for export_vdb_to_asm_by_bookmark

        Export a vdb using bookmark to an ASM file system  # noqa: E501
        """
        pass

    def test_export_vdb_to_asm_by_location(self):
        """Test case for export_vdb_to_asm_by_location

        Export a vdb using SCN to an ASM file system  # noqa: E501
        """
        pass

    def test_export_vdb_to_asm_by_snapshot(self):
        """Test case for export_vdb_to_asm_by_snapshot

        Export a vdb using snapshot to an ASM file system  # noqa: E501
        """
        pass

    def test_export_vdb_to_asm_by_timestamp(self):
        """Test case for export_vdb_to_asm_by_timestamp

        Export a vdb using timestamp to an ASM file system  # noqa: E501
        """
        pass

    def test_get_bookmarks_by_vdb(self):
        """Test case for get_bookmarks_by_vdb

        List Bookmarks compatible with this VDB.  # noqa: E501
        """
        pass

    def test_get_migrate_compatible_repo(self):
        """Test case for get_migrate_compatible_repo

        Returns a list of compatible repositories for vdb migration.  # noqa: E501
        """
        pass

    def test_get_tags_vdb(self):
        """Test case for get_tags_vdb

        Get tags for a VDB.  # noqa: E501
        """
        pass

    def test_get_upgrade_compatible_repo_for_vdb(self):
        """Test case for get_upgrade_compatible_repo_for_vdb

        Returns a list of compatible repositories for vdb upgrade.  # noqa: E501
        """
        pass

    def test_get_vdb_by_id(self):
        """Test case for get_vdb_by_id

        Get a VDB by ID.  # noqa: E501
        """
        pass

    def test_get_vdb_deletion_dependencies(self):
        """Test case for get_vdb_deletion_dependencies

        Get deletion dependencies of a VDB.  # noqa: E501
        """
        pass

    def test_get_vdb_snapshots(self):
        """Test case for get_vdb_snapshots

        List Snapshots for a VDB.  # noqa: E501
        """
        pass

    def test_get_vdbs(self):
        """Test case for get_vdbs

        List all vdbs.  # noqa: E501
        """
        pass

    def test_lock_vdb(self):
        """Test case for lock_vdb

        Lock a VDB.  # noqa: E501
        """
        pass

    def test_migrate_vdb(self):
        """Test case for migrate_vdb

        Migrate a VDB.  # noqa: E501
        """
        pass

    def test_oracle_asm_in_place_vdb_export(self):
        """Test case for oracle_asm_in_place_vdb_export

        Convert a virtual database to a physical database on Oracle ASM file system.  # noqa: E501
        """
        pass

    def test_provision_vdb_by_location(self):
        """Test case for provision_vdb_by_location

        Provision a new VDB by location.  # noqa: E501
        """
        pass

    def test_provision_vdb_by_location_defaults(self):
        """Test case for provision_vdb_by_location_defaults

        Get default provision parameters for provisioning a new VDB by location.  # noqa: E501
        """
        pass

    def test_provision_vdb_by_snapshot(self):
        """Test case for provision_vdb_by_snapshot

        Provision a new VDB by snapshot.  # noqa: E501
        """
        pass

    def test_provision_vdb_by_snapshot_defaults(self):
        """Test case for provision_vdb_by_snapshot_defaults

        Get default provision parameters for provisioning a new VDB by snapshot.  # noqa: E501
        """
        pass

    def test_provision_vdb_by_timestamp(self):
        """Test case for provision_vdb_by_timestamp

        Provision a new VDB by timestamp.  # noqa: E501
        """
        pass

    def test_provision_vdb_by_timestamp_defaults(self):
        """Test case for provision_vdb_by_timestamp_defaults

        Get default provision parameters for provisioning a new VDB by timestamp.  # noqa: E501
        """
        pass

    def test_provision_vdb_from_bookmark(self):
        """Test case for provision_vdb_from_bookmark

        Provision a new VDB from a bookmark with a single VDB.  # noqa: E501
        """
        pass

    def test_provision_vdb_from_bookmark_defaults(self):
        """Test case for provision_vdb_from_bookmark_defaults

        Get default provision parameters for provisioning a new VDB from a bookmark.  # noqa: E501
        """
        pass

    def test_refresh_vdb_by_location(self):
        """Test case for refresh_vdb_by_location

        Refresh a VDB by location.  # noqa: E501
        """
        pass

    def test_refresh_vdb_by_snapshot(self):
        """Test case for refresh_vdb_by_snapshot

        Refresh a VDB by snapshot.  # noqa: E501
        """
        pass

    def test_refresh_vdb_by_timestamp(self):
        """Test case for refresh_vdb_by_timestamp

        Refresh a VDB by timestamp.  # noqa: E501
        """
        pass

    def test_refresh_vdb_from_bookmark(self):
        """Test case for refresh_vdb_from_bookmark

        Refresh a VDB from bookmark with a single VDB.  # noqa: E501
        """
        pass

    def test_rollback_vdb_by_snapshot(self):
        """Test case for rollback_vdb_by_snapshot

        Rollback a VDB by snapshot.  # noqa: E501
        """
        pass

    def test_rollback_vdb_by_timestamp(self):
        """Test case for rollback_vdb_by_timestamp

        Rollback a VDB by timestamp.  # noqa: E501
        """
        pass

    def test_rollback_vdb_from_bookmark(self):
        """Test case for rollback_vdb_from_bookmark

        Rollback a VDB from a bookmark with only the same VDB.  # noqa: E501
        """
        pass

    def test_search_bookmarks_by_vdb(self):
        """Test case for search_bookmarks_by_vdb

        Search Bookmarks compatible with this VDB.  # noqa: E501
        """
        pass

    def test_search_vdbs(self):
        """Test case for search_vdbs

        Search for VDBs.  # noqa: E501
        """
        pass

    def test_snapshot_vdb(self):
        """Test case for snapshot_vdb

        Snapshot a VDB.  # noqa: E501
        """
        pass

    def test_start_vdb(self):
        """Test case for start_vdb

        Start a VDB.  # noqa: E501
        """
        pass

    def test_stop_vdb(self):
        """Test case for stop_vdb

        Stop a VDB.  # noqa: E501
        """
        pass

    def test_switch_timeflow(self):
        """Test case for switch_timeflow

        Switches the current timeflow of a VDB.  # noqa: E501
        """
        pass

    def test_undo_refresh(self):
        """Test case for undo_refresh

        Undo the last refresh operation.  # noqa: E501
        """
        pass

    def test_unlock_vdb(self):
        """Test case for unlock_vdb

        Unlock a VDB.  # noqa: E501
        """
        pass

    def test_update_vdb_by_id(self):
        """Test case for update_vdb_by_id

        Update values of a VDB  # noqa: E501
        """
        pass

    def test_upgrade_oracle_vdb(self):
        """Test case for upgrade_oracle_vdb

        Upgrade Oracle VDB  # noqa: E501
        """
        pass

    def test_upgrade_vdb(self):
        """Test case for upgrade_vdb

        Upgrade VDB  # noqa: E501
        """
        pass

    def test_verify_vdb_jdbc_connection_string(self):
        """Test case for verify_vdb_jdbc_connection_string

        Verify JDBC connection string for VDB.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
