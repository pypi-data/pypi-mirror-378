Metadata-Version: 2.4
Name: trainwave-jupyter
Version: 0.1.1
Summary: Make trainwave.ai available right in your notebook for fast, cheap and efficient GPU workloads.
Project-URL: Homepage, https://gitlab.com/ezml1/jupyter-extension
Project-URL: Bug Tracker, https://gitlab.com/ezml1/jupyter-extension/issues
Project-URL: Repository, https://gitlab.com/ezml1/jupyter-extension.git
Author-email: "Trainwave.ai" <johan@trainwave.ai>
License: BSD 3-Clause License
        
        Copyright (c) 2025, Trainwave.ai
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        1. Redistributions of source code must retain the above copyright notice, this
           list of conditions and the following disclaimer.
        
        2. Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
        
        3. Neither the name of the copyright holder nor the names of its
           contributors may be used to endorse or promote products derived from
           this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
License-File: LICENSE
Keywords: jupyter,jupyterlab,jupyterlab-extension
Classifier: Framework :: Jupyter
Classifier: Framework :: Jupyter :: JupyterLab
Classifier: Framework :: Jupyter :: JupyterLab :: 4
Classifier: Framework :: Jupyter :: JupyterLab :: Extensions
Classifier: Framework :: Jupyter :: JupyterLab :: Extensions :: Prebuilt
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.9
Requires-Dist: aiofiles>=24.1.0
Requires-Dist: aiohttp>=3.8.0
Requires-Dist: jupyter-server<3,>=2.4.0
Requires-Dist: jupyterlab>=4.4.7
Requires-Dist: loguru>=0.7.3
Requires-Dist: nbconvert
Requires-Dist: nbformat
Requires-Dist: pathspec>=0.12.1
Requires-Dist: tqdm>=4.67.1
Provides-Extra: test
Requires-Dist: coverage; extra == 'test'
Requires-Dist: pytest; extra == 'test'
Requires-Dist: pytest-asyncio; extra == 'test'
Requires-Dist: pytest-cov; extra == 'test'
Requires-Dist: pytest-jupyter[server]>=0.6.0; extra == 'test'
Description-Content-Type: text/markdown

# Trainwave Jupyter Extension

Make trainwave.ai available right in your notebook for fast, cheap and efficient GPU workloads.

This extension is composed of a Python package named `trainwave-jupyter`
for the server extension and a NPM package named `trainwave-jupyter`
for the frontend extension.

## Development

This project uses `uv` for Python dependency management and includes a comprehensive Makefile for development tasks.

### Setup

```bash
# Install uv if you haven't already
curl -LsSf https://astral.sh/uv/install.sh | sh

# We need jupyterlab ahead of time to build frontend
pip install jupyterlab
```

1. `make dev` -- this will build and run the watch command to refresh automatically on changes.
2. In another shell run `make run-server` which will start the actual notebook server
