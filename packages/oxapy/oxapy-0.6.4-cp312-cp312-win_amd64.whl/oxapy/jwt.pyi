# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

import builtins

class Jwt:
    r"""
    Python class for generating and verifying JWT tokens
    """
    def __new__(cls, secret:builtins.str, algorithm:builtins.str='HS256') -> Jwt:
        r"""
        Create a new JWT
        
        Args:
            secret (str): Secret key used for signing tokens
            algorithm (str): JWT algorithm to use (default: "HS256")
        
        Returns:
            Jwt: A new Jwt instance
        
        Raises:
            Exception: If the algorithm is not supported or secret is invalid
        
        Example:
        ```python
        jwt = Jwt(secret="mysecret", algorithm="HS256")
        ```
        """
    def generate_token(self, claims:dict) -> builtins.str:
        r"""
        Generate a JWT token with the given claims
        
        Args:
            claims: A dictionary of claims to include in the token
        
        Returns:
            JWT token string
        
        Raises:
            Exception: If claims cannot be serialized or the token cannot be generated
        
        Example:
        ```python
        claims = {
            "exp": 3600,  # seconds from now
            "sub": "user123",  # subject (optional)
            "iss": "myapp",    # issuer (optional)
            "aud": "webapp",   # audience (optional)
            "nbf": 1234567890  # not before timestamp (optional)
        }
        token = jwt.generate_token(claims)
        ```
        """
    def verify_token(self, token:builtins.str) -> dict:
        r"""
        Verify the integrity of the JWT token
        
        Args:
            token: A JWT token String
        
        Returns:
            Return Dictionary: the claims that you use to generate the token
        
        Raises:
            JwtError: if token was expired or not valid token
        
        Example:
        ```python
        jwt.verify_token("mytoken")
        ```
        """


class JwtError(BaseException): ...
class JwtEncodingError(JwtError): ...
class JwtDecodingError(JwtError): ...
class JwtInvalidAlgorithm(JwtError): ...
class JwtInvalidClaim(JwtError): ...
