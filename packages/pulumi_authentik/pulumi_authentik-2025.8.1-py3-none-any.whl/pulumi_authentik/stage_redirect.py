# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['StageRedirectArgs', 'StageRedirect']

@pulumi.input_type
class StageRedirectArgs:
    def __init__(__self__, *,
                 keep_context: Optional[pulumi.Input[builtins.bool]] = None,
                 mode: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 stage_redirect_id: Optional[pulumi.Input[builtins.str]] = None,
                 target_flow: Optional[pulumi.Input[builtins.str]] = None,
                 target_static: Optional[pulumi.Input[builtins.str]] = None):
        """
        The set of arguments for constructing a StageRedirect resource.
        :param pulumi.Input[builtins.bool] keep_context: Defaults to `true`.
        :param pulumi.Input[builtins.str] mode: Allowed values: - `static` - `flow` Defaults to `flow`.
        """
        if keep_context is not None:
            pulumi.set(__self__, "keep_context", keep_context)
        if mode is not None:
            pulumi.set(__self__, "mode", mode)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if stage_redirect_id is not None:
            pulumi.set(__self__, "stage_redirect_id", stage_redirect_id)
        if target_flow is not None:
            pulumi.set(__self__, "target_flow", target_flow)
        if target_static is not None:
            pulumi.set(__self__, "target_static", target_static)

    @property
    @pulumi.getter(name="keepContext")
    def keep_context(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Defaults to `true`.
        """
        return pulumi.get(self, "keep_context")

    @keep_context.setter
    def keep_context(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "keep_context", value)

    @property
    @pulumi.getter
    def mode(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Allowed values: - `static` - `flow` Defaults to `flow`.
        """
        return pulumi.get(self, "mode")

    @mode.setter
    def mode(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "mode", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="stageRedirectId")
    def stage_redirect_id(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "stage_redirect_id")

    @stage_redirect_id.setter
    def stage_redirect_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "stage_redirect_id", value)

    @property
    @pulumi.getter(name="targetFlow")
    def target_flow(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "target_flow")

    @target_flow.setter
    def target_flow(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "target_flow", value)

    @property
    @pulumi.getter(name="targetStatic")
    def target_static(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "target_static")

    @target_static.setter
    def target_static(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "target_static", value)


@pulumi.input_type
class _StageRedirectState:
    def __init__(__self__, *,
                 keep_context: Optional[pulumi.Input[builtins.bool]] = None,
                 mode: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 stage_redirect_id: Optional[pulumi.Input[builtins.str]] = None,
                 target_flow: Optional[pulumi.Input[builtins.str]] = None,
                 target_static: Optional[pulumi.Input[builtins.str]] = None):
        """
        Input properties used for looking up and filtering StageRedirect resources.
        :param pulumi.Input[builtins.bool] keep_context: Defaults to `true`.
        :param pulumi.Input[builtins.str] mode: Allowed values: - `static` - `flow` Defaults to `flow`.
        """
        if keep_context is not None:
            pulumi.set(__self__, "keep_context", keep_context)
        if mode is not None:
            pulumi.set(__self__, "mode", mode)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if stage_redirect_id is not None:
            pulumi.set(__self__, "stage_redirect_id", stage_redirect_id)
        if target_flow is not None:
            pulumi.set(__self__, "target_flow", target_flow)
        if target_static is not None:
            pulumi.set(__self__, "target_static", target_static)

    @property
    @pulumi.getter(name="keepContext")
    def keep_context(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Defaults to `true`.
        """
        return pulumi.get(self, "keep_context")

    @keep_context.setter
    def keep_context(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "keep_context", value)

    @property
    @pulumi.getter
    def mode(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Allowed values: - `static` - `flow` Defaults to `flow`.
        """
        return pulumi.get(self, "mode")

    @mode.setter
    def mode(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "mode", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="stageRedirectId")
    def stage_redirect_id(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "stage_redirect_id")

    @stage_redirect_id.setter
    def stage_redirect_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "stage_redirect_id", value)

    @property
    @pulumi.getter(name="targetFlow")
    def target_flow(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "target_flow")

    @target_flow.setter
    def target_flow(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "target_flow", value)

    @property
    @pulumi.getter(name="targetStatic")
    def target_static(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "target_static")

    @target_static.setter
    def target_static(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "target_static", value)


@pulumi.type_token("authentik:index/stageRedirect:StageRedirect")
class StageRedirect(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 keep_context: Optional[pulumi.Input[builtins.bool]] = None,
                 mode: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 stage_redirect_id: Optional[pulumi.Input[builtins.str]] = None,
                 target_flow: Optional[pulumi.Input[builtins.str]] = None,
                 target_static: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        """
        Create a StageRedirect resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.bool] keep_context: Defaults to `true`.
        :param pulumi.Input[builtins.str] mode: Allowed values: - `static` - `flow` Defaults to `flow`.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[StageRedirectArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a StageRedirect resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param StageRedirectArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(StageRedirectArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 keep_context: Optional[pulumi.Input[builtins.bool]] = None,
                 mode: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 stage_redirect_id: Optional[pulumi.Input[builtins.str]] = None,
                 target_flow: Optional[pulumi.Input[builtins.str]] = None,
                 target_static: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = StageRedirectArgs.__new__(StageRedirectArgs)

            __props__.__dict__["keep_context"] = keep_context
            __props__.__dict__["mode"] = mode
            __props__.__dict__["name"] = name
            __props__.__dict__["stage_redirect_id"] = stage_redirect_id
            __props__.__dict__["target_flow"] = target_flow
            __props__.__dict__["target_static"] = target_static
        super(StageRedirect, __self__).__init__(
            'authentik:index/stageRedirect:StageRedirect',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            keep_context: Optional[pulumi.Input[builtins.bool]] = None,
            mode: Optional[pulumi.Input[builtins.str]] = None,
            name: Optional[pulumi.Input[builtins.str]] = None,
            stage_redirect_id: Optional[pulumi.Input[builtins.str]] = None,
            target_flow: Optional[pulumi.Input[builtins.str]] = None,
            target_static: Optional[pulumi.Input[builtins.str]] = None) -> 'StageRedirect':
        """
        Get an existing StageRedirect resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.bool] keep_context: Defaults to `true`.
        :param pulumi.Input[builtins.str] mode: Allowed values: - `static` - `flow` Defaults to `flow`.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _StageRedirectState.__new__(_StageRedirectState)

        __props__.__dict__["keep_context"] = keep_context
        __props__.__dict__["mode"] = mode
        __props__.__dict__["name"] = name
        __props__.__dict__["stage_redirect_id"] = stage_redirect_id
        __props__.__dict__["target_flow"] = target_flow
        __props__.__dict__["target_static"] = target_static
        return StageRedirect(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="keepContext")
    def keep_context(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Defaults to `true`.
        """
        return pulumi.get(self, "keep_context")

    @property
    @pulumi.getter
    def mode(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Allowed values: - `static` - `flow` Defaults to `flow`.
        """
        return pulumi.get(self, "mode")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[builtins.str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="stageRedirectId")
    def stage_redirect_id(self) -> pulumi.Output[builtins.str]:
        return pulumi.get(self, "stage_redirect_id")

    @property
    @pulumi.getter(name="targetFlow")
    def target_flow(self) -> pulumi.Output[Optional[builtins.str]]:
        return pulumi.get(self, "target_flow")

    @property
    @pulumi.getter(name="targetStatic")
    def target_static(self) -> pulumi.Output[Optional[builtins.str]]:
        return pulumi.get(self, "target_static")

