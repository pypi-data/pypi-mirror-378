# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetGroupUsersObjResult',
    'GetGroupsGroupResult',
    'GetGroupsGroupUsersObjResult',
    'GetUsersUserResult',
]

@pulumi.output_type
class GetGroupUsersObjResult(dict):
    def __init__(__self__, *,
                 attributes: builtins.str,
                 email: builtins.str,
                 is_active: builtins.bool,
                 last_login: builtins.str,
                 name: builtins.str,
                 pk: builtins.float,
                 uid: builtins.str,
                 username: builtins.str):
        pulumi.set(__self__, "attributes", attributes)
        pulumi.set(__self__, "email", email)
        pulumi.set(__self__, "is_active", is_active)
        pulumi.set(__self__, "last_login", last_login)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "pk", pk)
        pulumi.set(__self__, "uid", uid)
        pulumi.set(__self__, "username", username)

    @property
    @pulumi.getter
    def attributes(self) -> builtins.str:
        return pulumi.get(self, "attributes")

    @property
    @pulumi.getter
    def email(self) -> builtins.str:
        return pulumi.get(self, "email")

    @property
    @pulumi.getter(name="isActive")
    def is_active(self) -> builtins.bool:
        return pulumi.get(self, "is_active")

    @property
    @pulumi.getter(name="lastLogin")
    def last_login(self) -> builtins.str:
        return pulumi.get(self, "last_login")

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def pk(self) -> builtins.float:
        return pulumi.get(self, "pk")

    @property
    @pulumi.getter
    def uid(self) -> builtins.str:
        return pulumi.get(self, "uid")

    @property
    @pulumi.getter
    def username(self) -> builtins.str:
        return pulumi.get(self, "username")


@pulumi.output_type
class GetGroupsGroupResult(dict):
    def __init__(__self__, *,
                 attributes: builtins.str,
                 is_superuser: builtins.bool,
                 name: builtins.str,
                 num_pk: builtins.float,
                 parent: builtins.str,
                 parent_name: builtins.str,
                 pk: builtins.str,
                 users: Sequence[builtins.float],
                 users_objs: Sequence['outputs.GetGroupsGroupUsersObjResult']):
        pulumi.set(__self__, "attributes", attributes)
        pulumi.set(__self__, "is_superuser", is_superuser)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "num_pk", num_pk)
        pulumi.set(__self__, "parent", parent)
        pulumi.set(__self__, "parent_name", parent_name)
        pulumi.set(__self__, "pk", pk)
        pulumi.set(__self__, "users", users)
        pulumi.set(__self__, "users_objs", users_objs)

    @property
    @pulumi.getter
    def attributes(self) -> builtins.str:
        return pulumi.get(self, "attributes")

    @property
    @pulumi.getter(name="isSuperuser")
    def is_superuser(self) -> builtins.bool:
        return pulumi.get(self, "is_superuser")

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="numPk")
    def num_pk(self) -> builtins.float:
        return pulumi.get(self, "num_pk")

    @property
    @pulumi.getter
    def parent(self) -> builtins.str:
        return pulumi.get(self, "parent")

    @property
    @pulumi.getter(name="parentName")
    def parent_name(self) -> builtins.str:
        return pulumi.get(self, "parent_name")

    @property
    @pulumi.getter
    def pk(self) -> builtins.str:
        return pulumi.get(self, "pk")

    @property
    @pulumi.getter
    def users(self) -> Sequence[builtins.float]:
        return pulumi.get(self, "users")

    @property
    @pulumi.getter(name="usersObjs")
    def users_objs(self) -> Sequence['outputs.GetGroupsGroupUsersObjResult']:
        return pulumi.get(self, "users_objs")


@pulumi.output_type
class GetGroupsGroupUsersObjResult(dict):
    def __init__(__self__, *,
                 attributes: builtins.str,
                 email: builtins.str,
                 is_active: builtins.bool,
                 last_login: builtins.str,
                 name: builtins.str,
                 pk: builtins.float,
                 uid: builtins.str,
                 username: builtins.str):
        pulumi.set(__self__, "attributes", attributes)
        pulumi.set(__self__, "email", email)
        pulumi.set(__self__, "is_active", is_active)
        pulumi.set(__self__, "last_login", last_login)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "pk", pk)
        pulumi.set(__self__, "uid", uid)
        pulumi.set(__self__, "username", username)

    @property
    @pulumi.getter
    def attributes(self) -> builtins.str:
        return pulumi.get(self, "attributes")

    @property
    @pulumi.getter
    def email(self) -> builtins.str:
        return pulumi.get(self, "email")

    @property
    @pulumi.getter(name="isActive")
    def is_active(self) -> builtins.bool:
        return pulumi.get(self, "is_active")

    @property
    @pulumi.getter(name="lastLogin")
    def last_login(self) -> builtins.str:
        return pulumi.get(self, "last_login")

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def pk(self) -> builtins.float:
        return pulumi.get(self, "pk")

    @property
    @pulumi.getter
    def uid(self) -> builtins.str:
        return pulumi.get(self, "uid")

    @property
    @pulumi.getter
    def username(self) -> builtins.str:
        return pulumi.get(self, "username")


@pulumi.output_type
class GetUsersUserResult(dict):
    def __init__(__self__, *,
                 attributes: builtins.str,
                 avatar: builtins.str,
                 date_joined: builtins.str,
                 email: builtins.str,
                 groups: Sequence[builtins.str],
                 is_active: builtins.bool,
                 is_superuser: builtins.bool,
                 last_login: builtins.str,
                 name: builtins.str,
                 path: builtins.str,
                 pk: builtins.float,
                 type: builtins.str,
                 uid: builtins.str,
                 username: builtins.str,
                 uuid: builtins.str):
        pulumi.set(__self__, "attributes", attributes)
        pulumi.set(__self__, "avatar", avatar)
        pulumi.set(__self__, "date_joined", date_joined)
        pulumi.set(__self__, "email", email)
        pulumi.set(__self__, "groups", groups)
        pulumi.set(__self__, "is_active", is_active)
        pulumi.set(__self__, "is_superuser", is_superuser)
        pulumi.set(__self__, "last_login", last_login)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "path", path)
        pulumi.set(__self__, "pk", pk)
        pulumi.set(__self__, "type", type)
        pulumi.set(__self__, "uid", uid)
        pulumi.set(__self__, "username", username)
        pulumi.set(__self__, "uuid", uuid)

    @property
    @pulumi.getter
    def attributes(self) -> builtins.str:
        return pulumi.get(self, "attributes")

    @property
    @pulumi.getter
    def avatar(self) -> builtins.str:
        return pulumi.get(self, "avatar")

    @property
    @pulumi.getter(name="dateJoined")
    def date_joined(self) -> builtins.str:
        return pulumi.get(self, "date_joined")

    @property
    @pulumi.getter
    def email(self) -> builtins.str:
        return pulumi.get(self, "email")

    @property
    @pulumi.getter
    def groups(self) -> Sequence[builtins.str]:
        return pulumi.get(self, "groups")

    @property
    @pulumi.getter(name="isActive")
    def is_active(self) -> builtins.bool:
        return pulumi.get(self, "is_active")

    @property
    @pulumi.getter(name="isSuperuser")
    def is_superuser(self) -> builtins.bool:
        return pulumi.get(self, "is_superuser")

    @property
    @pulumi.getter(name="lastLogin")
    def last_login(self) -> builtins.str:
        return pulumi.get(self, "last_login")

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def path(self) -> builtins.str:
        return pulumi.get(self, "path")

    @property
    @pulumi.getter
    def pk(self) -> builtins.float:
        return pulumi.get(self, "pk")

    @property
    @pulumi.getter
    def type(self) -> builtins.str:
        return pulumi.get(self, "type")

    @property
    @pulumi.getter
    def uid(self) -> builtins.str:
        return pulumi.get(self, "uid")

    @property
    @pulumi.getter
    def username(self) -> builtins.str:
        return pulumi.get(self, "username")

    @property
    @pulumi.getter
    def uuid(self) -> builtins.str:
        return pulumi.get(self, "uuid")


