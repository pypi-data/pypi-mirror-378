[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agentrouter"
version = "0.0.1b8"
description = "Simplify the Complex, Amplify the Intelligent for Enterprise. Orchestrate multiple agents with ease: register agents, integrate tools, define custom instructions, and leverage multiple models."
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Non-Commercial Evaluation License"}
authors = [
    {name = "AgentRouter Team", email = "support@us.inc"},
]
maintainers = [
    {name = "AgentRouter Team", email = "support@us.inc"},
]
dependencies = [
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
    "asyncio-throttle>=1.0.2",
    "typing-extensions>=4.7.0",
    "python-dateutil>=2.8.2",
    "openai>=1.0.0",
    "jsonschema>=4.18.0",
    "orjson>=3.9.0",
    "aiofiles>=23.0.0",
    "aiodns>=3.0.0",
    "structlog>=23.1.0",
    "rich>=13.5.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.1",
    "tenacity>=8.2.0",
    "backoff>=2.2.0",
    "cachetools>=5.3.0",
    "validators>=0.20.0",
]
keywords = [
    "agents",
    "multi-agent",
    "ai",
    "llm",
    "orchestration",
    "workflow",
    "automation",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.4.0",
    "sphinx>=7.0.0",
]

[project.scripts]
agentrouter = "agentrouter.cli:main"

[project.urls]
Homepage = "https://agents-docs.us.inc"
Documentation = "https://agents-docs.us.inc/docs/quickstart"

[tool.setuptools.packages.find]
where = ["."]
include = ["agentrouter*"]
exclude = ["tests*", "examples*"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "0.0.1b8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "0.0.1b8"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["agentrouter"]
omit = ["*/tests/*", "*/examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]