Metadata-Version: 2.4
Name: osusat-messaging
Version: 1.0.1
Summary: OSUSat messaging library (Python bindings)
Author-email: Ethan Eggert <eggertet@oregonstate.edu>
License: MIT License
        
        Copyright (c) 2025 OSUSat
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Requires-Python: >=3.13
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: license-file

# messaging
Messaging standards and protocols for OSUSat/SCRT

## Messaging Spec

- The messaging specification can be found in spec/SPEC.md
- The current revision of the messaging specification implementation is located at spec/messages.yml

## Code Generation

- A simple code generation pipeline is found in generator/gen.py
- It outputs C, C++, and Python headers/codecs for messages and encoding/decoding functionality

## Project Integration

### C/CPP integration

- Add this repository as a subdirectory of your project
    - git submodule add https://github.com/osusat/messaging.git lib/
- Use one of the example CMakeLists.txt files to link the C/CPP libraries
    - You may need to modify the subdirectory that CMake targets for the library files. Change `add_subdirectory(../../ ...` -> `add_subdirectory(lib/messaging ...`, for example.
        - Make sure it targets the submodule you added

### Python Integration

- Install the package via PyPi: `pip install osusat-messaging`

## Examples

- Example codec/packet usage can be found under the `examples` directory

## Developing

### Development with UNIX/Windows systems

```
# Generator Development

cd generator
python -m venv .venv/ # create a python virtual environment for package isolation
source .venv/bin/activate # activate the virtual environment you just created
pip install -r requirements.txt # install generator dependencies

# C/CPP Codec Development
mkdir build && cd build
cmake ..
make
```

### Development with NixOS systems

```
nix-shell # good to go :)
```
