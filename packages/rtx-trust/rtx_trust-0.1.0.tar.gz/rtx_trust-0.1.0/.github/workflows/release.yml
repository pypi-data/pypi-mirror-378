name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  id-token: write

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a5619b1710c0db15e8b562c6d84f0f7ee
      - name: Set up Python
        uses: actions/setup-python@0ac093b3e5f9a7c06d0f5bd8b63fd7d7084f57b6
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip build
          pip install --require-hashes -r requirements.lock
      - name: Build distributions
        run: python -m build --sdist --wheel --outdir dist
      - name: Generate SBOM
        run: python -m rtx.sbom_cli --output dist/rtx-sbom.json
      - name: Install cosign
        uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62
        with:
          cosign-release: v2.2.3
      - name: Sign artifacts
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: |
          for file in dist/*.{whl,gz,json}; do
            cosign sign-blob --yes "$file" --output-signature "$file.sig"
          done
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@ab69e431e9c9f48a3310be0a56527c679f56e04d
        with:
          skip-existing: true
      - name: Generate SLSA provenance
        uses: slsa-framework/slsa-github-generator@4876e96b8268fd8b7b8d8574718d06c0d0426d40
        with:
          attestation_subject_path: "dist/*.whl"
      - name: Create GitHub Release
        uses: softprops/action-gh-release@19cd0bcd2b95a5f9e0aab8377b3cae33e51c2234
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz
            dist/*.sig
            dist/rtx-sbom.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
