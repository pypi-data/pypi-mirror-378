[build-system]
requires = ["setuptools>=80", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pulse-sdk"
version = "0.4.1"
description = "Idiomatic, type-safe Python client for the Pulse REST API"
readme = { file = "README.md", content-type = "text/markdown" }
license = "MIT"
authors = [{ name = "Researchwise AI", email = "dev@researchwiseai.com" }]
maintainers = [{ name = "Researchwise AI", email = "dev@researchwiseai.com" }]
requires-python = ">=3.8"
keywords = [
    "ai",
    "nlp",
    "text-analysis",
    "machine-learning",
    "api-client",
    "sentiment-analysis",
    "embeddings",
    "clustering",
    "summarization",
    "theme-analysis",
    "similarity",
    "data-science",
    "research",
]
classifiers = [
    # Development Status
    "Development Status :: 4 - Beta",

    # Intended Audience
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Education",

    # Operating System
    "Operating System :: OS Independent",
    "Operating System :: POSIX",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",

    # Programming Language
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",

    # Topic
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Text Processing :: General",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Utilities",

    # Environment
    "Environment :: Console",
    "Environment :: Web Environment",

    # Natural Language
    "Natural Language :: English",

    # Typing
    "Typing :: Typed",
]
# Core dependencies required for basic SDK functionality
dependencies = [
    "httpx>=0.24.0",          # HTTP client for API requests
    "pydantic>=2.0,<3.0",     # Data validation and serialization
    "typing-extensions>=4.0", # Type hints for older Python versions
]
dynamic = []

[project.urls]
Homepage = "https://github.com/researchwiseai/pulse-py#readme"
Repository = "https://github.com/researchwiseai/pulse-py"
Documentation = "https://researchwiseai.github.io/pulse-py/"
Changelog = "https://github.com/researchwiseai/pulse-py/blob/main/CHANGELOG.md"
"Bug Tracker" = "https://github.com/researchwiseai/pulse-py/issues"
"Security Policy" = "https://github.com/researchwiseai/pulse-py/blob/main/SECURITY.md"
"Source Code" = "https://github.com/researchwiseai/pulse-py"
"Download" = "https://pypi.org/project/pulse-sdk/"
"Release Notes" = "https://github.com/researchwiseai/pulse-py/releases"
"Discussions" = "https://github.com/researchwiseai/pulse-py/discussions"
"Sponsor" = "https://github.com/sponsors/researchwiseai"
"Twitter" = "https://twitter.com/researchwiseai"

[tool.setuptools.packages.find]
# Limit package discovery to the library code and avoid picking up
# MkDocs build output in `site/` as a top-level package.
include = ["pulse*"]
exclude = ["tests*", "site*", "docs*", "build*", "examples*", "venv*", ".venv*"]

[tool.setuptools]
# Enable automatic package discovery
zip-safe = false
include-package-data = true

[tool.setuptools.package-data]
pulse = ["py.typed"]

[tool.wheel]
# Universal wheel configuration for pure Python packages
universal = true

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
 /(
   \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
 )/
 '''

[tool.ruff]
line-length = 88
target-version = "py38"
extend-select = ["E501"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=pulse --cov-report=html --cov-report=json --cov-report=term-missing --cov-fail-under=60"
markers = ["vcr: mark the test to use pytest-vcr for HTTP request recording"]
testpaths = ["tests"]
timeout = 90

[tool.coverage.run]
source = ["pulse"]
relative_files = true
omit = [
    "tests/*",
    "examples/*",
    "docs/*",
    "site/*",
    "build/*",
    "pulse/__pycache__/*",
    "*/__pycache__/*",
    "*/migrations/*",
    "venv/*",
    ".venv/*",
]
branch = true

[tool.coverage.report]
fail_under = 60
show_missing = true
skip_covered = false
precision = 2
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
title = "Pulse SDK Coverage Report"

[tool.coverage.json]
output = "coverage.json"

[tool.bandit]
exclude_dirs = [
    "tests",
    "examples",
    "docs",
    "site",
    "build",
    ".venv",
    "venv",
    ".ipynb_checkpoints",
]
# Skip specific security checks that are false positives for this codebase:
# B101: assert_used - used for runtime validation in client code
# B110: try_except_pass - used for cleanup operations
# B105: hardcoded_password_string - these are public OAuth endpoints
# B311: random - used for sampling, not cryptographic purposes
# B403: pickle import - used for cache key generation only
# B404: subprocess import - used in validation scripts for package testing
# B601: shell=True (may be needed for subprocess)
# B603: subprocess_without_shell_equals_true - used safely in validation scripts
skips = ["B101", "B110", "B105", "B311", "B403", "B404", "B601", "B603"]
severity = "medium"

[project.optional-dependencies]
# Data science and analysis features
analysis = [
    "numpy>=1.21.0",     # Numerical computing for embeddings and vectors
    "pandas>=1.3.0",     # Data manipulation and DataFrame support
    "scikit-learn>=1.4", # Machine learning utilities for clustering
]

# Visualization and plotting capabilities
visualization = [
    "matplotlib>=3.5.0", # Basic plotting and charts
    "seaborn>=0.11.0",   # Statistical visualizations and themes
]

# Text processing and NLP utilities
nlp = [
    "textblob>=0.17.0", # Natural language processing utilities
]

# Caching and performance optimization
caching = [
    "diskcache>=5.4.0", # On-disk caching for analysis results
]

# Progress tracking and user experience
progress = [
    "tqdm>=4.64.0", # Progress bars for long-running operations
]

# Complete installation with all features
all = ["pulse-sdk[analysis,visualization,nlp,caching,progress]"]

# Minimal installation for basic API access only
minimal = []

# Development and testing dependencies
dev = [
    "pytest>=6.0",               # Testing framework
    "pytest-mock>=3.6.0",        # Mocking utilities for tests
    "pytest-vcr>=1.0.0",         # HTTP request recording for tests
    "pytest-cov>=4.0.0",         # Coverage reporting
    "pytest-timeout>=2.0.0",     # Timeout protection for hanging tests
    "black==25.1.0",             # Code formatting
    "nbqa>=1.6.0",               # Notebook code formatting
    "ruff>=0.1.0",               # Fast Python linter
    "pre-commit>=2.9.2",         # Git hooks for code quality
    "bandit[sarif,toml]>=1.8.0", # Security vulnerability scanner
    "pip-audit>=2.6.0",          # Dependency vulnerability scanner
    "mkdocs>=1.4.0",             # Documentation generator
    "mkdocs-material>=8.0.0",    # Material theme for documentation
    "requests>=2.25.0",          # HTTP library for link checking
    "markdown>=3.3.0",           # Markdown processing for documentation tests
    "semver>=3.0.0",             # Semantic versioning validation
    "build>=0.10.0",             # Build tool for creating distributions
    "twine>=4.0.0",              # Tool for uploading packages to PyPI
]
