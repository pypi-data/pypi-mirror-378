{
  "version": 3,
  "sources": ["../../../../data/mods/gen7/abilities.ts"],
  "sourcesContent": ["export const Abilities: import('../../../sim/dex-abilities').ModdedAbilityDataTable = {\n\tdisguise: {\n\t\tinherit: true,\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (\n\t\t\t\teffect && effect.effectType === 'Move' &&\n\t\t\t\t['mimikyu', 'mimikyutotem'].includes(target.species.id) && !target.transformed\n\t\t\t) {\n\t\t\t\tif ([\"rollout\", \"iceball\"].includes(effect.id)) {\n\t\t\t\t\tsource.volatiles[effect.id].contactHitCount--;\n\t\t\t\t}\n\n\t\t\t\tthis.add(\"-activate\", target, \"ability: Disguise\");\n\t\t\t\tthis.effectState.busted = true;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t\tonUpdate(pokemon) {\n\t\t\tif (['mimikyu', 'mimikyutotem'].includes(pokemon.species.id) && this.effectState.busted) {\n\t\t\t\tconst speciesid = pokemon.species.id === 'mimikyutotem' ? 'Mimikyu-Busted-Totem' : 'Mimikyu-Busted';\n\t\t\t\tpokemon.formeChange(speciesid, this.effect, true);\n\t\t\t\tpokemon.formeRegression = true;\n\t\t\t}\n\t\t},\n\t},\n\tdarkaura: {\n\t\tinherit: true,\n\t\tflags: { breakable: 1 },\n\t},\n\tfairyaura: {\n\t\tinherit: true,\n\t\tflags: { breakable: 1 },\n\t},\n\tinnerfocus: {\n\t\tinherit: true,\n\t\trating: 1,\n\t\tonTryBoost() {},\n\t},\n\tmoody: {\n\t\tinherit: true,\n\t\tonResidual(pokemon) {\n\t\t\tlet stats: BoostID[] = [];\n\t\t\tconst boost: SparseBoostsTable = {};\n\t\t\tlet statPlus: BoostID;\n\t\t\tfor (statPlus in pokemon.boosts) {\n\t\t\t\tif (pokemon.boosts[statPlus] < 6) {\n\t\t\t\t\tstats.push(statPlus);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet randomStat = stats.length ? this.sample(stats) : undefined;\n\t\t\tif (randomStat) boost[randomStat] = 2;\n\n\t\t\tstats = [];\n\t\t\tlet statMinus: BoostID;\n\t\t\tfor (statMinus in pokemon.boosts) {\n\t\t\t\tif (pokemon.boosts[statMinus] > -6 && statMinus !== randomStat) {\n\t\t\t\t\tstats.push(statMinus);\n\t\t\t\t}\n\t\t\t}\n\t\t\trandomStat = stats.length ? this.sample(stats) : undefined;\n\t\t\tif (randomStat) boost[randomStat] = -1;\n\n\t\t\tthis.boost(boost, pokemon, pokemon);\n\t\t},\n\t},\n\toblivious: {\n\t\tinherit: true,\n\t\tonTryBoost() {},\n\t},\n\towntempo: {\n\t\tinherit: true,\n\t\tonTryBoost() {},\n\t},\n\trattled: {\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (['Dark', 'Bug', 'Ghost'].includes(move.type)) {\n\t\t\t\tthis.boost({ spe: 1 });\n\t\t\t}\n\t\t},\n\t\tname: \"Rattled\",\n\t\trating: 1.5,\n\t\tnum: 155,\n\t},\n\tscrappy: {\n\t\tinherit: true,\n\t\tonTryBoost() {},\n\t},\n\tslowstart: {\n\t\tinherit: true,\n\t\tonModifyAtk(atk, pokemon, target, move) {\n\t\t\t// This is because the game checks the move's category in data, rather than what it is currently, unlike e.g. Huge Power\n\t\t\tif (this.effectState.counter && this.dex.moves.get(move.id).category === 'Physical') {\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t\tonModifySpAPriority: 5,\n\t\tonModifySpA(spa, pokemon, target, move) {\n\t\t\t// Ordinary Z-moves like Breakneck Blitz will halve the user's Special Attack as well\n\t\t\tif (this.effectState.counter && this.dex.moves.get(move.id).category === 'Physical') {\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t},\n\tsoundproof: {\n\t\tinherit: true,\n\t\tonTryHit(target, source, move) {\n\t\t\tif (move.flags['sound']) {\n\t\t\t\tthis.add('-immune', target, '[from] ability: Soundproof');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t},\n\ttechnician: {\n\t\tinherit: true,\n\t\tonBasePowerPriority: 19,\n\t},\n};\n"],
  "mappings": "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",
  "names": []
}
