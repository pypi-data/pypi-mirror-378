{
  "version": 3,
  "sources": ["../../../../data/mods/chatbats/abilities.ts"],
  "sourcesContent": ["export const Abilities: import('../../../sim/dex-abilities').ModdedAbilityDataTable = {\n\tthickfat: {\n\t\t// prevents burning\n\t\tinherit: true,\n\t\tonUpdate(pokemon) {\n\t\t\tif (pokemon.status === 'brn') {\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Thick Fat');\n\t\t\t\tpokemon.cureStatus();\n\t\t\t}\n\t\t},\n\t\tonSetStatus(status, target, source, effect) {\n\t\t\tif (status.id !== 'brn') return;\n\t\t\tif ((effect as Move)?.status) {\n\t\t\t\tthis.add('-immune', target, '[from] ability: Thick Fat');\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tshortDesc: \"-50% damage from Fire and Ice. Burn immune.\",\n\t},\n\tcallillumise: {\n\t\tonDamagePriority: -30,\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (damage >= target.hp) {\n\t\t\t\tthis.add('-ability', target, 'Call Illumise');\n\t\t\t\tthis.effectState.callillumise = true;\n\t\t\t\treturn target.hp - 1;\n\t\t\t}\n\t\t},\n\t\tonUpdate(pokemon) {\n\t\t\tif (!this.effectState.callillumise) return;\n\n\t\t\tthis.add('-message', `Volbeat calls upon Illumise for aid!`);\n\t\t\t// Define new moves\n\t\t\tconst newMoves = ['bugbuzz', 'icebeam', 'thunderbolt', 'quiverdance'];\n\t\t\t// Update move slots\n\t\t\tpokemon.moveSlots = newMoves.map(move => {\n\t\t\t\tconst moveData = this.dex.moves.get(move);\n\t\t\t\treturn {\n\t\t\t\t\tmove: moveData.name,\n\t\t\t\t\tid: moveData.id,\n\t\t\t\t\tpp: moveData.pp,\n\t\t\t\t\tmaxpp: moveData.pp,\n\t\t\t\t\ttarget: moveData.target,\n\t\t\t\t\tdisabled: false,\n\t\t\t\t\tused: false,\n\t\t\t\t};\n\t\t\t});\n\t\t\t// this forces the UI to update move slots visually\n\t\t\t(pokemon as any).baseMoveSlots = pokemon.moveSlots.slice();\n\t\t\t// removes status/boosts\n\t\t\tpokemon.cureStatus();\n\t\t\tpokemon.clearBoosts();\n\t\t\t// forces the UI to update part II\n\t\t\tthis.add('-clearboost', pokemon, '[from] ability: Call Illumise', '[silent]');\n\t\t\tfor (const volatile in pokemon.volatiles) {\n\t\t\t\tthis.add('-end', pokemon, volatile);\n\t\t\t}\n\t\t\tpokemon.clearVolatile(true);\n\t\t\t// form change + heal\n\t\t\tpokemon.formeChange('Illumise', null, true);\n\t\t\tthis.heal(pokemon.maxhp);\n\t\t\t// sets new ability\n\t\t\tpokemon.setAbility('Tinted Lens', null, null, true);\n\t\t\tpokemon.baseAbility = pokemon.ability;\n\t\t\tthis.add('-ability', pokemon, 'Tinted Lens');\n\t\t},\n\t\tflags: {\n\t\t\tbreakable: 1, failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1,\n\t\t},\n\t\tname: \"Call Illumise\",\n\t\trating: 5,\n\t\tnum: -100,\n\t\tshortDesc: \"When Volbeat gets low on HP, it calls Illumise for aid.\",\n\t},\n\tcallvolbeat: {\n\t\tonDamagePriority: -30,\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (damage >= target.hp) {\n\t\t\t\tthis.add('-ability', target, 'Call Volbeat');\n\t\t\t\tthis.effectState.callvolbeat = true;\n\t\t\t\treturn target.hp - 1;\n\t\t\t}\n\t\t},\n\t\tonUpdate(pokemon) {\n\t\t\tif (!this.effectState.callvolbeat) return;\n\n\t\t\tthis.add('-message', `Illumise calls upon Volbeat for aid!`);\n\t\t\t// Define new moves\n\t\t\tconst newMoves = ['victorydance', 'lunge', 'mightycleave', 'earthquake'];\n\t\t\t// Update move slots\n\t\t\tpokemon.moveSlots = newMoves.map(move => {\n\t\t\t\tconst moveData = this.dex.moves.get(move);\n\t\t\t\treturn {\n\t\t\t\t\tmove: moveData.name,\n\t\t\t\t\tid: moveData.id,\n\t\t\t\t\tpp: moveData.pp,\n\t\t\t\t\tmaxpp: moveData.pp,\n\t\t\t\t\ttarget: moveData.target,\n\t\t\t\t\tdisabled: false,\n\t\t\t\t\tused: false,\n\t\t\t\t};\n\t\t\t});\n\t\t\t// this forces the UI to update move slots visually\n\t\t\t(pokemon as any).baseMoveSlots = pokemon.moveSlots.slice();\n\t\t\t// removes status/boosts\n\t\t\tpokemon.cureStatus();\n\t\t\tpokemon.clearBoosts();\n\t\t\t// forces the UI to update part II\n\t\t\tthis.add('-clearboost', pokemon, '[from] ability: Call Volbeat', '[silent]');\n\t\t\tfor (const volatile in pokemon.volatiles) {\n\t\t\t\tthis.add('-end', pokemon, volatile);\n\t\t\t}\n\t\t\tpokemon.clearVolatile(true);\n\t\t\t// form change + heal\n\t\t\tpokemon.formeChange('Volbeat', null, true);\n\t\t\tthis.heal(pokemon.maxhp);\n\t\t\t// sets new ability\n\t\t\tpokemon.setAbility('Dancer', null, null, true);\n\t\t\tpokemon.baseAbility = pokemon.ability;\n\t\t\tthis.add('-ability', pokemon, 'Dancer');\n\t\t},\n\t\tflags: {\n\t\t\tbreakable: 1, failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1,\n\t\t},\n\t\tname: \"Call Volbeat\",\n\t\trating: 5,\n\t\tnum: -101,\n\t\tshortDesc: \"When Illumise gets low on HP, it calls Volbeat for aid.\",\n\t},\n\tshortfuse: {\n\t\tonDamagePriority: -30,\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (damage >= target.hp) {\n\t\t\t\tthis.add('-ability', target, 'Short Fuse');\n\t\t\t\tthis.effectState.shortfuse = true;\n\t\t\t\treturn target.hp - 1;\n\t\t\t}\n\t\t},\n\t\tonUpdate(pokemon) {\n\t\t\tif (this.effectState.shortfuse) {\n\t\t\t\tdelete this.effectState.shortfuse;\n\t\t\t\tthis.actions.useMove('explosion', pokemon);\n\t\t\t}\n\t\t\tthis.checkFainted();\n\t\t},\n\t\tflags: {\n\t\t\tbreakable: 1, failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1,\n\t\t},\n\t\tname: \"Short Fuse\",\n\t\trating: 5,\n\t\tnum: -102,\n\t\tshortDesc: \"If KO'd, use Explosion instead.\",\n\t},\n\thydroelectricdam: {\n\t\t// Copied from the code for Sand Spit\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tthis.field.setWeather('raindance');\n\t\t},\n\t\tflags: {},\n\t\tname: \"Hydroelectric Dam\",\n\t\trating: 5,\n\t\tnum: -103,\n\t\tshortDesc: \"Starts Rain Dance when hit by an attack.\",\n\t},\n\tfrozenarmor: {\n\t\tonTryHit(target, source, move) {\n\t\t\tif (move.category !== 'Status') {\n\t\t\t\tthis.add('-ability', target, 'Frozen Armor');\n\t\t\t\t// reduces base power of incoming moves by 20 (math.max prevents base power from reducing below 0)\n\t\t\t\tmove.basePower = Math.max(move.basePower - 20, 0);\n\t\t\t}\n\t\t},\n\t\tonSwitchInPriority: -1,\n\t\tonUpdate(pokemon) {\n\t\t\t// checks if Glastrier is below 50% HP, if so transforms into Caly-Ice and sets ability to As One\n\t\t\tif (pokemon.species.id !== 'glastrier' || !pokemon.hp) return;\n\t\t\tif (pokemon.hp < pokemon.maxhp / 2) {\n\t\t\t\tif (pokemon.species.id !== 'calyrexice' && pokemon.ability === 'frozenarmor') {\n\t\t\t\t\tpokemon.formeChange('Calyrex-Ice', null, true);\n\t\t\t\t\tthis.add('-message', `Glastrier's Frozen Armor has shattered!`);\n\t\t\t\t\t// pokemon.setAbility('As One (Glastrier)');\n\t\t\t\t\tpokemon.baseAbility = pokemon.ability;\n\t\t\t\t\t// this.add('-ability', pokemon, 'As One');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1 },\n\t\tname: \"Frozen Armor\",\n\t\trating: 5,\n\t\tnum: -105,\n\t\tshortDesc: \"-20 BP on attacks targeting Glastrier, at 50% HP become Calyrex-Ice.\",\n\t},\n\tflipflop: {\n\t\tonDamagingHitOrder: 1,\n\t\tonTryHit(target, source, move) {\n\t\t\tif (move.flags['contact']) {\n\t\t\t\tlet flipFlopBoosts = false;\n\t\t\t\tconst invertedBoosts: SparseBoostsTable = {};\n\t\t\t\tfor (const stat in source.boosts) {\n\t\t\t\t\tif (source.boosts[stat as BoostID] > 0) {\n\t\t\t\t\t\t// checks for boosts on source of move, inverts boosts and adds them to invertedBoosts table\n\t\t\t\t\t\tinvertedBoosts[stat as BoostID] = -2 * source.boosts[stat as BoostID];\n\t\t\t\t\t\tif (!flipFlopBoosts) {\n\t\t\t\t\t\t\tthis.add('-ability', target, 'Flip Flop');\n\t\t\t\t\t\t\tflipFlopBoosts = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// applies boosts\n\t\t\t\tthis.boost(invertedBoosts, source, target);\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Flip Flop\",\n\t\trating: 5,\n\t\tnum: -104,\n\t\tshortDesc: \"When hit by contact move, invert attacker\u2019s stat boosts.\",\n\t},\n\n\tgrasspelt: {\n\t\tinherit: true,\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tthis.field.setTerrain('grassyterrain');\n\t\t},\n\t\tshortDesc: \"Starts Grassy Terrain on hit. 1.5x Def in Grassy Terrain.\",\n\t},\n\taquaveil: {\n\t\tonSwitchInPriority: -1,\n\t\t// fakes the effect of aqua ring volatile lel\n\t\tonStart(pokemon) {\n\t\t\tthis.add('-start', pokemon, 'Aqua Ring');\n\t\t},\n\t\t// provides effects of Water Bubble because Aqua Ring is modified to provide Water Bubble.\n\t\tonResidualOrder: 6,\n\t\tonResidual(pokemon) {\n\t\t\tthis.heal(pokemon.baseMaxhp / 16);\n\t\t},\n\t\tonSourceModifyAtkPriority: 5,\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Fire') {\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t\tonSourceModifySpAPriority: 5,\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Fire') {\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t\tonModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Water') {\n\t\t\t\treturn this.chainModify(2);\n\t\t\t}\n\t\t},\n\t\tonModifySpA(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Water') {\n\t\t\t\treturn this.chainModify(2);\n\t\t\t}\n\t\t},\n\t\t// this ability is supposed to just add Aqua Ring (the volatile) to the Pokemon on switch in\n\t\tflags: { cantsuppress: 1 },\n\t\tname: \"Aqua Veil\",\n\t\trating: 5,\n\t\tnum: -106,\n\t\tshortDesc: \"Starts Aqua Ring on switch in.\",\n\t},\n\t// unaware + water absorb\n\tstillwater: {\n\t\tonAnyModifyBoost(boosts, pokemon) {\n\t\t\tconst unawareUser = this.effectState.target;\n\t\t\tif (unawareUser === pokemon) return;\n\t\t\tif (unawareUser === this.activePokemon && pokemon === this.activeTarget) {\n\t\t\t\tboosts['def'] = 0;\n\t\t\t\tboosts['spd'] = 0;\n\t\t\t\tboosts['evasion'] = 0;\n\t\t\t}\n\t\t\tif (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\n\t\t\t\tboosts['atk'] = 0;\n\t\t\t\tboosts['def'] = 0;\n\t\t\t\tboosts['spa'] = 0;\n\t\t\t\tboosts['accuracy'] = 0;\n\t\t\t}\n\t\t},\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && move.type === 'Water') {\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Still Water');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Still Water\",\n\t\trating: 5,\n\t\tnum: -107,\n\t\tshortDesc: \"Unaware + Water Absorb\",\n\t},\n\tkingofthehill: {\n\t\t// sharpness + mountaineer + prevents hazard immunity\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (effect && effect.id === 'stealthrock') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tonTryHit(target, source, move) {\n\t\t\tif (move.type === 'Rock' && !target.activeTurns) {\n\t\t\t\tthis.add('-immune', target, '[from] ability: King of the Hill');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\t// sharpness\n\t\tonBasePowerPriority: 19,\n\t\tonBasePower(basePower, attacker, defender, move) {\n\t\t\tif (move.flags['slicing']) {\n\t\t\t\tthis.debug('Sharpness boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\t// starts side condition for foes, side condition interacts with hazard effects\n\t\tonStart(pokemon) {\n\t\t\tthis.add('-ability', pokemon, 'King of the Hill');\n\t\t\tfor (const side of pokemon.side.foeSidesWithConditions()) {\n\t\t\t\tside.addSideCondition('kingofthehill');\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tfor (const side of pokemon.side.foeSidesWithConditions()) {\n\t\t\t\tif (side.getSideCondition('kingofthehill')) {\n\t\t\t\t\tside.removeSideCondition('kingofthehill');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcondition: {},\n\t\tflags: { breakable: 1 },\n\t\tname: \"King of the Hill\",\n\t\trating: 5,\n\t\tnum: -108,\n\t\tshortDesc: \"Mountaineer + Sharpness. Opponent cannot ignore hazard damage.\",\n\t},\n\t// stockpile on hit\n\tomnivore: {\n\t\tonDamagingHitOrder: 1,\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (!target.hp) return;\n\t\t\tthis.add('-activate', target, 'ability: Omnivore');\n\t\t\ttarget.addVolatile('stockpile');\n\t\t},\n\t\tflags: {},\n\t\tname: \"Omnivore\",\n\t\trating: 5,\n\t\tnum: -109,\n\t\tshortDesc: \"Gain Stockpile charge when hit by attack.\",\n\t},\n\t// disguise clone\n\tpseudowoodo: {\n\t\tonDamagePriority: 1,\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (effect?.effectType === 'Move' && ['sudowoodo'].includes(target.species.id)) {\n\t\t\t\tthis.add('-activate', target, 'ability: Pseudowoodo');\n\t\t\t\tthis.effectState.rock = true;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t\tonCriticalHit(target, source, move) {\n\t\t\tif (!target) return;\n\t\t\tif (!['sudowoodo'].includes(target.species.id)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['bypasssub'] && !(move.infiltrates && this.gen >= 6);\n\t\t\tif (hitSub) return;\n\n\t\t\tif (!target.runImmunity(move.type)) return;\n\t\t\treturn false;\n\t\t},\n\t\tonEffectiveness(typeMod, target, type, move) {\n\t\t\tif (!target || move.category === 'Status') return;\n\t\t\tif (!['sudowoodo'].includes(target.species.id)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['bypasssub'] && !(move.infiltrates && this.gen >= 6);\n\t\t\tif (hitSub) return;\n\n\t\t\tif (!target.runImmunity(move.type)) return;\n\t\t\treturn 0;\n\t\t},\n\t\tonUpdate(pokemon) {\n\t\t\tif (['sudowoodo'].includes(pokemon.species.id) && this.effectState.rock) {\n\t\t\t\tconst speciesid = 'Sudowoodo-Rock';\n\t\t\t\tpokemon.formeChange(speciesid, this.effect, true);\n\t\t\t\tthis.damage(pokemon.baseMaxhp / 8, pokemon, pokemon, this.dex.species.get(speciesid));\n\t\t\t}\n\t\t},\n\t\tflags: {\n\t\t\tfailroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1,\n\t\t\tbreakable: 1, notransform: 1,\n\t\t},\n\t\tname: \"Pseudowoodo\",\n\t\trating: 5,\n\t\tnum: -110,\n\t\tshortDesc: \"Disguise. Becomes Rock type when it breaks.\",\n\t},\n\tmagicguard: {\n\t\tonDamage(damage, target, source, effect) {\n\t\t\t// prevents magic guard from blocking hazard damage while King of the Hill is active\n\t\t\tif (target.side.getSideCondition('kingofthehill')) {\n\t\t\t\tconst hazards = ['stealthrock', 'spikes', 'toxicspikes', 'stickyweb'];\n\t\t\t\tif (effect && hazards.includes(effect.id)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (effect.effectType !== 'Move') {\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Magic Guard\",\n\t\trating: 4,\n\t\tnum: 98,\n\t},\n\tdisguise: {\n\t\tonDamagePriority: 1,\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (effect?.effectType === 'Move' && ['mimikyu', 'mimikyutotem'].includes(target.species.id)) {\n\t\t\t\tthis.add('-activate', target, 'ability: Disguise');\n\t\t\t\tthis.effectState.busted = true;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t\tonCriticalHit(target, source, move) {\n\t\t\tif (!target) return;\n\t\t\tif (!['mimikyu', 'mimikyutotem'].includes(target.species.id)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['bypasssub'] && !(move.infiltrates && this.gen >= 6);\n\t\t\tif (hitSub) return;\n\n\t\t\tif (!target.runImmunity(move.type)) return;\n\t\t\treturn false;\n\t\t},\n\t\tonEffectiveness(typeMod, target, type, move) {\n\t\t\tif (!target || move.category === 'Status') return;\n\t\t\tif (!['mimikyu', 'mimikyutotem'].includes(target.species.id)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['bypasssub'] && !(move.infiltrates && this.gen >= 6);\n\t\t\tif (hitSub) return;\n\n\t\t\tif (!target.runImmunity(move.type)) return;\n\t\t\treturn 0;\n\t\t},\n\t\tonUpdate(pokemon) {\n\t\t\tif (['mimikyu', 'mimikyutotem'].includes(pokemon.species.id) && this.effectState.busted) {\n\t\t\t\tconst speciesid = pokemon.species.id === 'mimikyutotem' ? 'Mimikyu-Busted-Totem' : 'Mimikyu-Busted';\n\t\t\t\tpokemon.formeChange(speciesid, this.effect, true);\n\t\t\t\tthis.damage(pokemon.baseMaxhp / 8, pokemon, pokemon, this.dex.species.get(speciesid));\n\t\t\t}\n\t\t\t// sets ability to perish body\n\t\t\tif (pokemon.species.id === 'mimikyubusted' && pokemon.ability === 'disguise') {\n\t\t\t\tpokemon.setAbility(\"Perish Body\");\n\t\t\t\tpokemon.baseAbility = pokemon.ability;\n\t\t\t}\n\t\t},\n\t\t// cantsuppress flag removed to allow for ability change\n\t\tflags: {\n\t\t\tfailroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1,\n\t\t\tbreakable: 1, notransform: 1,\n\t\t},\n\t\tname: \"Disguise\",\n\t\trating: 3.5,\n\t\tnum: 209,\n\t},\n\tgulpmissile: {\n\t\tinherit: true,\n\t\tonTryHit(target, source, move) {\n\t\t\t// Storm Drain effect while cramorant-gulping\n\t\t\tif (target !== source && move.type === 'Water' && target.species.id === 'cramorantgulping') {\n\t\t\t\tif (!this.boost({ spa: 1 })) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Gulp Missile');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// Lightning Rod effect while cramorant-gorging\n\t\t\tif (target !== source && move.type === 'Electric' && target.species.id === 'cramorantgorging') {\n\t\t\t\tif (!this.boost({ spa: 1 })) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Gulp Missile');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn;\n\t\t},\n\t},\n\tasoneglastrier: {\n\t\tinherit: true,\n\t\t// removing these flags allows Frozen Armor to correctly set Caly-Ice ability as As One\n\t\tflags: {},\n\t},\n\tprotean: {\n\t\tinherit: true,\n\t\tonPrepareHit(source, target, move) {\n\t\t\tif (move.hasBounced || move.flags['futuremove'] || move.sourceEffect === 'snatch' || move.callsMove) return;\n\t\t\tconst type = move.type;\n\t\t\tif (type && type !== '???' && source.getTypes().join() !== type) {\n\t\t\t\tif (!source.setType(type)) return;\n\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: Protean');\n\t\t\t}\n\t\t},\n\t\trating: 4.5,\n\t\tshortDesc: \"Gen 8 Protean.\",\n\t},\n\tberserk: {\n\t\tonUpdate(pokemon) {\n\t\t\tif (pokemon.species.id !== 'infernape' || !pokemon.hp || pokemon.m.triggeredBerserk) return;\n\t\t\tif (pokemon.hp < pokemon.maxhp / 2) {\n\t\t\t\tthis.boost({ spa: 1 }, pokemon, pokemon);\n\t\t\t\tpokemon.m.triggeredBerserk = true;\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Berserk\",\n\t\trating: 2,\n\t\tnum: 201,\n\t},\n\tbloodsoakedcrescent: {\n\t\t// modifies atk\n\t\tonStart(pokemon) {\n\t\t\tthis.add('-ability', pokemon, 'Blood-Soaked Crescent');\n\t\t},\n\t\tonModifyAtkPriority: 1,\n\t\tonModifyAtk(atk, pokemon) {\n\t\t\tif (pokemon.volatiles['dynamax']) return;\n\t\t\tthis.debug('bsc Attack boost');\n\t\t\treturn this.chainModify(1.5);\n\t\t},\n\t\t// ends move lock properly\n\t\tonAfterMove(pokemon) {\n\t\t\tif (pokemon.volatiles['bloodsoakedcrescent']?.duration === 1) {\n\t\t\t\tpokemon.removeVolatile('bloodsoakedcrescent');\n\t\t\t\tthis.add('-end', pokemon, 'Blood-Soaked Rage');\n\t\t\t}\n\t\t},\n\t\t// applies move lock\n\t\tonAfterMoveSecondarySelf(pokemon, source, move) {\n\t\t\tif (move.id === 'dragondance') return;\n\t\t\tif (!pokemon.volatiles['bloodsoakedcrescent']) {\n\t\t\t\tthis.add('-start', pokemon, 'Blood-Soaked Rage');\n\t\t\t}\n\t\t\tpokemon.addVolatile('bloodsoakedcrescent');\n\t\t},\n\t\t// condition is just lockedmove with some changes\n\t\tcondition: {\n\t\t\t// Outrage, Thrash, Petal Dance...\n\t\t\tduration: 2,\n\t\t\tonResidual(target) {\n\t\t\t\tif (target.status === 'slp') {\n\t\t\t\t\t// don't lock, and bypass confusion for calming\n\t\t\t\t\tdelete target.volatiles['bloodsoakedcrescent'];\n\t\t\t\t}\n\t\t\t\tthis.effectState.trueDuration--;\n\t\t\t},\n\t\t\tonStart(target, source, effect) {\n\t\t\t\tthis.effectState.trueDuration = this.random(2, 4);\n\t\t\t\tthis.effectState.move = this.activeMove;\n\t\t\t},\n\t\t\tonRestart() {\n\t\t\t\tif (this.effectState.trueDuration >= 2) {\n\t\t\t\t\tthis.effectState.duration = 2;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonEnd(target) {\n\t\t\t\tif (this.effectState.trueDuration > 1) return;\n\t\t\t\ttarget.addVolatile('confusion');\n\t\t\t},\n\t\t\tonLockMove(pokemon) {\n\t\t\t\tif (pokemon.volatiles['dynamax']) return;\n\t\t\t\treturn this.effectState.move;\n\t\t\t},\n\t\t},\n\t\tflags: {},\n\t\tname: \"Blood-Soaked Crescent\",\n\t\trating: 5,\n\t\tnum: -111,\n\t\tshortDesc: \"1.5x Attack, but attacks have the Outrage effect.\",\n\t},\n\tpowerspot: {\n\t\tonChargeMove(pokemon, target, move) {\n\t\t\tthis.debug('power spot - remove charge turn for ' + move.id);\n\t\t\tthis.attrLastMove('[still]');\n\t\t\tthis.addMove('-anim', pokemon, move.name, target);\n\t\t\treturn false; // skip charge turn\n\t\t},\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\n\t\t\tif (pokemon.getVolatile('mustrecharge')) {\n\t\t\t\tpokemon.removeVolatile('mustrecharge');\n\t\t\t\tthis.add('-end', pokemon, 'mustrecharge');\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Power Spot\",\n\t\trating: 5,\n\t\tnum: 249,\n\t\tshortDesc: \"Moves ignore charge/recharge turns.\",\n\t},\n\tbiogenesis: {\n\t\tonSwitchInPriority: 1,\n\t\tonBeforeSwitchIn(pokemon) {\n\t\t\tif (pokemon.m.didRandomMoves) return;\n\t\t\tconst moves = this.dex.moves.all();\n\t\t\tconst newMoves = [];\n\t\t\twhile (newMoves.length < 8) {\n\t\t\t\tconst newMove = this.sample(moves);\n\t\t\t\tif (newMove.basePower === 1) continue;\n\t\t\t\tif (newMove.isMax === true) continue;\n\t\t\t\tif (newMove.isNonstandard === \"Gigantamax\") continue;\n\t\t\t\tif (newMoves.map(x => x.id).includes(newMove.id)) continue;\n\t\t\t\tnewMoves.push(newMove);\n\t\t\t}\n\t\t\t// Update move slots\n\t\t\tpokemon.moveSlots = newMoves.map(move => {\n\t\t\t\tconst moveData = this.dex.moves.get(move);\n\t\t\t\treturn {\n\t\t\t\t\tmove: moveData.name,\n\t\t\t\t\tid: moveData.id,\n\t\t\t\t\tpp: moveData.pp,\n\t\t\t\t\tmaxpp: moveData.pp,\n\t\t\t\t\ttarget: moveData.target,\n\t\t\t\t\tdisabled: false,\n\t\t\t\t\tused: false,\n\t\t\t\t};\n\t\t\t});\n\t\t\t// this forces the UI to update move slots visually\n\t\t\t(pokemon as any).baseMoveSlots = pokemon.moveSlots.slice();\n\t\t\tpokemon.m.didRandomMoves = true;\n\t\t},\n\t\tonSwitchIn(pokemon) {\n\t\t\tif (!pokemon) return; // Chat command\n\t\t\tif (!pokemon.m.hasTypeChanged) {\n\t\t\t\tthis.add('-ability', pokemon, 'Biogenesis');\n\t\t\t\tthis.add('-anim', pokemon, 'Growth', pokemon);\n\t\t\t\tthis.add('-message', `Mew evolves into a new form with its Biogenesis!`);\n\t\t\t}\n\t\t\tconst attackingMoves = pokemon.baseMoveSlots\n\t\t\t\t.map(slot => this.dex.moves.get(slot.id))\n\t\t\t\t.filter(move => move.category !== \"Status\");\n\n\t\t\t// pick types of first 2 attacking moves (failsafe if there are none)\n\t\t\tconst types = attackingMoves.length ?\n\t\t\t\t[...new Set(attackingMoves.slice(0, 2).map(move => move.type))] :\n\t\t\t\tpokemon.types;\n\t\t\tpokemon.setType(types);\n\t\t\tpokemon.baseTypes = pokemon.types;\n\t\t\tpokemon.m.hasTypeChanged = true;\n\t\t\tthis.add('-start', pokemon, 'typechange', (pokemon.illusion || pokemon).getTypes(true).join('/'), '[silent]');\n\t\t},\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1,\n\t\t\tbreakable: 1, notransform: 1, cantsuppress: 1 },\n\t\tname: \"Biogenesis\",\n\t\trating: 5,\n\t\tnum: -112,\n\t\tshortDesc: \"This Pokemon receives 8 completely random moves at the start of the game.\",\n\t},\n\torichalcumpulse: {\n\t\tonStart(pokemon) {\n\t\t\tpokemon.updateMaxHp();\n\t\t\tif (this.field.setWeather('sunnyday')) {\n\t\t\t\tthis.add('-activate', pokemon, 'Orichalcum Pulse', '[source]');\n\t\t\t} else if (this.field.isWeather('sunnyday')) {\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Orichalcum Pulse');\n\t\t\t}\n\t\t},\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk, pokemon) {\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\n\t\t\t\tthis.debug('Orichalcum boost');\n\t\t\t\treturn this.chainModify([5461, 4096]);\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Orichalcum Pulse\",\n\t\trating: 4.5,\n\t\tnum: 288,\n\t},\n\thailmary: {\n\t\tonStart(pokemon) {\n\t\t\tthis.add('-activate', pokemon, 'ability: Hail Mary');\n\t\t},\n\t\tonModifySpe(spe, pokemon) {\n\t\t\tif (this.field.isWeather(['hail', 'snowscape'])) {\n\t\t\t\tthis.debug('hail mary spe boost');\n\t\t\t\treturn this.chainModify(2);\n\t\t\t}\n\t\t},\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk, pokemon) {\n\t\t\tif (this.field.isWeather(['hail', 'snowscape'])) {\n\t\t\t\tthis.debug('hail mary atk boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonSourceModifyAccuracyPriority: -1,\n\t\tonSourceModifyAccuracy(accuracy, target, source, move) {\n\t\t\tif (this.field.isWeather(['hail', 'snowscape'])) {\n\t\t\t\tif (move.category === 'Physical' && typeof accuracy === 'number') {\n\t\t\t\t\treturn this.chainModify([3277, 4096]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Hail Mary\",\n\t\trating: 5,\n\t\tnum: -113,\n\t\tshortDesc: \"In Snowscape: 2x Speed, 1.5x Attack, 0.8x accuracy.\",\n\t},\n\tbrainfreeze: {\n\t\tonModifyCritRatio(critRatio, source, target) {\n\t\t\tif (target && (target.status === 'frostbite' || this.field.isWeather('snowscape'))) return 5;\n\t\t},\n\t\tflags: {},\n\t\tname: \"Brain Freeze\",\n\t\trating: 5,\n\t\tnum: -114,\n\t\tshortDesc: \"If Snowscape or target is Frostbitten, attacks auto Crit.\",\n\t},\n\tneutralizinggas: {\n\t\tinherit: true,\n\t\tonStart(pokemon) {\n\t\t\t// this makes Neutralizing Gas properly show as activated in the client when Typhlosion Mega evolves\n\t\t\tthis.add('-ability', pokemon, 'Neutralizing Gas');\n\t\t},\n\t},\n\tterawheel: {\n\t\tonStart(pokemon) {\n\t\t\tpokemon.canTerastallize = null;\n\t\t},\n\t\t// copied from SSB High Performance Computing\n\t\tonResidualOrder: 6,\n\t\tonResidual(source) {\n\t\t\tconst type = this.sample(this.dex.types.names().filter(i => i !== source.getTypes()[0]));\n\t\t\tif (source.setType(type)) {\n\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: Tera Wheel');\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Tera Wheel\",\n\t\trating: 5,\n\t\tnum: -115,\n\t\tshortDesc: \"End of turn: this Pokemon switches to a random type (including Stellar).\",\n\t},\n\tdownload: {\n\t\tinherit: true,\n\t\tonUpdate(pokemon) {\n\t\t\tif (pokemon.species.name === 'Genesect-Burn' && pokemon.terastallized) {\n\t\t\t\tpokemon.setAbility('Drought', null, null, true);\n\t\t\t\tpokemon.baseAbility = pokemon.ability;\n\t\t\t\tthis.add('-ability', pokemon, 'Drought');\n\t\t\t}\n\t\t\tif (pokemon.species.name === 'Genesect-Chill' && pokemon.terastallized) {\n\t\t\t\tpokemon.setAbility('Snow Warning', null, null, true);\n\t\t\t\tpokemon.baseAbility = pokemon.ability;\n\t\t\t\tthis.add('-ability', pokemon, 'Snow Warning');\n\t\t\t}\n\t\t\tif (pokemon.species.name === 'Genesect-Douse' && pokemon.terastallized) {\n\t\t\t\tpokemon.setAbility('Drizzle', null, null, true);\n\t\t\t\tpokemon.baseAbility = pokemon.ability;\n\t\t\t\tthis.add('-ability', pokemon, 'Drizzle');\n\t\t\t}\n\t\t\tif (pokemon.species.name === 'Genesect-Shock' && pokemon.terastallized) {\n\t\t\t\tpokemon.setAbility('Electric Surge', null, null, true);\n\t\t\t\tpokemon.baseAbility = pokemon.ability;\n\t\t\t\tthis.add('-ability', pokemon, 'Electric Surge');\n\t\t\t}\n\t\t},\n\t\tshortDesc: \"Download + Gets weather setting move when Tera.\",\n\t},\n\tbattlerage: {\n\t\tonDamagingHit(damage, target, source, effect) {\n\t\t\tthis.boost({ atk: 1 });\n\t\t},\n\t\tflags: {},\n\t\tname: \"Battle Rage\",\n\t\trating: 5,\n\t\tnum: -116,\n\t\tshortDesc: \"+1 Atk when hit by an attack.\",\n\t},\n\tterrainshift: {\n\t\tonStart(source) {\n\t\t\tif (source.hp >= source.maxhp) {\n\t\t\t\tsource.setType(\"Electric\");\n\t\t\t\tthis.field.setTerrain('electricterrain');\n\t\t\t\tthis.add('-start', source, 'typechange', 'Electric', '[silent]');\n\t\t\t} else if (source.hp >= (2 * source.maxhp) / 3) {\n\t\t\t\tsource.setType(\"Fairy\");\n\t\t\t\tthis.field.setTerrain('mistyterrain');\n\t\t\t\tthis.add('-start', source, 'typechange', 'Fairy', '[silent]');\n\t\t\t} else if (source.hp >= source.maxhp / 3) {\n\t\t\t\tsource.setType(\"Grass\");\n\t\t\t\tthis.field.setTerrain('grassyterrain');\n\t\t\t\tthis.add('-start', source, 'typechange', 'Grass', '[silent]');\n\t\t\t} else {\n\t\t\t\tsource.setType(\"Psychic\");\n\t\t\t\tthis.field.setTerrain('psychicterrain');\n\t\t\t\tthis.add('-start', source, 'typechange', 'Psychic', '[silent]');\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Terrain Shift\",\n\t\trating: 5,\n\t\tnum: -117,\n\t\tshortDesc: \"Sets terrain depending on HP value.\",\n\t},\n};\n"],
  "mappings": "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",
  "names": []
}
