{
  "version": 3,
  "sources": ["../../../../data/mods/gen9dlc1/scripts.ts"],
  "sourcesContent": ["export const Scripts: ModdedBattleScriptsData = {\n\tgen: 9,\n\tinherit: 'gen9',\n\t// A Pok\u00E9mon transformed into Ogerpon should accept the Terastallization choice, but not Terastallize\n\tactions: {\n\t\tinherit: true,\n\t\tterastallize(pokemon) {\n\t\t\tif (pokemon.transformed && ['Ogerpon', 'Terapagos'].includes(pokemon.species.baseSpecies)) {\n\t\t\t\tthis.battle.hint(\"A Pok\u00E9mon terastallized into Ogerpon or Terapagos cannot terastallize.\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (pokemon.species.baseSpecies === 'Ogerpon' && !['Fire', 'Grass', 'Rock', 'Water'].includes(pokemon.teraType) &&\n\t\t\t\t(!pokemon.illusion || pokemon.illusion.species.baseSpecies === 'Ogerpon')) {\n\t\t\t\tthis.battle.hint(\"If Ogerpon Terastallizes into a type other than Fire, Grass, Rock, or Water, the game softlocks.\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (pokemon.illusion && ['Ogerpon', 'Terapagos'].includes(pokemon.illusion.species.baseSpecies)) {\n\t\t\t\tthis.battle.singleEvent('End', this.dex.abilities.get('Illusion'), pokemon.abilityState, pokemon);\n\t\t\t}\n\n\t\t\tconst type = pokemon.teraType;\n\t\t\tthis.battle.add('-terastallize', pokemon, type);\n\t\t\tpokemon.terastallized = type;\n\t\t\tfor (const ally of pokemon.side.pokemon) {\n\t\t\t\tally.canTerastallize = null;\n\t\t\t}\n\t\t\tpokemon.addedType = '';\n\t\t\tpokemon.knownType = true;\n\t\t\tpokemon.apparentType = type;\n\t\t\tif (pokemon.species.baseSpecies === 'Ogerpon') {\n\t\t\t\tlet ogerponSpecies = toID(pokemon.species.battleOnly || pokemon.species.id);\n\t\t\t\togerponSpecies += ogerponSpecies === 'ogerpon' ? 'tealtera' : 'tera';\n\t\t\t\tpokemon.formeChange(ogerponSpecies, null, true);\n\t\t\t}\n\t\t\tif (pokemon.species.name === 'Terapagos-Terastal') {\n\t\t\t\tpokemon.formeChange('Terapagos-Stellar', null, true);\n\t\t\t}\n\t\t\tif (pokemon.species.baseSpecies === 'Morpeko' && !pokemon.transformed &&\n\t\t\t\tpokemon.baseSpecies.id !== pokemon.species.id\n\t\t\t) {\n\t\t\t\tpokemon.formeRegression = true;\n\t\t\t\tpokemon.baseSpecies = pokemon.species;\n\t\t\t\tpokemon.details = pokemon.getUpdatedDetails();\n\t\t\t}\n\t\t\tthis.battle.runEvent('AfterTerastallization', pokemon);\n\t\t},\n\t},\n\tpokemon: {\n\t\tinherit: true,\n\t\ttransformInto(pokemon, effect) {\n\t\t\tconst species = pokemon.species;\n\t\t\tif (\n\t\t\t\tpokemon.fainted || this.illusion || pokemon.illusion || (pokemon.volatiles['substitute'] && this.battle.gen >= 5) ||\n\t\t\t\t(pokemon.transformed && this.battle.gen >= 2) || (this.transformed && this.battle.gen >= 5) ||\n\t\t\t\tspecies.name === 'Eternatus-Eternamax' ||\n\t\t\t\t(['Ogerpon', 'Terapagos'].includes(species.baseSpecies) && (this.terastallized || pokemon.terastallized)) ||\n\t\t\t\tthis.terastallized === 'Stellar'\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.battle.dex.currentMod === 'gen1stadium' && (\n\t\t\t\tspecies.name === 'Ditto' ||\n\t\t\t\t(this.species.name === 'Ditto' && pokemon.moves.includes('transform'))\n\t\t\t)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!this.setSpecies(species, effect, true)) return false;\n\n\t\t\tthis.transformed = true;\n\t\t\tthis.weighthg = pokemon.weighthg;\n\n\t\t\tconst types = pokemon.getTypes(true, true);\n\t\t\tthis.setType(pokemon.volatiles['roost'] ? pokemon.volatiles['roost'].typeWas : types, true);\n\t\t\tthis.addedType = pokemon.addedType;\n\t\t\tthis.knownType = this.isAlly(pokemon) && pokemon.knownType;\n\t\t\tthis.apparentType = pokemon.apparentType;\n\n\t\t\tlet statName: StatIDExceptHP;\n\t\t\tfor (statName in this.storedStats) {\n\t\t\t\tthis.storedStats[statName] = pokemon.storedStats[statName];\n\t\t\t\tif (this.modifiedStats) this.modifiedStats[statName] = pokemon.modifiedStats![statName]; // Gen 1: Copy modified stats.\n\t\t\t}\n\t\t\tthis.moveSlots = [];\n\t\t\tthis.hpType = (this.battle.gen >= 5 ? this.hpType : pokemon.hpType);\n\t\t\tthis.hpPower = (this.battle.gen >= 5 ? this.hpPower : pokemon.hpPower);\n\t\t\tthis.timesAttacked = pokemon.timesAttacked;\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\n\t\t\t\tlet moveName = moveSlot.move;\n\t\t\t\tif (moveSlot.id === 'hiddenpower') {\n\t\t\t\t\tmoveName = 'Hidden Power ' + this.hpType;\n\t\t\t\t}\n\t\t\t\tthis.moveSlots.push({\n\t\t\t\t\tmove: moveName,\n\t\t\t\t\tid: moveSlot.id,\n\t\t\t\t\tpp: moveSlot.maxpp === 1 ? 1 : 5,\n\t\t\t\t\tmaxpp: this.battle.gen >= 5 ? (moveSlot.maxpp === 1 ? 1 : 5) : moveSlot.maxpp,\n\t\t\t\t\ttarget: moveSlot.target,\n\t\t\t\t\tdisabled: false,\n\t\t\t\t\tused: false,\n\t\t\t\t\tvirtual: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\tlet boostName: BoostID;\n\t\t\tfor (boostName in pokemon.boosts) {\n\t\t\t\tthis.boosts[boostName] = pokemon.boosts[boostName];\n\t\t\t}\n\t\t\tif (this.battle.gen >= 6) {\n\t\t\t\t// we need to remove all of the overlapping crit volatiles before adding any of them\n\t\t\t\tconst volatilesToCopy = ['dragoncheer', 'focusenergy', 'gmaxchistrike', 'laserfocus'];\n\t\t\t\tfor (const volatile of volatilesToCopy) this.removeVolatile(volatile);\n\t\t\t\tfor (const volatile of volatilesToCopy) {\n\t\t\t\t\tif (pokemon.volatiles[volatile]) {\n\t\t\t\t\t\tthis.addVolatile(volatile);\n\t\t\t\t\t\tif (volatile === 'gmaxchistrike') this.volatiles[volatile].layers = pokemon.volatiles[volatile].layers;\n\t\t\t\t\t\tif (volatile === 'dragoncheer') this.volatiles[volatile].hasDragonType = pokemon.volatiles[volatile].hasDragonType;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (effect) {\n\t\t\t\tthis.battle.add('-transform', this, pokemon, '[from] ' + effect.fullname);\n\t\t\t} else {\n\t\t\t\tthis.battle.add('-transform', this, pokemon);\n\t\t\t}\n\t\t\tif (this.terastallized) {\n\t\t\t\tthis.knownType = true;\n\t\t\t\tthis.apparentType = this.terastallized;\n\t\t\t}\n\t\t\tif (this.battle.gen > 2) this.setAbility(pokemon.ability, this, null, true, true);\n\n\t\t\t// Change formes based on held items (for Transform)\n\t\t\t// Only ever relevant in Generation 4 since Generation 3 didn't have item-based forme changes\n\t\t\tif (this.battle.gen === 4) {\n\t\t\t\tif (this.species.num === 487) {\n\t\t\t\t\t// Giratina formes\n\t\t\t\t\tif (this.species.name === 'Giratina' && this.item === 'griseousorb') {\n\t\t\t\t\t\tthis.formeChange('Giratina-Origin');\n\t\t\t\t\t} else if (this.species.name === 'Giratina-Origin' && this.item !== 'griseousorb') {\n\t\t\t\t\t\tthis.formeChange('Giratina');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.species.num === 493) {\n\t\t\t\t\t// Arceus formes\n\t\t\t\t\tconst item = this.getItem();\n\t\t\t\t\tconst targetForme = (item?.onPlate ? 'Arceus-' + item.onPlate : 'Arceus');\n\t\t\t\t\tif (this.species.name !== targetForme) {\n\t\t\t\t\t\tthis.formeChange(targetForme);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t},\n};\n"],
  "mappings": "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",
  "names": []
}
