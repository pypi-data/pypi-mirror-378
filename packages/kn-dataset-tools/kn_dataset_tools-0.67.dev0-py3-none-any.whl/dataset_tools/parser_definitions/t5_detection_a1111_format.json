{
  "parser_name": "T5_Architecture_Detection",
  "priority": 86,
  "description": "Detects T5-based model architectures in ComfyUI workflows (Engine-Aligned Version)",
  "version": "1.0-engine-aligned",
  "maintainer": "Ktiseos Nyx & AI Co-pilot",
  "target_file_types": ["PNG", "JPEG", "WEBP"],

  "detection_rules": [
    {
      "comment": "Rule 1: Must be a valid ComfyUI workflow first.",
      "condition": "OR",
      "rules": [
        { "source_type": "pil_info_key", "source_key": "workflow", "operator": "is_valid_json" },
        { "source_type": "pil_info_key", "source_key": "prompt", "operator": "is_valid_json" }
      ]
    },
    {
      "comment": "Rule 2: The workflow must contain at least ONE T5-indicating keyword.",
      "condition": "OR",
      "rules": [
        { "source_type": "pil_info_key", "source_key": "workflow", "operator": "contains", "text": "DualCLIPLoader" },
        { "source_type": "pil_info_key", "source_key": "prompt", "operator": "contains", "text": "DualCLIPLoader" },
        { "source_type": "pil_info_key", "source_key": "workflow", "operator": "contains", "text": "TripleCLIPLoader" },
        { "source_type": "pil_info_key", "source_key": "prompt", "operator": "contains", "text": "TripleCLIPLoader" },
        { "source_type": "pil_info_key", "source_key": "workflow", "operator": "contains", "text": "CLIPTextEncodeSD3" },
        { "source_type": "pil_info_key", "source_key": "prompt", "operator": "contains", "text": "CLIPTextEncodeSD3" },
        { "source_type": "pil_info_key", "source_key": "workflow", "operator": "contains", "text": "PixArt" },
        { "source_type": "pil_info_key", "source_key": "prompt", "operator": "contains", "text": "PixArt" },
        { "source_type": "pil_info_key", "source_key": "workflow", "operator": "contains", "text": "t5xxl" },
        { "source_type": "pil_info_key", "source_key": "prompt", "operator": "contains", "text": "t5xxl" }
      ]
    }
  ],

  "parsing_instructions": {
    "input_data": {
      "comment": "Engine will use the first valid JSON found in 'workflow' or 'prompt' keys.",
      "source_options": [
        { "source_type": "pil_info_key", "source_key": "workflow" },
        { "source_type": "pil_info_key", "source_key": "prompt" }
      ],
      "transformations": [{ "type": "json_decode_string_itself" }]
    },

    "fields": [
      {
        "comment": "Since the engine can't classify, we extract the whole workflow for later analysis.",
        "target_key": "raw_workflow_json",
        "method": "direct_input_data_as_string",
        "value_type": "string"
      },
      {
        "comment": "We extract the 'prompt' widget text as a best-effort approach.",
        "target_key": "prompt",
        "method": "regex_on_input_data_string",
        "regex_pattern": "\"widget_name\": \"text\".*?\"value\": \"(.*?)\"",
        "value_type": "string",
        "fallback": "Prompt not found via simple regex"
      }
    ],

    "output_template": {
      "tool": "ComfyUI (T5-Based Architecture)",
      "parser": "T5_Architecture_Detection v1.0",
      "confidence": "High (T5 indicator keywords detected)",
      "prompt": "$prompt",
      "notes": [
        "A T5-based architecture was detected (e.g., SD3, Flux, PixArt).",
        "Full classification requires engine enhancements.",
        "The complete workflow is available in the 'raw_workflow_json' field."
      ],
      "raw_workflow_json": "$raw_workflow_json"
    }
  },

  "notes": [
    "This version is aligned with the current engine's capabilities.",
    "It reliably detects the presence of T5 indicators but does not classify the specific family.",
    "Full classification logic needs to be implemented in Python within the engine."
  ]
}
