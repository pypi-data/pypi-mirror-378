{
  "parser_name": "ComfyUI Griptape",
  "priority": 155,
  "description": "ComfyUI workflows using Griptape AI framework for intelligent prompt generation and agent-based workflows",
  "version": "1.0",
  "maintainer": "Dataset-Tools",
  "target_file_types": [
    "PNG", "JPG", "JPEG"
  ],
  "detection_rules": [
    {
      "comment": "Rule 1: Must have ComfyUI JSON structure",
      "condition": "OR",
      "rules": [
        {
          "source_type": "pil_info_key",
          "source_key": "workflow",
          "operator": "is_valid_json"
        },
        {
          "source_type": "pil_info_key",
          "source_key": "prompt",
          "operator": "is_valid_json"
        }
      ]
    },
    {
      "comment": "Rule 2: Must contain Griptape AI framework nodes",
      "source_type": "pil_info_key",
      "source_key_options": [
        "workflow",
        "prompt"
      ],
      "json_query_type": "has_any_node_class_type",
      "operator": "is_true",
      "class_types_to_check": [
        "Griptape Display: Text",
        "Griptape Create: Agent",
        "Griptape Agent Config: Custom Structure",
        "Griptape Create: Rules",
        "Griptape Combine: Rules List",
        "Griptape Tool: WebSearch",
        "Griptape Prompt Driver: OpenAI Compatible",
        "Griptape Prompt Driver: LM Studio",
        "Griptape Prompt Driver: Anthropic",
        "Griptape Tool: Calculator",
        "Griptape Tool: DateTime"
      ]
    }
  ],
  "parsing_instructions": {
    "input_data": {
      "source_options": [
        {
          "source_type": "pil_info_key",
          "source_key": "workflow"
        },
        {
          "source_type": "pil_info_key",
          "source_key": "prompt"
        }
      ],
      "transformations": [
        {
          "type": "json_decode_string_itself"
        }
      ]
    },
    "fields": [
      {
        "target_key": "prompt",
        "method": "comfyui_simple_dfs_prompt",
        "target_input": "positive"
      },
      {
        "target_key": "negative_prompt",
        "method": "comfyui_simple_dfs_prompt",
        "target_input": "negative"
      },
      {
        "target_key": "parameters.seed",
        "method": "comfy_find_input_of_main_sampler",
        "sampler_node_types": [
          "KSampler",
          "KSamplerAdvanced"
        ],
        "input_key": "seed",
        "value_type": "integer",
        "fallback": -1
      },
      {
        "target_key": "parameters.steps",
        "method": "comfy_find_input_of_main_sampler",
        "sampler_node_types": [
          "KSampler",
          "KSamplerAdvanced"
        ],
        "input_key": "steps",
        "value_type": "integer",
        "fallback": 30
      },
      {
        "target_key": "parameters.cfg_scale",
        "method": "comfy_find_input_of_main_sampler",
        "sampler_node_types": [
          "KSampler",
          "KSamplerAdvanced"
        ],
        "input_key": "cfg",
        "value_type": "float",
        "fallback": 7.0
      },
      {
        "target_key": "parameters.sampler_name",
        "method": "comfy_find_input_of_main_sampler",
        "sampler_node_types": [
          "KSampler",
          "KSamplerAdvanced"
        ],
        "input_key": "sampler_name",
        "value_type": "string",
        "fallback": "euler"
      },
      {
        "target_key": "parameters.scheduler",
        "method": "comfy_find_input_of_main_sampler",
        "sampler_node_types": [
          "KSampler",
          "KSamplerAdvanced"
        ],
        "input_key": "scheduler",
        "value_type": "string",
        "fallback": "normal"
      },
      {
        "target_key": "parameters.model",
        "method": "comfy_find_input_of_node_type",
        "node_types": [
          "CheckpointLoaderSimple",
          "CheckpointLoader|pysssss",
          "UNETLoader"
        ],
        "input_field": "ckpt_name",
        "data_type": "string",
        "fallback": "Unknown Model"
      },
      {
        "target_key": "parameters.ai_driver",
        "method": "comfy_get_node_by_class",
        "class_type": "Griptape Prompt Driver: OpenAI Compatible",
        "field_name": "model",
        "optional": true
      },
      {
        "target_key": "parameters.griptape_tools",
        "method": "comfy_count_nodes_by_class_prefix",
        "class_prefix": "Griptape Tool:",
        "optional": true
      }
    ],
    "output_template": {
      "parser_name_from_engine": "ComfyUI Griptape",
      "tool": "ComfyUI Griptape",
      "format": "Griptape AI-Enhanced Workflow",
      "prompt": "$prompt",
      "negative_prompt": "$negative_prompt",
      "parameters": {
        "seed": "$parameters.seed",
        "steps": "$parameters.steps",
        "cfg_scale": "$parameters.cfg_scale",
        "sampler_name": "$parameters.sampler_name",
        "scheduler": "$parameters.scheduler",
        "model": "$parameters.model",
        "ai_driver": "$parameters.ai_driver",
        "griptape_tools": "$parameters.griptape_tools"
      },
      "workflow_metadata": {
        "source": "ComfyUI workflow",
        "parser_priority": 155,
        "confidence": "high",
        "ai_framework": "Griptape",
        "intelligent_prompting": true,
        "agent_based": true
      }
    }
  },
  "error_handling": {
    "on_parse_failure": "return_partial_data",
    "log_errors": true,
    "validation_level": "strict"
  },
  "notes": [
    "Detects ComfyUI workflows enhanced with Griptape AI framework",
    "Identifies agent-based prompt generation and AI-driven workflow automation",
    "Priority 155 puts it above generic ComfyUI parsers and most specialized parsers",
    "Extracts AI driver model information and Griptape tool usage when available",
    "Designed for workflows that combine traditional image generation with intelligent AI assistance"
  ]
}