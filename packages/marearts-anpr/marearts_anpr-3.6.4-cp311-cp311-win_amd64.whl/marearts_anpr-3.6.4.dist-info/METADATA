Metadata-Version: 2.1
Name: marearts-anpr
Version: 3.6.4
Summary: MareArts ANPR (Automatic Number Plate Recognition) library
Home-page: https://www.marearts.com
Author: MareArts
Author-email: hello@marearts.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: License :: Other/Proprietary License
Classifier: Operating System :: OS Independent
Requires-Python: <3.13,>=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
License-File: LICENSE_SETUP.md
Requires-Dist: opencv-python>=4.5.0
Requires-Dist: requests<3.0,>=2.32.0
Requires-Dist: imageio<3.0,>=2.34.0
Requires-Dist: pillow<11.0,>=10.4.0
Requires-Dist: PyYAML<7.0,>=6.0.0
Requires-Dist: dotmap<2.0,>=1.3.0
Requires-Dist: marearts-crystal>=2.0.0
Requires-Dist: tqdm<5.0,>=4.66.0
Requires-Dist: numpy<3.0,>=1.21.0; python_version < "3.12"
Requires-Dist: onnxruntime==1.18.1; python_version == "3.9" and platform_machine != "aarch64"
Requires-Dist: onnxruntime==1.15.1; python_version == "3.9" and platform_machine == "aarch64"
Requires-Dist: onnxruntime==1.22.1; python_version >= "3.10" and platform_machine != "aarch64"
Requires-Dist: onnxruntime==1.16.3; python_version >= "3.10" and python_version < "3.11" and platform_machine == "aarch64"
Requires-Dist: onnxruntime==1.18.1; python_version >= "3.11" and platform_machine == "aarch64"
Requires-Dist: numpy<3.0,>=1.26.0; python_version >= "3.12"
Provides-Extra: cuda
Requires-Dist: onnxruntime-gpu==1.18.1; python_version == "3.9" and extra == "cuda"
Requires-Dist: onnxruntime-gpu==1.22.1; python_version >= "3.10" and extra == "cuda"
Provides-Extra: directml
Requires-Dist: onnxruntime-directml==1.18.1; (python_version == "3.9" and platform_system == "Windows") and extra == "directml"
Requires-Dist: onnxruntime-directml==1.22.1; (python_version >= "3.10" and platform_system == "Windows") and extra == "directml"
Provides-Extra: gpu
Requires-Dist: onnxruntime-gpu==1.18.1; python_version == "3.9" and extra == "gpu"
Requires-Dist: onnxruntime-gpu==1.22.1; python_version >= "3.10" and extra == "gpu"
Provides-Extra: tensorrt
Requires-Dist: tensorrt>=8.6.0; platform_system == "Linux" and extra == "tensorrt"
Requires-Dist: pycuda>=2022.1; platform_system == "Linux" and extra == "tensorrt"
Requires-Dist: nvidia-cuda-runtime-cu12; platform_system == "Linux" and extra == "tensorrt"

# MareArts ANPR SDK

[![PyPI version](https://badge.fury.io/py/marearts-anpr.svg)](https://badge.fury.io/py/marearts-anpr)
[![Python versions](https://img.shields.io/pypi/pyversions/marearts-anpr.svg)](https://pypi.org/project/marearts-anpr/)
[![Downloads](https://pepy.tech/badge/marearts-anpr)](https://pepy.tech/project/marearts-anpr)
[![License: Proprietary](https://img.shields.io/badge/License-Proprietary-red.svg)](https://study.marearts.com/p/anpr-lpr-solution.html)
[![Live Demo](https://img.shields.io/badge/demo-live-brightgreen.svg)](http://live.marearts.com)

Automatic Number Plate Recognition (ANPR) SDK for multiple regions with GPU acceleration support.

## Features

- üöó **Multi-Region Support**: EU, Korea, China, and Universal license plates
- ‚ö° **Performance**: Optimized C++ core with GPU acceleration support
- üéØ **Accuracy**: Trained detection and OCR models for various regions
- üÜï **V14 Models**: Latest generation with Crystal v2.4.0 and multi-backend support
- üîß **Integration**: Python API and command-line tools
- üê≥ **Deployment**: Docker support and API server examples

## Quick Start

### Installation

```bash
# CPU Installation
pip install marearts-anpr

# GPU Installation (for faster processing)
pip install marearts-anpr[gpu]        # NVIDIA CUDA (ONNX Runtime GPU)
pip install marearts-anpr[directml]   # Windows GPU (DirectML)
pip install marearts-anpr[tensorrt]   # NVIDIA TensorRT (Linux only)
```

### Basic Usage

#### V1/V2 License (Legacy Models)
```python
from marearts_anpr import marearts_anpr_from_image_file
from marearts_anpr import ma_anpr_detector, ma_anpr_ocr

# Set environment variables (recommended)
# export MAREARTS_ANPR_USERNAME="your-email@domain.com"
# export MAREARTS_ANPR_SERIAL_KEY="your-serial-key"

# Initialize
detector = ma_anpr_detector("v13_middle", user_name, serial_key)
ocr = ma_anpr_ocr("v13_euplus", user_name, serial_key)

# Process image
result = marearts_anpr_from_image_file(detector, ocr, "image.jpg")
print(result)
# Output: {'results': [{'ocr': 'ABC123', 'ocr_conf': 99, ...}], ...}
```

#### V2 License (V14 Models)
```python
from marearts_anpr import ma_anpr_detector_v14, ma_anpr_ocr

# V2 credentials with signature
# export MAREARTS_ANPR_SIGNATURE="your-16-char-signature"

# Initialize V14 detector
detector = ma_anpr_detector_v14(
    "v14_small_640p_fp16",  # V14 model
    user_name, 
    serial_key,  # MAEV2: format
    signature,   # Required for V14
    backend="cuda"  # cpu, cuda, directml, tensorrt
)
ocr = ma_anpr_ocr("v13_euplus", user_name, serial_key)

# Process image
result = marearts_anpr_from_image_file(detector, ocr, "image.jpg")
```

### CLI Usage

```bash
# Process image
ma-anpr image.jpg

# Test without credentials (1000 requests/day)
ma-anpr test-api image.jpg

# Validate license
ma-anpr validate
```

## V14 Models (NEW!)

The latest V14 models introduce Crystal v2.4.0 support with enhanced features:

### Features
- üîê **Digital Signature Authentication**: Enhanced security with V2 licenses
- üéØ **Multi-Backend Support**: CPU, CUDA, DirectML, TensorRT
- ‚ö° **Optimized Inference**: FP32, FP16, and FP8 precision options
- üöÄ **TensorRT Acceleration**: Up to 4x faster on NVIDIA GPUs

### Requirements
- V2 License key (starts with `MAEV2:`)
- Digital signature (16 hex characters)
- Backend-specific dependencies (CUDA, TensorRT, etc.)

### Available V14 Models
- **Standard**: `v14_small_320p_fp32`, `v14_small_320p_fp16`, `v14_small_640p_fp32`, `v14_small_640p_fp16`
- **TensorRT 320p**: `v14_small_320p_trt_fp16`, `v14_small_320p_trt_fp32`, `v14_small_320p_trt_fp8`, `v14_small_320p_trt_bf16`
- **TensorRT 640p**: `v14_small_640p_trt_fp16`, `v14_small_640p_trt_fp32`, `v14_small_640p_trt_fp8`, `v14_small_640p_trt_bf16`
- **Coming Soon**: V14 middle and large models

## Performance

*Benchmarked on: Intel i7-9800X @ 3.8GHz | NVIDIA RTX 4090 | Ubuntu Linux*

### V14 Models (V2 License Required)
| Model | Size | Precision | Recall | F1 Score | mAP | Speed CUDA | Speed CPU | Notes |
|-------|------|-----------|---------|----------|-----|------------|-----------|--------|
| v14_small_320p_fp32 | 135MB | 95.92% | 97.01% | 95.62% | 93.66% | 9.9ms (101 FPS) | 37ms (27 FPS) | Standard precision |
| v14_small_320p_fp16 | 68MB | 95.92% | 97.00% | 95.62% | 93.66% | 15.9ms (63 FPS)* | 64.7ms (15 FPS) | *CUDA not optimized for FP16 |
| v14_small_640p_fp32 | 136MB | 94.97% | 98.40% | 95.80% | 93.87% | 12.7ms (79 FPS) | 102.8ms (10 FPS) | High detail |
| v14_small_640p_fp16 | 68MB | 94.99% | 98.40% | 95.81% | 93.89% | 22.3ms (45 FPS)* | 182.2ms (5 FPS) | *Use TensorRT for FP16 |
| v14_small_320p_trt_fp16 | 74MB | 95.85% | 98.11% | 96.18% | 94.37% | 7.9ms (127 FPS) | - | ‚ö° Fastest |
| v14_small_320p_trt_fp32 | 135MB | 95.85% | 98.12% | 96.18% | 94.37% | 8.8ms (114 FPS) | - | TensorRT FP32 |
| v14_small_320p_trt_fp8 | 208MB | 95.85% | 98.12% | 96.18% | 94.37% | 8.7ms (115 FPS) | - | RTX 40 only |
| v14_small_320p_trt_bf16 | 74MB | 95.86% | 97.97% | 96.11% | 94.28% | 8.6ms (116 FPS) | - | TensorRT BF16 |
| v14_small_640p_trt_fp16 | 76MB | 94.81% | 99.18% | 96.07% | 94.19% | 12.1ms (83 FPS) | - | üéØ Recommended |
| v14_small_640p_trt_fp32 | 163MB | 94.81% | 99.18% | 96.07% | 94.18% | 12.7ms (79 FPS) | - | TensorRT FP32 |
| v14_small_640p_trt_fp8 | 163MB | 94.81% | 99.18% | 96.07% | 94.18% | 13.9ms (72 FPS) | - | RTX 40 only |
| v14_small_640p_trt_bf16 | 154MB | 95.24% | 98.84% | 96.15% | 94.33% | 12.5ms (80 FPS) | - | Best accuracy |

### V13 Models (All Licenses)
| Model | Size | Precision | Recall | F1 Score | Speed CUDA | Recommendation |
|-------|------|-----------|---------|----------|------------|----------------|
| v13_nano | 14MB | 95.3% | 96.5% | 0.951 | 7.0ms | ‚ö° Fastest |
| v13_small | 49MB | 95.7% | 97.9% | 0.961 | 7.4ms | |
| v13_middle | 103MB | 95.7% | 98.0% | 0.962 | 8.3ms | üéØ Best Balance |
| v13_large | 129MB | 95.9% | 98.1% | 0.964 | 9.5ms | üìà Best v13 |

## Documentation

Visit our [GitHub repository](https://github.com/MareArts/MareArts-ANPR) for comprehensive documentation:

- üì¶ [Installation Guide](https://github.com/MareArts/MareArts-ANPR/blob/main/docs/installation.md)
- üîß [Usage Examples](https://github.com/MareArts/MareArts-ANPR/blob/main/docs/usage.md)
- üöÄ [Model Versions](https://github.com/MareArts/MareArts-ANPR/blob/main/docs/models.md)
- üåç [Regional Support](https://github.com/MareArts/MareArts-ANPR/blob/main/docs/regional-support.md)
- üê≥ [Docker Deployment](https://github.com/MareArts/MareArts-ANPR/blob/main/docs/docker.md)
- üß™ [Try ANPR](https://github.com/MareArts/MareArts-ANPR/blob/main/docs/api-testing.md)
- ‚ùì [FAQ](https://github.com/MareArts/MareArts-ANPR/blob/main/docs/faq.md)

## MareArts Ecosystem

Explore our AI toolkit:

- **marearts-anpr** - Automatic Number Plate Recognition ([GitHub](https://github.com/MareArts/MareArts-ANPR))
- **marearts-road-objects** - Road object detection for persons, vehicles, and 2-wheelers ([GitHub](https://github.com/MareArts/MareArts-Road-Objects))
- **marearts-xcolor** - Color extraction and similarity analysis ([GitHub](https://github.com/MareArts/MareArts-Xcolor))
- **marearts-mast** - Real-time panoramic stitching ([GitHub](https://github.com/MareArts/MareArts-MAST))
- **marearts-crystal** - Encryption and decryption toolkit ([PyPI](https://pypi.org/project/marearts-crystal/))

## Support & Resources

| Resource | Link |
|----------|------|
| üìß **Contact** | [hello@marearts.com](mailto:hello@marearts.com) |
| üè† **Homepage** | [https://marearts.com](https://marearts.com) |
| üí≥ **License Purchase** | [ANPR Solution](https://study.marearts.com/p/anpr-lpr-solution.html) |
| üéÆ **Live Demo** | [http://live.marearts.com](http://live.marearts.com) |
| üì∫ **Video Examples** | [YouTube Playlist](https://www.youtube.com/playlist?list=PLvX6vpRszMkxJBJf4EjQ5VCnmkjfE59-J) |
| üß™ **Colab Demo** | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1zZlueTZ1Le73yOQ3mdJFONxcebKyCgr-?usp=sharing) |

## License

¬© 2024 MareArts. All rights reserved.

This software requires a valid license key. Visit [MareArts ANPR Solution](https://study.marearts.com/p/anpr-lpr-solution.html) for licensing options.

