[project]
name = "mcp-ds-toolkit-server"
version = "0.3.0"
description = "Pure standalone MCP Data Science Server - Complete DS workflows with local SQLite tracking, no external services required"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    {name = "Yasser El Haddar", email = "yasserelhaddar@gmail.com"}
]
license = {text = "MIT"}
keywords = ["mcp", "data-science", "scikit-learn", "standalone", "machine-learning", "sqlite", "local-tracking"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    # Core MCP
    "mcp>=1.0.0",
    # Machine Learning Core
    "scikit-learn>=1.4.0",
    "pandas>=2.2.0",
    "numpy>=1.26.0",
    "scipy>=1.11.0",
    # Core utilities
    "pyyaml>=6.0.1",
    "joblib>=1.3.0",
    "requests>=2.31.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.13.2",
]

[project.optional-dependencies]
# Cloud storage extras (optional)
aws = [
    "s3fs>=2023.1.0",
    "boto3>=1.28.0",
]

gcp = [
    "gcsfs>=2023.1.0",
    "google-cloud-storage>=2.10.0",
]

azure = [
    "azure-storage-blob>=12.0.0",
    "azure-identity>=1.12.0",
]

# Development dependencies
dev = [
    # Testing
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    
    # Code quality
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "bandit>=1.7.0",
    
    # Security scanning
    "safety>=2.3.0",
    "pip-audit>=2.6.0",
    
    # Development tools
    "ipython>=8.21.0",
    "jupyter>=1.0.0",
    "notebook>=7.0.0",
]

# Documentation dependencies
docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=2.0.0",
    "myst-parser>=2.0.0",
    "sphinx-autodoc-typehints>=1.25.0",
]

# All optional dependencies
all = [
    "mcp-ds-toolkit-server[aws,gcp,azure,dev,docs]",
]

[project.urls]
Homepage = "https://github.com/Yasserelhaddar/MCP-DS-Toolkit-Server"
Repository = "https://github.com/Yasserelhaddar/MCP-DS-Toolkit-Server"
"Bug Tracker" = "https://github.com/Yasserelhaddar/MCP-DS-Toolkit-Server/issues"

[project.scripts]
mcp-ds-toolkit-server = "mcp_ds_toolkit_server.__main__:cli_main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_ds_toolkit_server"]

[tool.hatch.version]
path = "src/mcp_ds_toolkit_server/__init__.py"

# Testing configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/mcp_ds_toolkit_server",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=50",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async tests",
]

# Code formatting
[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mcp_ds_toolkit_server"]

# Type checking
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "sklearn.*",
    "matplotlib.*",
    "seaborn.*",
    "plotly.*",
]
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["src/mcp_ds_toolkit_server"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
]

