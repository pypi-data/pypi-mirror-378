[project]
authors = [
  { name = "Cell Dynamics Team", email = "celldynamics@proton.me" },
]
dependencies = [
  "arviz>=0.21.0",
  "beartype>=0.20.0",
  "diffrax>=0.6.1",
  "einops>=0.8.1",
  "funsor>=0.4.5",
  "h5py>=3.13.0",
  "igraph>=0.11.8",
  "jax>=0.4.35; platform_system!='Linux' or platform_machine!='x86_64'",
  "jax[cuda12]>=0.4.35; platform_system=='Linux' and platform_machine=='x86_64'",
  "jaxtyping>=0.2.36",
  "leidenalg>=0.10.2",
  "matplotlib>=3.10.1",
  "numpy>=2.1.3",
  "numpyro>=0.18.0",
  "optax>=0.2.4",
  "pandas>=2.2.3",
  "pythran>=0.16.1",
  "rich>=13.9.4",
  "scanpy>=1.11.0",
  "scipy>=1.15.2",
  "scvi-tools>=1.2.2",
  "torch>=2.4.0",
  "xarray>=2025.1.2",
]
description = "Probabilistic modeling of cellular dynamics"
name = "stormi"
readme = "README.md"
requires-python = ">=3.11,<3.13"
version = "0.7.0"

[project.optional-dependencies]
preprocessing = [
  "gtfparse",
  "harmonypy>=0.0.10",
  "pybiomart>=0.2.0",
  "pyranges>=0.1.4",
  "tangermeme>=0.4.0",
]

[tool.uv.sources]
gtfparse = { git = "https://github.com/openvax/gtfparse.git", rev = "0432f40185542b1808522573295067e20ba33f34" }

[project.scripts]
stormi = "stormi:main"

[build-system]
build-backend = "hatchling.build"
requires      = ["hatchling"]

[tool.hatch.build.targets.wheel]
packages = ["src/stormi"]

[dependency-groups]
dev = [
  { include-group = "docs" },
  { include-group = "lint" },
  { include-group = "test" },
  { include-group = "types" },
]
docs = [
  "jupyter-cache>=1.0.1",
  "jupyter>=1.1.1",
  "quartodoc>=0.9.1",
]
lint = [
  "ruff>=0.11.0",
]
test = [
  "hypothesis>=6.129.4",
  "pytest-cov>=6.0.0",
  "pytest>=8.3.5",
  "xdoctest>=1.2.0",
]
types = [
  "pyright>=1.1.396",
]

[tool.uv]
default-groups = ["lint", "test", "types"]

[tool.pixi.project]
channels  = ["conda-forge", "nvidia"]
platforms = ["linux-64", "osx-arm64"]
preview   = ["pixi-build"]

[tool.pixi.dependencies]
arviz      = "*"
beartype   = "*"
diffrax    = "*"
einops     = "*"
funsor     = "*"
h5py       = "*"
igraph     = "*"
jax        = "*"
jaxtyping  = "*"
leidenalg  = "*"
matplotlib = "*"
numpy      = "*"
numpyro    = "*"
optax      = "*"
pandas     = "*"
python     = ">=3.11,<3.13"
pythran    = "*"
rich       = "*"
scanpy     = "*"
scipy      = "*"
scvi-tools = "*"
xarray     = "*"

[tool.pixi.feature.cuda]
platforms           = ["linux-64", "osx-arm64"]
system-requirements = { cuda = "12" }

[tool.pixi.feature.cuda.target.linux-64.dependencies]
jaxlib = { version = "*", build = "*cuda*" }

[tool.pixi.feature.cuda.target.osx-arm64.dependencies]
jaxlib = { version = "*", build = "*cpu*" }

[tool.pixi.feature.docs.dependencies]
jupyter       = "*"
jupyter-cache = "*"
quartodoc     = "*"

[tool.pixi.feature.lint.dependencies]
ruff = "*"

[tool.pixi.feature.test.dependencies]
hypothesis = "*"
pytest     = "*"
pytest-cov = "*"
xdoctest   = "*"

[tool.pixi.feature.types.dependencies]
pyright = "*"

[tool.pixi.feature.preprocessing.dependencies]
# NOTE: not on conda-forge
# gtfparse    = "*"
polars  = ">=0.20.31"
pyarrow = ">=14.0.2"
#=========================
# NOTE: not on conda-forge
# pybiomart = "*" 
# requires # ['future', 'pandas', 'requests', 'requests_cache']
# NOTE: not on conda-forge
# pyranges = "*" 
# requires # ["pandas", "ncls>=0.0.63", "tabulate", "sorted_nearest>=0.0.33", "natsort"]
future  = "*"
natsort = "*"
# ncls = "*"
requests       = "*"
requests_cache = "*"
# sorted_nearest = "*"
tabulate = "*"
#=======================
# NOTE: not on conda-forge
# https://github.com/jmschrei/tangermeme/blob/v0.4.0/requirements.txt
# tangermeme = "*"
# pyfaidx = "*"
# pybigwig = "*"
logomaker = "*"
#=========================

[tool.pixi.pypi-dependencies]
stormi = { path = ".", editable = true }

[tool.pixi.environments]
cuda              = { features = ["cuda"], solve-group = "default" }
default           = { features = [], solve-group = "default" }
dev               = { features = ["dev"], solve-group = "default" }
dev-cuda          = { features = ["cuda", "dev"], solve-group = "default" }
dev-preprocessing = { features = ["dev", "preprocessing"], solve-group = "default" }
docs              = { features = ["docs"], solve-group = "default" }
lint              = { features = ["lint"], solve-group = "default" }
preprocessing     = { features = ["preprocessing"], solve-group = "default" }
test              = { features = ["test"], solve-group = "default" }
types             = { features = ["types"], solve-group = "default" }

[tool.pixi.package]
name    = "stormi"
version = "0.7.0"

[tool.pixi.package.run-dependencies]

[tool.pixi.package.build]
backend = { name = "pixi-build-python", version = "0.1.*" }
channels = [
  "https://prefix.dev/conda-forge",
  "https://prefix.dev/pixi-build-backends",
]

[tool.pixi.package.host-dependencies]
hatchling = "1.27.0.*"

[tool.pytest.ini_options]
addopts = """
-m "not slow"
-rA
--xdoctest
--disable-warnings
--cov=src/stormi/
--cov-report=term-missing
--durations=0
"""
log_level = "INFO"
testpaths = [
  "src/stormi/tests",
]

[tool.coverage.run]
omit = [
  "src/stormi/tests/*",
]

[tool.ruff]
line-length    = 88
src            = ["src"]
target-version = "py311"

[tool.ruff.lint]
select = [
  # "B", # flake8-bugbear
  # "E", # pycodestyle errors
  # "F", # pyflakes
  "I", # isort
  "W", # pycodestyle warnings
]
