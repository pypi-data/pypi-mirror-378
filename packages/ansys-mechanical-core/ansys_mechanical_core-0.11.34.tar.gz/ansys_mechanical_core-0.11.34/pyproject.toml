[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[project]
name = "ansys-mechanical-core"
version = "0.11.34"
description = "A python wrapper for Ansys Mechanical"
readme = "README.rst"
requires-python = ">=3.10,<4.0"
authors = [
    { name = "ANSYS, Inc.", email = "pyansys.core@ansys.com" },
]
maintainers = [
    { name = "ANSYS, Inc.", email = "pyansys.core@ansys.com" },
]
keywords = [
    "pymechanical",
    "mechanical",
    "ansys",
    "pyansys",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "ansys-api-mechanical==0.1.3",
    "ansys-mechanical-stubs==0.1.6",
    "ansys-pythonnet>=3.1.0rc6",
    "ansys-tools-path>=0.3.1",
    "appdirs>=1.4.0",
    "click>=8.1.3",
    "clr-loader>=0.2.6",
    "grpcio>=1.30.0",
    "protobuf>=3.12.2,<6",
    "psutil>=6",
    "tqdm>=4.45.0",
    "requests>=2,<3",
]

[project.license]
file = "LICENSE"

[project.urls]
Homepage = "https://github.com/ansys/pymechanical"
Documentation = "https://mechanical.docs.pyansys.com"
Repository = "https://github.com/ansys/pymechanical"
Issues = "https://github.com/ansys/pymechanical/issues"
Changelog = "https://mechanical.docs.pyansys.com/version/stable/changelog.html"

[project.optional-dependencies]
tests = [
    "pytest==8.4.2",
    "pytest-cov==7.0.0",
    "pytest-print==1.1.0",
    "psutil==7.0.0",
]
doc = [
    "sphinx==8.2.3",
    "ansys-sphinx-theme[autoapi,changelog]==1.6.1",
    "imageio-ffmpeg==0.6.0",
    "imageio==2.37.0",
    "jupyter_sphinx==0.5.3",
    "jupyterlab>=3.2.8",
    "matplotlib==3.10.6",
    "numpy==2.2.6",
    "numpydoc==1.8.0",
    "pypandoc==1.15",
    "sphinx-autobuild==2024.10.3",
    "sphinx-autodoc-typehints==3.1.0",
    "sphinx-copybutton==0.5.2",
    "sphinx_design==0.6.1",
    "sphinx-gallery==0.19.0",
    "sphinx-notfound-page==1.1.0",
    "sphinxcontrib-websupport==2.0.0",
    "sphinx-click==6.1.0",
    "ansys-tools-visualization-interface>=0.2.6",
]
graphics = [
    "ansys-tools-visualization-interface>=0.2.6",
    "usd-core==25.8",
]
rpc = [
    "rpyc==6.0.2",
    "toolz==1.0.0",
]
pim = [
    "ansys-platform-instancemanagement>=1.0.1",
]

[project.scripts]
ansys-mechanical = "ansys.mechanical.core.run:cli"
ansys-mechanical-ideconfig = "ansys.mechanical.core.ide_config:cli"
find-mechanical = "ansys.mechanical.core.embedding.find_mechanical:cli"

[tool.pdm.build]
includes = [
    "src",
    "mechanical-env",
]
excludes = [
    "tests",
]

[tool.pdm.build.wheel-data]
scripts = [
    "mechanical-env",
]

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
force_sort_within_sections = true
line_length = 100
src_paths = [
    "doc",
    "src",
    "tests",
]

[tool.coverage.run]
relative_files = true
source = [
    "ansys.mechanical",
]

[tool.coverage.report]
show_missing = true

[tool.coverage.html]
directory = ".cov/html"

[tool.coverage.xml]
output = ".cov/coverage.xml"

[tool.pytest.ini_options]
minversion = "7.1"
addopts = "-ra -s --durations=0 --cov=ansys.mechanical --cov-report html:.cov/html --cov-report xml:.cov/xml --cov-report term --cov-append -vv --print --print-relative-time"
testpaths = [
    "tests",
]
markers = [
    "embedding: tests that embed Mechanical in the python process",
    "embedding_scripts: embedding tests that use subprocess",
    "python_env: tests that check for an appropriate python environment",
    "remote_session_launch: tests that launch Mechanical and work with gRPC server inside it",
    "remote_session_connect: tests that connect to Mechanical and work with gRPC server inside it",
    "minimum_version(num): tests that run if ansys-version is greater than or equal to the minimum version provided",
    "version_range(min_revn,max_revn): tests that run if ansys-version is in the range of the minimum and maximum revision numbers inclusive.",
    "windows_only: tests that run if the testing platform is on Windows",
    "linux_only: tests that run if the testing platform is on Linux",
    "cli: tests for the Command Line Interface",
    "embedding_backgroundapp: tests for the BackgroundApp",
    "embedding_logging: tests for the logging with Embedded App",
]
xfail_strict = true

[tool.towncrier]
package = "ansys.mechanical.core"
directory = "doc/changelog.d"
filename = "doc/source/changelog.rst"
start_string = ".. towncrier release notes start\n"
template = "doc/changelog.d/changelog_template.jinja"
title_format = "`{version} <https://github.com/ansys/pymechanical/releases/tag/v{version}>`_ - {project_date}"
issue_format = "`#{issue} <https://github.com/ansys/pymechanical/pull/{issue}>`_"
type = [
    { directory = "added", name = "Added", showcontent = true },
    { directory = "changed", name = "Changed", showcontent = true },
    { directory = "fixed", name = "Fixed", showcontent = true },
    { directory = "dependencies", name = "Dependencies", showcontent = true },
    { directory = "miscellaneous", name = "Miscellaneous", showcontent = true },
    { directory = "documentation", name = "Documentation", showcontent = true },
    { directory = "maintenance", name = "Maintenance", showcontent = true },
    { directory = "test", name = "Test", showcontent = true },
]

[tool.flake8]
exclude = [
    "venv",
    "__init__.py",
    "doc/_build",
    ".venv",
]
select = [
    "W191",
    "W291",
    "W293",
    "W391",
    "E115",
    "E117",
    "E122",
    "E124",
    "E125",
    "E225",
    "E231",
    "E301",
    "E303",
    "E501",
    "F401",
    "F403",
]
count = true
max-complexity = 10
max-line-length = 100
statistics = true

[tool.tox]
legacy_tox_ini = "[tox]\ndescription = Default tox environments list\nenvlist =\n    style,{py310,py311,py312}{,-coverage},doc\npassenv =  AWP_ROOT\nskip_missing_interpreters = true\nisolated_build = true\nisolated_build_env = build\n\n[gh-actions]\ndescription = The tox environment to be executed in gh-actions for a given python version\npython =\n    3.10: style,py310-coverage,doc\n    3.11: style,py311-coverage,doc\n    3.12: style,py311-coverage,doc\n    3.13: style,py311-coverage,doc\n\n[testenv]\ndescription = Checks for project unit tests and coverage (if desired)\nbasepython =\n    py310: python3.10\n    py311: python3.11\n    py312: python3.12\n    py313: python3.13\n    py: python3\n    {style,reformat,doc,build}: python3\npassenv = *\nsetenv =\n    PYTHONUNBUFFERED = yes\n    coverage: PYTEST_EXTRA_ARGS = --cov=ansys.mechanical --cov-report=term --cov-report=xml:.cov/coverage.xml --cov-report=html:.cov/html\nextras = tests\ncommands =\n    pytest {env:PYTEST_MARKERS:} {env:PYTEST_EXTRA_ARGS:} {posargs:-vv}\n\n[testenv:style]\ndescription = Checks project code style\npassenv = *\nskip_install = true\ndeps =\n    pre-commit\ncommands =\n    pre-commit install\n    pre-commit run --all-files --show-diff-on-failure\n\n[testenv:doc]\ndescription = Check if documentation generates properly\npassenv = *\nextras = doc\ncommands =\n    sphinx-build -d \"{toxworkdir}/doc_doctree\" doc/source \"{toxinidir}/doc/_build/html\" --color -vW -bhtml\n"
