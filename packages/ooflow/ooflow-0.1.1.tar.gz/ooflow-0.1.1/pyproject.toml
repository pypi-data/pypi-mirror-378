[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "ooflow"
version = "0.1.1"
description = "A lightweight Python framework for building asynchronous data processing pipelines with stateful nodes"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "fanfank", email = "fanfank@example.com"},
]
keywords = ["async", "stateful", "ai", "streaming", "asyncio", "graph", "nodes", "pipeline", "workflow", "data-processing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dependencies = [
    "typing_extensions>=4.0.0; python_version<'3.10'"
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-asyncio>=0.18.0",
    "coverage>=5.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
]
test = [
    "pytest>=6.0",
    "pytest-asyncio>=0.18.0",
    "coverage>=5.0",
]

[project.urls]
Homepage = "https://github.com/fanfank/ooflow"
"Bug Reports" = "https://github.com/fanfank/ooflow/issues"
"Source Code" = "https://github.com/fanfank/ooflow"
Documentation = "https://github.com/fanfank/ooflow#readme"

[tool.setuptools.packages.find]
where = ["."]
include = ["ooflow*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["ooflow"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
