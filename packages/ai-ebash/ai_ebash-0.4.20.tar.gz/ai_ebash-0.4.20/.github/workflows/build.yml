name: Build and Publish

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine setuptools wheel setuptools-scm

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Ускорение сборки DEB (отключение man-db)
        run: |
          # Отключаем автоматическое обновление man-db
          echo "man-db man-db/auto-update boolean false" | sudo debconf-set-selections
          
          # Создаем политику исключения документации
          echo 'path-exclude=/usr/share/man/*' | sudo tee /etc/dpkg/dpkg.cfg.d/exclude-documentation
          
          # Устанавливаем переменные для пропуска проверок и документации
          export DEB_BUILD_OPTIONS=nocheck,nodocs

      - name: Install system dependencies for DEB build
        run: |
          sudo apt-get update
          # На всякий случай включим universe (на runner'ах обычно включен)
          sudo apt-get install -y software-properties-common || true
          sudo add-apt-repository -y universe || true
          sudo apt-get update
          sudo apt-get install -y build-essential python3-all debhelper dh-python dh-virtualenv python3-venv python3-virtualenv dpkg-dev
          # Диагностика наличия плагина dh-virtualenv
          dpkg -s dh-virtualenv || true
          ls -al /usr/share/perl5/Debian/Debhelper/Sequence/ || true

      - name: Build DEB package
        run: |
          echo "==== debian/rules ===="
          sed -n '1,200p' debian/rules || true
          export DEB_BUILD_OPTIONS="nocheck nodocs"
          export DEB_BUILD_PROFILES="nodoc"
          echo "DEB_BUILD_OPTIONS=$DEB_BUILD_OPTIONS"
          echo "DEB_BUILD_PROFILES=$DEB_BUILD_PROFILES"
          # Сборка DEB используя debian/ из репозитория (dh-virtualenv установит зависимости из debian/requirements.txt)
          dpkg-buildpackage -us -uc -b
          mkdir -p dist_deb
          # Скопируем полученные .deb из родительской директории
          cp ../*.deb dist_deb/ || cp ./*.deb dist_deb/ || true

      - name: Upload DEB to GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: dist_deb/*.deb
