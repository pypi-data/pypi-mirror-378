# Generated by Django Database Optimization

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('django_twilio_call', '0001_initial'),
    ]

    operations = [
        # Remove old indexes first to avoid conflicts
        migrations.RunSQL(
            "DROP INDEX IF EXISTS idx_available_agents;",
            reverse_sql="",
        ),
        migrations.RunSQL(
            "DROP INDEX IF EXISTS idx_active_calls;",
            reverse_sql="",
        ),
        migrations.RunSQL(
            "DROP INDEX IF EXISTS idx_queued_calls;",
            reverse_sql="",
        ),

        # Agent model optimizations
        migrations.AddIndex(
            model_name='agent',
            index=models.Index(fields=['is_active', 'status', 'last_status_change'], name='agent_activity_idx'),
        ),
        migrations.AddIndex(
            model_name='agent',
            index=models.Index(fields=['status', 'is_active', 'max_concurrent_calls'], name='agent_routing_idx'),
        ),

        # Call model optimizations
        migrations.AddIndex(
            model_name='call',
            index=models.Index(fields=['agent', 'status', 'created_at'], name='call_agent_status_idx'),
        ),
        migrations.AddIndex(
            model_name='call',
            index=models.Index(fields=['queue', 'status', 'created_at'], name='call_queue_status_idx'),
        ),
        migrations.AddIndex(
            model_name='call',
            index=models.Index(fields=['status', 'created_at'], name='call_status_time_idx'),
        ),
        migrations.AddIndex(
            model_name='call',
            index=models.Index(fields=['created_at', 'direction', 'status'], name='call_analytics_idx'),
        ),
        migrations.AddIndex(
            model_name='call',
            index=models.Index(fields=['agent', 'created_at', 'duration'], name='call_agent_metrics_idx'),
        ),
        migrations.AddIndex(
            model_name='call',
            index=models.Index(fields=['queue', 'created_at', 'queue_time'], name='call_queue_metrics_idx'),
        ),
        migrations.AddIndex(
            model_name='call',
            index=models.Index(fields=['from_number', 'created_at'], name='call_from_lookup_idx'),
        ),
        migrations.AddIndex(
            model_name='call',
            index=models.Index(fields=['to_number', 'created_at'], name='call_to_lookup_idx'),
        ),

        # CallLog model optimizations
        migrations.AddIndex(
            model_name='calllog',
            index=models.Index(fields=['call', 'created_at'], name='calllog_timeline_idx'),
        ),
        migrations.AddIndex(
            model_name='calllog',
            index=models.Index(fields=['event_type', 'created_at'], name='calllog_event_time_idx'),
        ),
        migrations.AddIndex(
            model_name='calllog',
            index=models.Index(fields=['agent', 'event_type', 'created_at'], name='calllog_agent_event_idx'),
        ),
        migrations.AddIndex(
            model_name='calllog',
            index=models.Index(fields=['call', 'event_type', 'created_at'], name='calllog_call_event_idx'),
        ),

        # AgentActivity model optimizations
        migrations.AddIndex(
            model_name='agentactivity',
            index=models.Index(fields=['agent', 'created_at'], name='activity_agent_time_idx'),
        ),
        migrations.AddIndex(
            model_name='agentactivity',
            index=models.Index(fields=['activity_type', 'created_at'], name='activity_type_time_idx'),
        ),
        migrations.AddIndex(
            model_name='agentactivity',
            index=models.Index(fields=['agent', 'activity_type', 'created_at'], name='activity_agent_type_idx'),
        ),
        migrations.AddIndex(
            model_name='agentactivity',
            index=models.Index(fields=['agent', 'from_status', 'to_status', 'created_at'], name='activity_status_change_idx'),
        ),

        # Create partial indexes using raw SQL for better performance
        # PostgreSQL specific optimizations
        migrations.RunSQL(
            """
            CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_available_agents
            ON django_twilio_call_agent(last_status_change)
            WHERE status = 'available' AND is_active = true;
            """,
            reverse_sql="DROP INDEX IF EXISTS idx_available_agents;",
        ),

        migrations.RunSQL(
            """
            CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_active_calls
            ON django_twilio_call_call(created_at)
            WHERE status IN ('queued', 'ringing', 'in-progress');
            """,
            reverse_sql="DROP INDEX IF EXISTS idx_active_calls;",
        ),

        migrations.RunSQL(
            """
            CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_queued_calls
            ON django_twilio_call_call(queue_id, created_at)
            WHERE status = 'queued';
            """,
            reverse_sql="DROP INDEX IF EXISTS idx_queued_calls;",
        ),

        # Add database constraints for data integrity
        migrations.RunSQL(
            """
            ALTER TABLE django_twilio_call_call
            ADD CONSTRAINT chk_call_duration_positive
            CHECK (duration >= 0);
            """,
            reverse_sql="ALTER TABLE django_twilio_call_call DROP CONSTRAINT IF EXISTS chk_call_duration_positive;",
        ),

        migrations.RunSQL(
            """
            ALTER TABLE django_twilio_call_call
            ADD CONSTRAINT chk_queue_time_positive
            CHECK (queue_time >= 0);
            """,
            reverse_sql="ALTER TABLE django_twilio_call_call DROP CONSTRAINT IF EXISTS chk_queue_time_positive;",
        ),

        migrations.RunSQL(
            """
            ALTER TABLE django_twilio_call_agent
            ADD CONSTRAINT chk_max_concurrent_calls_positive
            CHECK (max_concurrent_calls > 0);
            """,
            reverse_sql="ALTER TABLE django_twilio_call_agent DROP CONSTRAINT IF EXISTS chk_max_concurrent_calls_positive;",
        ),
    ]