[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "django-twilio-call"
version = "0.1.1"
description = "A Django package for call center functionality using Twilio"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Gojjo Tech", email = "admin@gojjotech.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Framework :: Django",
]
dependencies = [
    "Django>=4.2,<5.2",
    "djangorestframework>=3.14.0",
    "twilio>=8.0.0",
    "celery>=5.3.0",
    "redis>=4.5.0",
    "python-decouple>=3.8",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "pytest>=7.4.0",
    "pytest-django>=4.5.0",
    "pytest-cov>=4.1.0",
    "factory-boy>=3.3.0",
    "responses>=0.23.0",
    "ipython>=8.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/hmesfin/django-twilio-call"
Documentation = "https://django-twilio-call.readthedocs.io"
Repository = "https://github.com/hmesfin/django-twilio-call"
"Bug Tracker" = "https://github.com/hmesfin/django-twilio-call/issues"

[tool.ruff]
target-version = "py38"
line-length = 120
fix = true
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
    "D",  # pydocstyle
    "S",  # flake8-bandit
    "T20", # flake8-print
    "RUF", # Ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D106",  # Missing docstring in public nested class
    "D107",  # Missing docstring in __init__
    "D203",  # 1 blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
    "S101",  # Use of assert (needed for tests)
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    "migrations",
    "*.egg-info",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.isort]
known-first-party = ["django_twilio_call"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "D"]
"*/migrations/*" = ["E501", "D"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = ["test_*.py", "*_test.py", "tests.py"]
addopts = """
    --verbose
    --strict-markers
    --tb=short
    --cov=django_twilio_call
    --cov-report=term-missing:skip-covered
    --cov-report=html
    --cov-report=xml
    --cov-config=setup.cfg
"""
testpaths = ["tests"]

[tool.coverage.run]
source = ["django_twilio_call"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]

[tool.django-stubs]
django_settings_module = "tests.settings"