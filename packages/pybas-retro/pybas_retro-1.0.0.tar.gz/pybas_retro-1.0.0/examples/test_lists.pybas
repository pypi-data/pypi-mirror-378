10 REM PyBAS Python List Support Demo
20 REM ===============================
30 REM PyBAS can use Python lists and list operations!
40 PRINT "PyBAS Python List Support Demo"
50 PRINT "=============================="
60 PRINT ""
70 REM Basic list creation and access
80 LET NUMBERS = [1, 2, 3, 4, 5]
90 PRINT "Original list: " + str(NUMBERS)
100 PRINT "First element: " + str(NUMBERS[0])
110 PRINT "Last element: " + str(NUMBERS[-1])
120 PRINT "List length: " + str(len(NUMBERS))
130 PRINT ""
140 REM List concatenation
150 LET NUMBERS = NUMBERS + [6, 7, 8]
160 PRINT "After adding [6, 7, 8]: " + str(NUMBERS)
170 PRINT ""
180 REM String lists
190 LET NAMES = ["Alice", "Bob", "Charlie", "David"]
200 PRINT "Names: " + str(NAMES)
210 PRINT ""
220 REM List iteration with FOR loop
230 PRINT "Iterating through names:"
240 FOR I = 0 TO 3
250   PRINT "  " + str(I + 1) + ". " + NAMES[I]
260 NEXT I
270 PRINT ""
280 REM Python list functions
290 LET SCORES = [85, 92, 78, 96, 88]
300 PRINT "Test scores: " + str(SCORES)
310 PRINT "Highest score: " + str(max(SCORES))
320 PRINT "Lowest score: " + str(min(SCORES))
330 PRINT "Average score: " + str(sum(SCORES) / len(SCORES))
340 PRINT "Sorted scores: " + str(sorted(SCORES))
350 PRINT ""
360 REM List slicing
370 PRINT "List slicing examples:"
380 PRINT "First 3 scores: " + str(SCORES[:3])
390 PRINT "Last 2 scores: " + str(SCORES[-2:])
400 PRINT "Middle scores: " + str(SCORES[1:4])
410 PRINT ""
420 REM List comprehensions
430 LET DOUBLED = [x * 2 for x in [1, 2, 3, 4]]
440 PRINT "Doubled numbers: " + str(DOUBLED)
450 PRINT ""
460 REM Mixed data types
470 LET MIXED = [1, "hello", 3.14, [1, 2]]
480 PRINT "Mixed list: " + str(MIXED)
490 PRINT "Nested list element: " + str(MIXED[3][0])
500 PRINT ""
510 PRINT "All list operations completed successfully!"
520 END