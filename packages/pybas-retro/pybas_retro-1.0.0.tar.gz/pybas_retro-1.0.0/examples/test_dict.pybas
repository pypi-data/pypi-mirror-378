10 REM Python Dictionary (Map) Examples in PyBAS
20 PRINT "=== DICTIONARY (MAP) EXAMPLES ==="
30 PRINT ""
40 REM Creating dictionaries
50 LET PERSON = {"name": "Alice", "age": 25, "city": "New York"}
60 PRINT "Person dictionary: " + str(PERSON)
70 PRINT "Name: " + PERSON["name"]
80 PRINT "Age: " + str(PERSON["age"])
90 PRINT ""
100 REM Adding and modifying entries (create new dict)
110 LET PERSON2 = PERSON.copy()
120 LET PERSON2 = {**PERSON2, "email": "alice@example.com", "age": 26}
130 PRINT "After updates: " + str(PERSON2)
140 PRINT ""
150 REM Dictionary methods and operations
160 LET SCORES = {"math": 95, "science": 87, "english": 92}
170 PRINT "Test scores: " + str(SCORES)
180 PRINT "Dictionary keys: " + str(list(SCORES.keys()))
190 PRINT "Dictionary values: " + str(list(SCORES.values()))
200 PRINT "Number of subjects: " + str(len(SCORES))
210 PRINT ""
220 REM Check if key exists
230 LET HAS_MATH = "math" in SCORES
240 IF HAS_MATH = 1 GOTO 260
250 GOTO 270
260 PRINT "Math score found: " + str(SCORES["math"])
270 PRINT ""
280 REM Iterating through dictionary (using keys)
290 LET KEYS = list(SCORES.keys())
300 PRINT "Iterating through scores:"
310 FOR I = 0 TO 2
320   LET SUBJECT = KEYS[I]
330   LET SCORE = SCORES[SUBJECT]
340   PRINT "  " + SUBJECT + ": " + str(SCORE)
350 NEXT I
360 PRINT ""
370 REM Nested dictionaries
380 LET STUDENT = {"name": "Bob", "grades": {"math": 88, "science": 91}}
390 PRINT "Student data: " + str(STUDENT)
400 PRINT "Math grade: " + str(STUDENT["grades"]["math"])
410 PRINT ""
420 REM Dictionary comprehension
430 LET DOUBLED_SCORES = {k: v * 2 for k, v in SCORES.items()}
440 PRINT "Doubled scores: " + str(DOUBLED_SCORES)
450 END