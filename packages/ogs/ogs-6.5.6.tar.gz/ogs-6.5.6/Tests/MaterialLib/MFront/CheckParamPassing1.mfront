// vim: ft=cpp sw=2 ts=2 sts=2 et

@DSL DefaultGenericBehaviour;
@Behaviour CheckParamPassing1;
@Author Christoph Lehmann;
@Date 29 / 07 / 2022;
@Description { Check parameter passing between OGS and MFront }

@Gradient StrainStensor eps_total;
eps_total.setGlossaryName("Strain");

@Gradient real p_LR;
p_LR.setEntryName("LiquidPressure");

@Flux StressStensor sigma;
sigma.setGlossaryName("Stress");

@Flux real S_L;
S_L.setEntryName("Saturation");

@MaterialProperty stress E;
E.setGlossaryName("YoungModulus");
@MaterialProperty real nu;
nu.setGlossaryName("PoissonRatio");
@MaterialProperty real alpha;
alpha.setGlossaryName("ThermalExpansion");

@ProvidesTangentOperator;
@Integrator {
  // TODO restrict to 3D!

  StressStensor const sigma_prev = sigma;
  real const S_L_prev = S_L;

  sigma(0) = 2301;
  sigma(1) = 2302;
  sigma(2) = 2303;
  sigma(3) = 2304;
  sigma(5) = 2305;
  sigma(4) = 2306;
  S_L = 2307;
  (void) computeTangentOperator_;

  // error checks
  // report parameter errors by adding 10 000
  // report gradient errors by adding 100 000
  // report gradient increment errors by adding 1 000 000
  // report prev tdyn forces  errors by adding 10 000 000
  // report external state variable  errors by adding 100 000 000
  const double param_error      = 10000;
  const double grad_error       = 100000;
  const double dgrad_error      = 1000000;
  const double prev_force_error = 10000000;
  const double ext_state_error  = 100000000;

  if (E != 101) { sigma(0) += param_error; }
  if (nu != 102) { sigma(1) += param_error; }
  if (alpha != 103) { sigma(2) += param_error; }

  if (eps_total(0) != 1201) { sigma(0) += grad_error; }
  if (eps_total(1) != 1202) { sigma(1) += grad_error; }
  if (eps_total(2) != 1203) { sigma(2) += grad_error; }
  if (eps_total(3) != 1204) { sigma(3) += grad_error; }
  if (eps_total(5) != 1205) { sigma(5) += grad_error; }
  if (eps_total(4) != 1206) { sigma(4) += grad_error; }
  if (p_LR != 1207) { S_L += grad_error; }

  if (deps_total(0) != 1000) { sigma(0) += dgrad_error; }
  if (deps_total(1) != 1000) { sigma(1) += dgrad_error; }
  if (deps_total(2) != 1000) { sigma(2) += dgrad_error; }
  if (deps_total(3) != 1000) { sigma(3) += dgrad_error; }
  if (deps_total(5) != 1000) { sigma(5) += dgrad_error; }
  if (deps_total(4) != 1000) { sigma(4) += dgrad_error; }
  if (dp_LR != 1000) { S_L += dgrad_error; }

  if (sigma_prev(0) != 1301) { sigma(0) += prev_force_error; }
  if (sigma_prev(1) != 1302) { sigma(1) += prev_force_error; }
  if (sigma_prev(2) != 1303) { sigma(2) += prev_force_error; }
  if (sigma_prev(3) != 1304) { sigma(3) += prev_force_error; }
  if (sigma_prev(5) != 1305) { sigma(5) += prev_force_error; }
  if (sigma_prev(4) != 1306) { sigma(4) += prev_force_error; }
  if (S_L_prev != 1307) { S_L += prev_force_error; }

  if (T != 1401) { sigma(0) += ext_state_error; }
  if (dT != 1000) { sigma(1) += ext_state_error; }
}
