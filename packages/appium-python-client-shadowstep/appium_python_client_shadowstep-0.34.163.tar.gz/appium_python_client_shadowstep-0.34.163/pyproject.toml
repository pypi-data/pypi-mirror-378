[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "appium-python-client-shadowstep"
version = "0.34.163"
description = "UI Testing Framework powered by Appium Python Client"
authors = [{ name = "Klim Molokov", email = "klim.molokov@yandex.ru" }]
license = "MIT"
readme = "README.md"
requires-python = ">=3.9"

dependencies = [
    "Appium-Python-Client>=5.2.2", # webdriver
    "selenium>=4.12", # webdriver
    "websocket-client>=1.8.0", # logcat
    "requests>=2.31.0", # http
    "opencv-python>=4.8.0.74", # image
    "numpy>=2.0.0", # image
    "Pillow>=11.3.0", # image
    "pytesseract>=0.3.10", # image (ocr)
    "allure-pytest>=2.13.2", # reports (decorators)
    "paramiko>=3.4.0", # terminal
    "scp>=0.14.5", # terminal
    "networkx>=3.2.1", # navigator
    "lxml>=5.3.2", # page object generator
    "jinja2>=3.1.6", # page object generator
    "unidecode>=1.4.0", # page object generator
    "eulxml>=1.1.3", # ast parsing xpath
    "setuptools==80.9.0", # nessecary dependency for eulxml
    "pyright>=1.1.405",
]

keywords = ["appium", "testing", "uiautomator2", "android", "automation", "framework"]

classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13"
]

[project.optional-dependencies]
dev = [
    "ruff>=0.5.0",
    "pyright>=1.1.377",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "setuptools",
    "icecream",
]
docs = [
    "sphinx>=7.2.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Repository = "https://github.com/molokov-klim/Appium-Python-Client-Shadowstep"

# ---------- UV ----------
[tool.uv]
environments = [
    "sys_platform == 'win32'",
    "sys_platform == 'windows'",
    "sys_platform == 'linux'"
]

dev-dependencies = [
    "pre-commit>=4.3.0",
    "pyright>=1.1.403",
    "ruff>=0.12.9",
]

# ---------- RUFF ----------
[tool.ruff]
# Общие настройки
target-version = "py39"
line-length = 100

[tool.ruff.lint]
select = ["ALL"]

exclude = [
    "**/__pycache__",
    ".venv",
    "build",
    "dist",
    "debug*.py",
    "tests"
]

# Опционально авто-правки:
[tool.ruff.format]
preview = true

# ---------- PYTEST ----------
[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-svl --log-cli-level INFO --tb=short --setup-show"
#-v (или --verbose) — включает подробный вывод, показывая названия тестов и их статус (PASSED, FAILED и т. д.).
#--tb=short — настраивает формат трассировки ошибок (traceback):
#short — выводит укороченный traceback, только ключевые строки с ошибкой (меньше "шума" по сравнению с полным выводом).
#Другие варианты: --tb=auto (по умолчанию), --tb=long, --tb=line, --tb=native, --tb=no (вообще не показывать).

# ---------- DEPLOY ----------
[tool.setuptools.packages.find]
include = ["shadowstep*"]

[tool.setuptools.package-data]
"shadowstep.page_object.templates" = ["*.j2"]
