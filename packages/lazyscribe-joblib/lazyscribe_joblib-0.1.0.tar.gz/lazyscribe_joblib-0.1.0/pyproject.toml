[build-system]
build-backend = "uv_build"

requires = [ "uv-build>=0.8.0,<0.9.0" ]

[project]
name = "lazyscribe-joblib"
version = "0.1.0"

description = "Joblib-based artifact handlers for Lazyscribe"
readme = { file = "README.md", content-type = "text/markdown" }
license = { text = "MIT license" }
authors = [
    { name = "Akshay Gupta", email = "akgcodes@gmail.com" },
]
requires-python = ">=3.10.0"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "attrs>=21.2.0,<=25.3.0",
    "joblib>=1.2.0,<=1.5.2",
    "lazyscribe>=1.0.0,<2",
    "python-slugify>=5.0.0,<=8.0.4",
]

optional-dependencies.build = [ "build", "commitizen", "twine", "wheel" ]
optional-dependencies.dev = [
    "lazyscribe-joblib[build]",
    "lazyscribe-joblib[qa]",
    "lazyscribe-joblib[tests]",
]
optional-dependencies.qa = [
    "edgetest",
    "mypy",
    "pre-commit",
    "pyproject-fmt",
    "ruff",
    "types-python-slugify",
    "uv",
]
optional-dependencies.tests = [ "pytest", "pytest-cov", "scikit-learn", "time-machine" ]
urls."Documentation" = "https://github.com/lazyscribe/lazyscribe-joblib"
urls."Repository" = "https://github.com/lazyscribe/lazyscribe-joblib"
entry-points."lazyscribe.artifact_type".joblib = "lazyscribe_joblib:JoblibArtifact"

[tool.ruff]
target-version = "py310"

lint.select = [
    "B",      # flake8-bugbear
    "C",      # flake8-comprehensions
    "D",      # pydocstyle
    "E",      # pycodestyle errors
    "F",      # pyflakes
    "I",      # isort
    "LOG",    # flake8-logging
    "RUF",    # Ruff errors
    "SIM",    # flake8-simplify
    "T20",    # flake8-print
    "TID252", # flake8-tidy-imports ban relative imports
    "UP",     # pyupgrade
    "W",      # pycodestyle warnings
]
lint.ignore = [
    "C901", # Function/method is too complex. (Add back in later.)
    "E501", # Line too long. Using formatter instead.
]
lint.per-file-ignores."**/{tests,docs}/*" = [ "ARG", "D", "E402", "F841" ]
lint.per-file-ignores."__init__.py" = [ "E402" ]
lint.per-file-ignores."tutorials/*" = [ "D", "T201" ]
lint.flake8-tidy-imports.ban-relative-imports = "all"
lint.pydocstyle.convention = "numpy"
lint.preview = true

[tool.pyproject-fmt]
column_width = 88
indent = 4
keep_full_version = true
max_supported_python = "3.13"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
allow_redefinition = true
check_untyped_defs = true

[tool.commitizen]
version_provider = "pep621"
tag_format = "v$version"
bump_message = "chore: version $current_version -> $new_version"
update_changelog_on_bump = true
version_files = [
    "lazyscribe_joblib/_meta.py:__version__",
]

[edgetest.envs.core]
extras = [ "tests" ]
upgrade = [ "attrs", "lazyscribe", "joblib", "python-slugify" ]
command = "pytest tests"

[tool.uv.build-backend]
module-name = "lazyscribe_joblib"
module-root = ""
