[project]
name = "cdnbestip"
version = "0.1.0"
description = "CDN speed testing and management tool"
readme = "README.md"
license = "Apache-2.0"
license-files = ["LICENSE"]
authors = [
    {name = "Jetsung Chan <i@jetsung.com>"},
]
maintainers = [
    {name = "Jetsung Chan <i@jetsung.com>"},
]
keywords = [
    "cloudflare",
    "dns",
    "speed-test",
    "cdn",
    "optimization",
    "networking"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Internet :: Name Service (DNS)",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
requires-python = ">=3.13"
dependencies = [
    "cloudflare>=4.3.1",
    "requests>=2.31.0",
]

[project.urls]
Homepage = "https://github.com/idev-sig/cdnbestip"
Documentation = "https://github.com/idev-sig/cdnbestip#readme"
Repository = "https://github.com/idev-sig/cdnbestip.git"
Issues = "https://github.com/idev-sig/cdnbestip/issues"
Changelog = "https://github.com/idev-sig/cdnbestip/releases"

[project.scripts]
cdnbestip = "cdnbestip:main"

[project.optional-dependencies]
dev = [
    "pytest>=8.4.2",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.6.0",
]
test = [
    "pytest>=8.4.2",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
    "responses>=0.24.0",
]

# [build-system]
# requires = ["hatchling"]
# build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.6.0",
]

[tool.uv]
package = true

# [[tool.uv.index]]
# url = "https://mirrors.aliyun.com/pypi/simple/"
# default = true

[tool.hatch.build.targets.wheel]
packages = ["src/cdnbestip"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml",
]

[tool.black]
line-length = 100
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py313"
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

