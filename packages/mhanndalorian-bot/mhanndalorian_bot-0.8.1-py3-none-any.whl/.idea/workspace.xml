<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AIAssistantCustomInstructionsStorage">
    <option name="instructions">
      <map>
        <entry key="AIAssistant.VCS.GenerateCommitMessage">
          <value>
            <AIAssistantStoredInstruction>
              <option name="actionId" value="AIAssistant.VCS.GenerateCommitMessage" />
              <option name="content" value="Avoid overly verbose descriptions or unnecessary details.&#10;Start with a short sentence in imperative form, no more than 50 characters long.&#10;Then leave an empty line and continue with a more detailed explanation.&#10;Write only one sentence for the first part, and two or three sentences at most for the detailed explanation.&#10;Use conventional commit" />
            </AIAssistantStoredInstruction>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2e6b64c4-5631-4ab4-a4a2-210579362545" name="Changes" comment="fix(ci): add GITHUB_TOKEN to release workflow&#10;&#10;Included `GITHUB_TOKEN` in the release workflow environment to enable authentication for tagging and pushing releases. This ensures seamless integration with GitHub's API during the release process.">
      <change afterPath="$PROJECT_DIR$/mhanndalorian_bot/globals.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mhanndalorian_bot/models.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mhanndalorian_bot/tw.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager" show_ignored="true" />
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PUSH_TAGS">
      <GitPushTagMode>
        <option name="argument" value="--tags" />
        <option name="title" value="All" />
      </GitPushTagMode>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="RESET_MODE" value="MIXED" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;MarTrepodi&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/MarTrepodi/mhanndalorian-bot-api.git&quot;,
    &quot;accountId&quot;: &quot;82c6f01f-03fc-4eaf-9c9e-ed1062a4250a&quot;
  }
}</component>
  <component name="MaliciousPackageCheckinHandlerState">
    <option name="packageCheck" value="true" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2rkoFndxwO0aLSBkIw8ahMHpCno" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Python tests.Python tests for test_api.test_mock_fetch_data_async.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_api.test_mock_fetch_data_sync.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_base.test_set_api_host_invalid_type.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_base.test_set_api_host_valid.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_registry.test_cleanse_allycode_integration.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_registry.test_fetch_player_invalid_allycode.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_registry.test_fetch_player_success.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_registry.test_fetch_player_valid_allycode.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_registry.test_mock_fetch_player_valid_allycode.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_registry.test_register_player_invalid_data.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_registry.test_register_player_valid_data.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_registry.test_verify_player_invalid_data.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_registry.test_verify_player_valid_data.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in test_base.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in test_registry.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in tests.executor&quot;: &quot;Run&quot;,
    &quot;Python.main.executor&quot;: &quot;Run&quot;,
    &quot;Python.test_base.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;SHELLCHECK.PATH&quot;: &quot;/Users/marktripod/Library/Application Support/JetBrains/PyCharm2024.1/plugins/Shell Script/shellcheck&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;junie.onboarding.icon.badge.shown&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/marktripod/code/MBot/examples/API&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;ml.llm.LLMThirdPartyAiProvidersConfigurable&quot;,
    &quot;to.speed.mode.migration.done&quot;: &quot;true&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/examples/API" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/tests" />
      <recent name="$PROJECT_DIR$/docs/style" />
      <recent name="$PROJECT_DIR$/examples/Registry" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/docs" />
      <recent name="$PROJECT_DIR$/m_bot" />
    </key>
  </component>
  <component name="RunManager" selected="Python tests.Python tests in tests">
    <configuration name="Python tests for test_base.test_set_api_host_invalid_type" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="MBot" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_base.test_set_api_host_invalid_type&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_base.test_set_api_host_valid" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="MBot" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_base.test_set_api_host_valid&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_registry.test_cleanse_allycode_integration" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="MBot" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_registry.test_cleanse_allycode_integration&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_registry.test_verify_player_invalid_data" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="MBot" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_registry.test_verify_player_invalid_data&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests in tests" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="MBot" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/tests&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Python tests in tests" />
        <item itemvalue="Python tests.Python tests for test_registry.test_verify_player_invalid_data" />
        <item itemvalue="Python tests.Python tests for test_registry.test_cleanse_allycode_integration" />
        <item itemvalue="Python tests.Python tests for test_base.test_set_api_host_valid" />
        <item itemvalue="Python tests.Python tests for test_base.test_set_api_host_invalid_type" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-b598e85cdad2-JavaScript-PY-252.25557.178" />
        <option value="bundled-python-sdk-ce6832f46686-7b97d883f26b-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-252.25557.178" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="2e6b64c4-5631-4ab4-a4a2-210579362545" name="Changes" comment="" />
      <created>1737112332673</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1737112332673</updated>
      <workItem from="1737112333812" duration="1675000" />
      <workItem from="1737148197235" duration="4523000" />
      <workItem from="1737238162360" duration="6044000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT_PROFILE" value="Project Default" />
    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT" value="true" />
    <MESSAGE value="Initial commit" />
    <MESSAGE value="Fixed allycode validation processing" />
    <MESSAGE value="feat: add x-discord-id header for Registry endpoints" />
    <MESSAGE value="ci: add manual workflow dispatch directive to release.yml" />
    <MESSAGE value="Update workflows, API, and version; drop unused test&#10;&#10;Streamline the release workflow by refining steps and dependencies. Introduced new methods `fetch_tb` and `fetch_raid` to the API for handling active guild events. Removed deprecated test and updated the version to 0.4.0 to reflect enhancements." />
    <MESSAGE value="feat: add new endpoints for TB and raid data fetching&#10;&#10;Added `fetch_tb` and `fetch_raid` methods to support Territory Battle and raid data retrieval. Updated attributes to include `tbleaderboardhistory`. Removed outdated tests and adjusted workflows for a cleaner release process." />
    <MESSAGE value="feat: configure semantic-release for automated versioning&#10;&#10;Added semantic-release configuration in pyproject.toml to enable automated versioning and release management. This includes specifying version source, branch, changelog, and distribution settings. Ensure to trigger releases manually as auto-upload to PyPI and GitHub releases are disabled." />
    <MESSAGE value="feat(api): add support for player and guild data fetching&#10;&#10;Introduced new methods to fetch player and guild data both synchronously and asynchronously. Updated payload handling logic to support these new endpoints. Incremented version to 0.5.0 to reflect added functionality." />
    <MESSAGE value="feat(api): enhance player and guild data handling&#10;&#10;Added type checks for `allycode` and `guild_id` in both sync and async methods to ensure inputs are strings. Improved data handling for player and guild responses, extracting relevant 'events' information when available. This update increases reliability and extends functionality for better API integration." />
    <MESSAGE value="refactor(api): add input validation and simplify logic&#10;&#10;Introduced helper methods for input validation and endpoint resolution to improve code readability and reduce duplication. Enhanced logging for API calls to provide better debugging context. Updated `.gitignore` and refined requirements to separate dev dependencies." />
    <MESSAGE value="feat: add human-readable unix time conversion utility&#10;&#10;Introduce a static method for converting unix timestamps to human-readable strings. This includes input validation, error handling, and support for both seconds and milliseconds. Updated the changelog to reflect the addition." />
    <MESSAGE value="feat(api): add optional 'enums' parameter to API methods&#10;&#10;Introduce an 'enums' flag to both synchronous and asynchronous API methods for returning enum values instead of names. Updated all relevant API methods to support this new parameter, providing greater flexibility in handling API response data." />
    <MESSAGE value="feat: add example scripts and README files for usage&#10;&#10;Added example scripts and README files under `examples/` to demonstrate the use of the MHanndalorian Bot library. Includes API endpoint usage, player registry operations, and detailed guides. Adjusted `.gitignore` to include `dist/` and exclude the previously ignored `examples/` directory." />
    <MESSAGE value="feat: add support for squad presets endpoint&#10;&#10;Added sync and async methods to fetch data from the SQUADPRESETS endpoint. Updated version to 0.6.0 and registered the new endpoint in the attributes module. Updated CHANGELOG for the new release." />
    <MESSAGE value="feat(api): add support for GAC endpoint&#10;&#10;Introduced `fetch_gac` and `fetch_gac_async` methods to fetch data from the GAC endpoint. Incremented version to 0.7.0 to reflect the new functionalities." />
    <MESSAGE value="feat(api): add support for discord_id in fetch_player&#10;&#10;Updated `fetch_player` and `fetch_player_async` to accept `discord_id` as an alternative to `allycode`. Added input validation logic to ensure only one of the identifiers is provided per request. Incremented version to 0.8.0 to reflect the new functionality." />
    <MESSAGE value="feat(utils): add utility to generate TW opponent URL&#10;&#10;Implemented `get_tw_opponent_url` to construct URLs for opponent guild profiles from given TW data. Added type validation and error handling to ensure robustness when extracting necessary guild ID information." />
    <MESSAGE value="fix(api): correct nested payload structure in fetch_guild methods&#10;&#10;Updated `fetch_guild` and `fetch_guild_async` methods to use the correct nested payload structure for guild ID. This resolves potential issues with incorrect API request formatting." />
    <MESSAGE value="feat(api): add TB history support&#10;&#10;Added `fetch_tb_history` and `fetch_tb_history_async` methods to retrieve data from the TBLEADERBOARDHISTORY endpoint. This extends the API's functionality to include historical Territory Battle leaderboard data." />
    <MESSAGE value="fix(api): correct enums payload nesting in API methods&#10;&#10;Updated the payload structure for the `enums` key to properly nest under `payload`. This ensures correct API request formatting and avoids potential processing errors." />
    <MESSAGE value="fix(ci): add missing 'build' dependency to release workflow&#10;&#10;Added the `build` package to the dependencies in the release workflow. This ensures the build step runs without errors and aligns the workflow with updated packaging requirements." />
    <MESSAGE value="fix(ci): set user config in release workflow for tagging&#10;&#10;Added global Git user configuration steps to the release workflow. This ensures the release tagging process works seamlessly by using the author's details from the latest commit." />
    <MESSAGE value="fix(ci): remove global flag from Git user config in workflow&#10;&#10;Updated the release workflow to set Git user configuration without the global flag. This ensures the configuration is scoped locally to prevent unintended overrides." />
    <MESSAGE value="fix(ci): add GITHUB_TOKEN to release workflow&#10;&#10;Included `GITHUB_TOKEN` in the release workflow environment to enable authentication for tagging and pushing releases. This ensures seamless integration with GitHub's API during the release process." />
    <option name="LAST_COMMIT_MESSAGE" value="fix(ci): add GITHUB_TOKEN to release workflow&#10;&#10;Included `GITHUB_TOKEN` in the release workflow environment to enable authentication for tagging and pushing releases. This ensures seamless integration with GitHub's API during the release process." />
    <option name="OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REARRANGE_BEFORE_PROJECT_COMMIT" value="true" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/MBot$main.coverage" NAME="main Coverage Results" MODIFIED="1738959057684" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/MBot$test_base.coverage" NAME="test_base Coverage Results" MODIFIED="1738931918189" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/MBot$.coverage" NAME=" Coverage Results" MODIFIED="1739381332228" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
  </component>
</project>