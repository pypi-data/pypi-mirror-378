# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from gRPC_impl.mytorchvision.models import models_pb2 as mytorchvision_dot_models_dot_models__pb2
from gRPC_impl import shared_msg_types_pb2 as shared__msg__types__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in mytorchvision/models/models_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ModelsServiceStub(object):
    """/////////////////////////////////////////////////////////////////////////////////
    Service definition
    /////////////////////////////////////////////////////////////////////////////////
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.resnet18 = channel.unary_unary(
                '/mytorchvision.ModelsService/resnet18',
                request_serializer=mytorchvision_dot_models_dot_models__pb2.WeightEnumString.SerializeToString,
                response_deserializer=shared__msg__types__pb2.UUID.FromString,
                _registered_method=True)
        self.resnet50 = channel.unary_unary(
                '/mytorchvision.ModelsService/resnet50',
                request_serializer=mytorchvision_dot_models_dot_models__pb2.WeightEnumString.SerializeToString,
                response_deserializer=shared__msg__types__pb2.UUID.FromString,
                _registered_method=True)
        self.resnet152 = channel.unary_unary(
                '/mytorchvision.ModelsService/resnet152',
                request_serializer=mytorchvision_dot_models_dot_models__pb2.WeightEnumString.SerializeToString,
                response_deserializer=shared__msg__types__pb2.UUID.FromString,
                _registered_method=True)


class ModelsServiceServicer(object):
    """/////////////////////////////////////////////////////////////////////////////////
    Service definition
    /////////////////////////////////////////////////////////////////////////////////
    """

    def resnet18(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def resnet50(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def resnet152(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ModelsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'resnet18': grpc.unary_unary_rpc_method_handler(
                    servicer.resnet18,
                    request_deserializer=mytorchvision_dot_models_dot_models__pb2.WeightEnumString.FromString,
                    response_serializer=shared__msg__types__pb2.UUID.SerializeToString,
            ),
            'resnet50': grpc.unary_unary_rpc_method_handler(
                    servicer.resnet50,
                    request_deserializer=mytorchvision_dot_models_dot_models__pb2.WeightEnumString.FromString,
                    response_serializer=shared__msg__types__pb2.UUID.SerializeToString,
            ),
            'resnet152': grpc.unary_unary_rpc_method_handler(
                    servicer.resnet152,
                    request_deserializer=mytorchvision_dot_models_dot_models__pb2.WeightEnumString.FromString,
                    response_serializer=shared__msg__types__pb2.UUID.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mytorchvision.ModelsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('mytorchvision.ModelsService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ModelsService(object):
    """/////////////////////////////////////////////////////////////////////////////////
    Service definition
    /////////////////////////////////////////////////////////////////////////////////
    """

    @staticmethod
    def resnet18(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mytorchvision.ModelsService/resnet18',
            mytorchvision_dot_models_dot_models__pb2.WeightEnumString.SerializeToString,
            shared__msg__types__pb2.UUID.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def resnet50(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mytorchvision.ModelsService/resnet50',
            mytorchvision_dot_models_dot_models__pb2.WeightEnumString.SerializeToString,
            shared__msg__types__pb2.UUID.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def resnet152(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mytorchvision.ModelsService/resnet152',
            mytorchvision_dot_models_dot_models__pb2.WeightEnumString.SerializeToString,
            shared__msg__types__pb2.UUID.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
