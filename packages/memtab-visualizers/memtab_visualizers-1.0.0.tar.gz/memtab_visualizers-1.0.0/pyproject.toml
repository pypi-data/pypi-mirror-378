[project]
name = "memtab-visualizers"
version = "1.0.0"
description = "Utility to be paired with memtab to visualize the output"
readme = "README.rst"
requires-python = ">=3.9"
dependencies = [
    "memtab>=0.11.0",
    "plotly>=6.0.1",
    "kaleido>=0.2.0,!=0.2.1.post1 ; sys_platform != 'win32'",
    "kaleido==0.1.0.post1 ; sys_platform == 'win32'",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Embedded Systems",
    "Topic :: Software Development :: Build Tools",
    "Environment :: Console"
]

[project.urls]
"Bug Tracker" = "https://github.com/etn-corp/memtab-visualizers/issues"

[dependency-groups]
dev = [
    { include-group = "docs" },
    { include-group = "static" },
    { include-group = "test" }
]

static = [
    "toml>=0.10.2",
    "types-pyyaml>=6.0.12.20241230",
    "types-toml>=0.10.8.20240310"
]

test = [
    "coverage>=7.6.1",
    "invoke>=2.2.0",
    "pygithub>=2.5.0",
    "pytest>=8.3.4",
    "pytest-bdd>=7.3.0",
    "pytest-cov>=5.0.0",
    "python-dotenv>=1.0.1",
    "pytest-random-order>=1.1.1",
]


docs = [
    "doc8>=1.1.2",
    "esbonio>=0.16.5",
    "invoke>=2.2.0",
    "rstcheck>=6.2.4",
    "sphinx==7.1.2", # we need to lock to a pre-7.2.5 version b/c sphinx-term has not yet been updated to match a breaking change introduced on 7.2.5. https://github.com/sphinx-doc/sphinx/issues/11608. The change was https://github.com/sphinx-doc/sphinx/pull/11582
    "sphinx-autodoc-typehints>=2.0.1",
    "sphinx-gherkin>=0.1",
    "sphinx-gherkindoc>=3.6.4",
    "sphinx-multiversion>=0.2.4",
    "sphinxcontrib-apidoc>=0.5.0",
    "sphinxcontrib-mermaid>=1.0.0",
    "sphinx-design>=0.6.1",  # this mandates python 3.9 or greater
    "sphinx-favicon>=0.1.0",
]

[tool.uv]
package = true

[project.entry-points.'memtab']
summary = "memtab_visualizers.summary_report:SummaryReport"
excel = "memtab_visualizers.excel_report:ExcelReport"
treemap = "memtab_visualizers.treemap_report:TreemapReport"
memmap = "memtab_visualizers.memmap_report:MemmapReport"
categorymemmap = "memtab_visualizers.category_memmap_report:CategoryMemmapReport"
memoryprofiler = "memtab_visualizers.memory_profiler_report:MemoryProfilerReport"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 180
[tool.ruff.lint]
select = ["E", "F", "I", "C"]
[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.coverage.run]
branch = true
source = ["src"]
dynamic_context = "test_function" # see https://coverage.readthedocs.io/en/7.4.4/contexts.html#dynamic-contexts
omit = [ "*/tests/*"]

[tool.coverage.report]
show_missing = true
fail_under = 70

[tool.coverage.html]
directory = "coverage_html_report"

[tool.pytest.ini_options]
pythonpath = ["src", "."]
testpaths = ["tests"]
log_cli = true
log_cli_level = "INFO"
filterwarnings = "ignore"
addopts = [
    "--random-order"
]
markers = [ "long"]

[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
ignore-magic = false
ignore-semiprivate = false
ignore-private = true
ignore-property-decorators = false
ignore-module = false
ignore-nested-functions = true
ignore-nested-classes = false
ignore-setters = true
ignore-overloaded-functions = false
fail-under = 80

exclude = ["docs", "tests"]

# example regex
ignore-regex = []
ext = []
# possible values: sphinx (default), google
style = "sphinx"
# possible values: 0 (minimal output), 1 (-v), 2 (-vv)
verbose = 2
quiet = false
whitelist-regex = []
color = true
omit-covered-files = false


# this depends on you having both tox installed (pip install tox)
# AND all of these python binaries available on your system.
# on linux, that can be done via adding the deadsnakes ppa
# and then apt installing them (sudo apt install python3.8, etc.)
# note you also need python3.x-distutils
[tool.tox]
# per tox documentation (https://tox.wiki/en/3.24.5/config.html) right now
# they only support ini style configuration, so to get config added to this
# pyproject.toml, we need to "inline" a legacy ini config as a multiline string.
legacy_tox_ini = """
[tox]
envlist = py38, py39, py310, py311, py312, py313

[testenv]
skip_install = true
allowlist_externals = uv
commands_pre =
    uv lock
    uv install
commands =
    uv run coverage run -m pytest --cucumberjson=cucumber.json
"""


[tool.mypy]
files = "."

# Use strict defaults
strict = true
warn_unreachable = true
warn_no_return = true
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
# Don't require test functions to include types
module = "tests.*"
disallow_untyped_defs = false


[tool.rstcheck]
ignore_directives = [
    "automodule"
]
[tool.doc8]
max-line-length = 300  # somewhat arbitrary, but seems to be a good compromise
allow-long-titles = true


[tool.poe.tasks]
test = [
    { cmd = "coverage run -m pytest tests" },
    { cmd = "coverage html" },
    { cmd = "coverage xml" }
]
lint = "pre-commit run --all-files"
docs = "sphinx-multiversion docs docs/_build/html"
simpledocs = "sphinx-build docs docs/_build/html"
demo = "memtab --elf tests/inputs/hello-world.elf --config tests/configs/hello-world.yml --report treemap --report summary --report memoryprofiler --report memmap --report categorymemmap --report excel"

[tool.poe.tasks.serve]
deps = ["simpledocs"]
script = "http.server"
cwd = "docs/_build/html"
