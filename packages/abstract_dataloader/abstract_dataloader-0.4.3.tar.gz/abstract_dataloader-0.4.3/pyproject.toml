[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "abstract_dataloader"
version = "0.4.3"
authors = [
  { name="Tianshu Huang", email="tianshu2@andrew.cmu.edu" },
]
description = "Abstract Dataloader: Dataloader Not Included."
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
    "Operating System :: OS Independent"
]
license = "MIT"
license-files = ["LICEN[CS]E*"]

dependencies = [
    "numpy >= 1.14",
    "optree >= 0.16",
    "jaxtyping >= 0.2.32",
    "typing-extensions >= 3.12",
    "wadler_lindig >= 0.1.3",   # included by jaxtyping, but explicitly
                                # specified here since we also use it
]

[project.urls]
Homepage = "https://github.com/RadarML/abstract-dataloader"
Documentation = "https://radarml.github.io/abstract-dataloader/"
Issues = "https://github.com/RadarML/abstract-dataloader/issues"

[project.optional-dependencies]
docs = [
    # Most recent as of 16.04.2025; exact versions shouldn't matter unless the
    # API is changed, so we pin here just in case.
    "mkdocs == 1.6.*",
    "mkdocs-material == 9.6.*",
    "mkdocstrings-python-xref == 1.16.3",
    "mkdocstrings-python == 1.16.6",
    "mkdocstrings == 0.29.*",
    # wait until griffe/mkdocstrings-python correctly handle type parameters
    "griffe == 1.8.0",
    "ruff >= 0.10.0"
]
dev = [
    "pre-commit >= 4.0.0",
    "coverage",
    "pytest",
    "pytest-cov",
    "beartype >= 0.20.0",
    "torch >= 2.2",
    "pyright >= 1.0.0",
    "ruff >= 0.10.0",
    # lightning extra: dev only - users should bring their own
    "lightning >= 2.0.0",
]
torch = [
    "optree >= 0.13",
    "torch >= 2.2"
]

[tool.ruff]
line-length = 80
indent-width = 4

[tool.ruff.lint]
select = [
    "E", "F", "W", "N", "I", "D", "NPY"
]
ignore = [
    "D102",  # Inheriting docstrings is allowed
    "D107",  # Initializer goes in the class docstring
    "D401",  # "Imperative mood" NLP doesn't always make sense
    "D413",  # No blank lines after section is preferred by mkdocstrings
    "F722",  # Jaxtyping annotations confuse ruff
    "F821",

    # Must pick one...
    "D213",  # Pick 'multi-line-summary-first-line'.
    "D203",  # Pick `no-blank-line-before-class`.
]


# Use pytorch-cpu when we install the `testing` extra, but pytorch-gpu when
# we install the `torch` extra.
[tool.uv]
conflicts = [
    [
        { extra = "dev" },
        { extra = "torch" },
    ],
]

[tool.uv.sources]
torch = [
    { index = "pytorch-cpu", extra = "dev" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[tool.coverage.report]
exclude_also = [
    '\.\.\.',
    'def __repr__',
    'if __name__ == .__main__.:',
    'class .*\bProtocol\):',
    'raise NotImplementedError',
]
