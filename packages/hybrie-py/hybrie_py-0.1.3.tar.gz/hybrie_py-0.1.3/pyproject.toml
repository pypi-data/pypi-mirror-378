[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "hybrie-py"
version = "0.1.3"
description = "Python SDK for HybrIE - Hybrid Inference Engine for Heterogeneous Hardware to Power Generative AI Models"
authors = [
    {name = "Tosin Dairo", email = ""}
]
readme = "README.md"
license = {text = "MIT OR Apache-2.0"}
requires-python = ">=3.9"
keywords = ["AI", "image-generation", "LLM", "chat", "FLUX", "diffusion", "ML", "grpc", "hybrid-inference", "generative-ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "grpcio>=1.54.0",
    "grpcio-tools>=1.54.0",
    "protobuf>=4.21.0",
    "typing-extensions>=4.0.0",
    "aiofiles>=23.0.0",
    "pillow>=9.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
]
examples = [
    "jupyter>=1.0.0",
    "matplotlib>=3.5.0",
    "tqdm>=4.64.0",
]

[project.urls]
Homepage = "https://github.com/tosi-n/hybrie-py"
Repository = "https://github.com/tosi-n/hybrie-py"
Documentation = "https://github.com/tosi-n/hybrie-py#readme"
Issues = "https://github.com/tosi-n/hybrie-py/issues"

[project.scripts]
hybrie-py-generate = "hybrie_py.cli:main"

# UV Configuration
[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "hatchling>=1.18.0",
]

[tool.uv.sources]

# Hatch Configuration (used by uv)
[tool.hatch.version]
path = "src/hybrie_py/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/hybrie_py"]

[tool.hatch.build.targets.sdist]
include = [
    "src/",
    "tests/",
    "README.md",
    "LICENSE*",
    "CHANGELOG.md",
]

# Ruff Configuration (replaces black, isort, flake8)
[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = [
    "--cov=hybrie_py",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]