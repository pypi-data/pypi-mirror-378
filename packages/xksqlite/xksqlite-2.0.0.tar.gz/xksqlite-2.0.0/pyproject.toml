# ===============================
# 📦 构建系统配置 (PEP 517/518)
# ===============================
[build-system]
# 构建项目所需的依赖工具列表
requires = ["setuptools>=61.0", "wheel"]
# 指定构建后端，推荐使用 setuptools 官方提供的构建后端
build-backend = "setuptools.build_meta"


# ===============================
# 📋 项目信息配置 (PEP 621)
# ===============================
[project]
# 项目名称，发布到 PyPI 时必须唯一
name = "xksqlite"
# 项目版本号，建议遵循语义化版本（semver）
# 格式：MAJOR.MINOR.PATCH，例如 1.0.0
version = "2.0.0" # 项目版本号
# 例：1.0.0 → 2.0.0 表示重大更新，旧代码可能无法兼容新版本。
# 例：1.2.0 → 1.3.0 表示功能增强，但老用户不受影响。
# 例：1.2.1 → 1.2.2 表示小修小补，功能无变化。
description = "数据库的连接工具，包括记录报错和日志" # 项目简介
readme = "README.md" # 项目说明文件路径
license = { file = "LICENSE" } # 许可证，可以选择 MIT、Apache 等
authors = [{ name = "ZhaoYuanKang", email = "1756972525@qq.com" }]
requires-python = ">=3.7" # 支持的 Python 版本
dependencies = [
    "xiaokang==1.0.0", # 根据实际版本号填写

]

[project.urls] # 项目相关链接
"Personal website" = "http://121.37.247.246:200/"

[tool.setuptools.packages.find] # 自动查找项目中的包
where = ["."]
include = ["xksqlite"] # 指定包含的包名

[tool.setuptools]
zip-safe = false # 是否允许打包为 zip 格式，一般选择 false

[tool.setuptools.package-data] # 包含额外的数据文件
"my_library" = []

[tool.pytest.ini_options] # 测试配置
minversion = "7.0"
addopts = "-ra -q"
testpaths = ["tests"]
