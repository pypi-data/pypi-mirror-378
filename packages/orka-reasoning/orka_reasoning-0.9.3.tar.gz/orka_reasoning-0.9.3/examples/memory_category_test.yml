orchestrator:
  id: memory-category-demo
  strategy: sequential
  agents:
    - memory-write_event
    - memory-read_stored
    - summary_agent

agents:
  - id: memory-write_event
    type: memory
    memory_preset: "working"  # Demo/testing (4 hours)
    config:
      operation: write
      # Vector configuration for memory writing
      vector: true
      vector_field_name: "content_vector"
      force_recreate_index: false
    namespace: category_demo
    prompt: |
      Save this as a stored memory for '{{ get_input() }}'.
    metadata:
      category: stored
      log_type: memory

  - id: memory-read_stored
    type: memory
    memory_preset: "working"  # Demo/testing (4 hours)
    config:
      operation: read
      memory_category_filter: stored
      # Vector search configuration
      enable_vector_search: true
      vector_weight: 0.7
      text_weight: 0.3
      enable_hybrid_search: true
      similarity_threshold: 0.75
      ef_runtime: 10
    namespace: category_demo
    prompt: Retrieve stored memories related to '{{ get_input() }}'.

  - id: summary_agent
    type: local_llm
    model: llama3.2:latest
    model_url: http://localhost:11434/api/generate
    provider: ollama
    temperature: 0.3
    prompt: |
      Memory category test completed successfully!
      
      Demonstrated memory categorization system:
      1. ✅ WRITE OPERATION: Stored input "{{ input }}" with category 'stored'
      2. ✅ READ OPERATION: Retrieved memories using category filter 'stored'
      
      This test validates that memory categories work correctly for organizing and filtering stored information. The working memory preset was used with a 4-hour retention period, perfect for testing and demonstration purposes.

