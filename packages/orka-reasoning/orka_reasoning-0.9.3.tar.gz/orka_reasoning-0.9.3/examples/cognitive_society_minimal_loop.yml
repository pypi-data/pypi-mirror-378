# Simplified Cognitive Society - Token Efficient Version
# Uses fewer agents, simpler prompts, and reduced complexity

orchestrator:
  id: cognitive-society-simple
  strategy: sequential
  memory_config:
    decay:
      enabled: true
      default_short_term_hours: 1.0
      default_long_term_hours: 1.0
      check_interval_minutes: 10
    # Vector search configuration
    vector_search:
      enabled: true
      index_name: "orka_enhanced_memory"
      vector_dim: 384
      enable_hnsw: true
      force_recreate_index: false
      vector_params:
        type: "FLOAT32"
        distance_metric: "COSINE"
        ef_construction: 200
        m: 16
  agents:
    - simple_debate_loop
    - final_answer

agents:
  - id: simple_debate_loop
    type: loop
    max_loops: 3
    score_threshold: 0.8
    
    score_extraction_config:
      strategies:
        - type: pattern
          patterns:
            - "AGREEMENT_SCORE[\":]?\\s*([0-9.]+)"
            - "\"AGREEMENT_SCORE\":\\s*([0-9.]+)"
    
    past_loops_metadata:
      round: "{{ get_loop_number() }}"
      agreement_score: "{{ score }}"
      timestamp: "{{ timestamp }}"
      debate_summary: "{{ get_agent_response('debate_summary') if get_agent_response('debate_summary') else 'No summary' }}"
    
    internal_workflow:
      orchestrator:
        id: simple-debate-internal
        strategy: sequential
        agents:
          - memory_reader
          - opening_debate
          - agreement_check
          - memory_writer
      
      agents:
        # Simple memory reader
        - id: memory_reader
          type: memory
          queue: orka:simple-memory-reader
          config:
            operation: read
            limit: 3
            enable_context_search: true
            # Vector search configuration
            enable_vector_search: true
            vector_weight: 0.7
            text_weight: 0.3
            enable_hybrid_search: true
            similarity_threshold: 0.75
            ef_runtime: 10
          namespace: simple_debate_memory
          decay:
            enabled: true
            short_term_hours: 1.0
            long_term_hours: 1.0
          prompt: |
            {{ get_input() }}

        # Simplified debate with just 2 agents
        - id: opening_debate
          type: fork
          targets:
            - - progressive_agent
            - - conservative_agent
        
        - id: progressive_agent
          type: local_llm
          model: gpt-oss:20b
          model_url: http://localhost:11434/api/generate
          provider: ollama
          temperature: 0.7
          prompt: |
            You are a PROGRESSIVE agent analyzing: {{ get_input() }}
            
            Round {{ get_loop_number() }}
            
            Past Memory: {{ get_agent_response('memory_reader') }}
            
            Your role: Advocate for change and innovation while being open to compromise.
            
            **CONVERGENCE GOAL**: Work toward agreement with conservative perspective. Score target: 0.8+
            
            {% if get_loop_number() == 1 %}
            Present your progressive position while noting common ground opportunities.
            {% elif get_loop_number() == 2 %}
            Build on previous round. Actively seek synthesis with conservative views.
            {% else %}
            PRIORITIZE AGREEMENT: Find collaborative solutions that incorporate both perspectives.
            {% endif %}
            
            Format:
            POSITION: [Your stance - 2 sentences max]
            COMMON_GROUND: [Areas of potential agreement - 1 sentence]
            COMPROMISE: [What you can accept from conservative view - 1 sentence]
        
        - id: conservative_agent
          type: local_llm
          model: gpt-oss:20b
          model_url: http://localhost:11434/api/generate
          provider: ollama
          temperature: 0.7
          prompt: |
            You are a CONSERVATIVE agent analyzing: {{ get_input() }}
            
            Round {{ get_loop_number() }}
            
            Past Memory: {{ get_agent_response('memory_reader') }}
            
            Your role: Defend stability and tradition while being open to gradual change.
            
            **CONVERGENCE GOAL**: Work toward agreement with progressive perspective. Score target: 0.8+
            
            {% if get_loop_number() == 1 %}
            Present your conservative position while noting areas for potential compromise.
            {% elif get_loop_number() == 2 %}
            Build on previous round. Show how tradition can accommodate progressive concerns.
            {% else %}
            PRIORITIZE AGREEMENT: Find stable solutions that address progressive goals.
            {% endif %}
            
            Format:
            POSITION: [Your stance - 2 sentences max]
            COMMON_GROUND: [Areas of potential agreement - 1 sentence]
            COMPROMISE: [What you can accept from progressive view - 1 sentence]

        # Simple agreement checker
        - id: agreement_check
          type: local_llm
          model: gpt-oss:20b
          model_url: http://localhost:11434/api/generate
          provider: ollama
          temperature: 0.2
          prompt: |
            Evaluate agreement between these positions:
            
            Progressive: {{ get_agent_response('progressive_agent') }}
            Conservative: {{ get_agent_response('conservative_agent') }}
            
            Round {{ get_loop_number() }} - Target: 0.8+ agreement
            
            Look for:
            - Shared values and concerns
            - Compromise proposals
            - Collaborative language
            - Practical solutions both can accept
            
            Score 0.0-1.0 based on:
            - 0.8-1.0: Strong agreement, practical consensus
            - 0.6-0.8: Good convergence, some gaps
            - 0.4-0.6: Limited agreement, major differences
            - 0.0-0.4: Little to no agreement
            
            Return only JSON:
            {
              "AGREEMENT_SCORE": [score],
              "CONSENSUS": "[One sentence summary of agreement]",
              "CONTINUE": "[YES/NO - continue if score < 0.8]"
            }

        # Simple memory writer
        - id: memory_writer
          type: memory
          memory_preset: "working"  # Active debate context (4 hours)
          queue: orka:simple-memory-writer
          config:
            operation: write
            vector: true
            # Vector configuration for memory writing
            vector_field_name: "content_vector"
            force_recreate_index: false
          namespace: simple_debate_memory
          prompt: |
            Debate round {{ get_loop_number() }} summary:
            Progressive: {{ get_agent_response('progressive_agent') }}
            Conservative: {{ get_agent_response('conservative_agent') }}
            Agreement: {{ get_agent_response('agreement_check') }}
          metadata:
            round: "{{ get_loop_number() }}"
            agreement_score: "{{ score }}"
            timestamp: "{{ timestamp }}"

        # Join fork
        - id: debate_summary
          type: join
          group: opening_debate

  # Final answer processor
  - id: final_answer
    type: local_llm
    model: gpt-oss:20b
    model_url: http://localhost:11434/api/generate
    provider: ollama
    temperature: 0.3
    prompt: |
      USER ASKED: {{ get_input() }}
      
      Debate completed:
      - Loops: {{ get_agent_response('simple_debate_loop')['loops_completed'] if get_agent_response('simple_debate_loop') else 'Unknown' }}
      - Final Score: {{ get_agent_response('simple_debate_loop')['final_score'] if get_agent_response('simple_debate_loop') else 'Unknown' }}
      - Agreement: {{ (get_agent_response('simple_debate_loop')['final_score'] >= 0.8) if get_agent_response('simple_debate_loop') and get_agent_response('simple_debate_loop')['final_score'] else False }}
      
      Final Summary:
      {% if get_agent_response('simple_debate_loop') and get_agent_response('simple_debate_loop')['past_loops'] %}
      {% set last_loop = get_agent_response('simple_debate_loop')['past_loops'][-1] %}
      {{ last_loop.debate_summary }}
      {% endif %}
      
      Provide a direct answer to the user's question based on the debate results.
      
      Format:
      **Answer**: [Direct response to user's question]
      **Consensus Reached**: [Yes/No - {{ 'Yes' if get_agent_response('simple_debate_loop') and get_agent_response('simple_debate_loop')['final_score'] >= 0.8 else 'No' }}]
      **Key Insights**: [2-3 main takeaways from the debate] 