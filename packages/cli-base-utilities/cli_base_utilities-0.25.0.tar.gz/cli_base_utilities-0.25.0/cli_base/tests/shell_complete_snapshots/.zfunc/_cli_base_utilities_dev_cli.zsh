#compdef ./dev-cli.py

# AUTOMATICALLY GENERATED by `shtab`


_shtab_tyro___dev_cli_py_commands() {
  local _commands=(
    "coverage:Run tests and show coverage report."
    "install:Run pip-sync and install \'cli_base\' via pip as editable."
    "lint:Check\/fix code style by run\: \"ruff check --fix\""
    "mypy:Run Mypy (configured in pyproject.toml)"
    "nox:Run nox"
    "pip-audit:Run pip-audit check against current requirements files"
    "publish:Build and upload this project to PyPi"
    "shell-completion:Setup shell completion for this dev CLI"
    "test:Run unittests"
    "update:Update dependencies (uv.lock) and git pre-commit hooks"
    "update-test-snapshot-files:Update all test snapshot files (by remove and recreate all snapshot files)"
    "version:Print version and exit"
  )
  _describe './dev-cli.py commands' _commands
}

_shtab_tyro___dev_cli_py_options=(
  {-h,--help}"[show this help message and exit]:help:"
)

_shtab_tyro___dev_cli_py_coverage_options=(
  {-h,--help}"[show this help message and exit]:help:"
)

_shtab_tyro___dev_cli_py_install_options=(
  {-h,--help}"[show this help message and exit]:help:"
)

_shtab_tyro___dev_cli_py_lint_options=(
  {-h,--help}"[show this help message and exit]:help:"
  {-v,--verbosity}"[Verbosity level\; e.g.\: -v, -vv, -vvv, etc. (repeatable)]:verbosity:"
)

_shtab_tyro___dev_cli_py_mypy_options=(
  {-h,--help}"[show this help message and exit]:help:"
  {-v,--verbosity}"[Verbosity level\; e.g.\: -v, -vv, -vvv, etc. (repeatable)]:verbosity:"
)

_shtab_tyro___dev_cli_py_nox_options=(
  {-h,--help}"[show this help message and exit]:help:"
)

_shtab_tyro___dev_cli_py_pip_audit_options=(
  {-h,--help}"[show this help message and exit]:help:"
  {-v,--verbosity}"[Verbosity level\; e.g.\: -v, -vv, -vvv, etc. (repeatable)]:verbosity:"
)

_shtab_tyro___dev_cli_py_publish_options=(
  {-h,--help}"[show this help message and exit]:help:"
)

_shtab_tyro___dev_cli_py_shell_completion_options=(
  {-h,--help}"[show this help message and exit]:help:"
  {-v,--verbosity}"[Verbosity level\; e.g.\: -v, -vv, -vvv, etc. (repeatable)]:verbosity:"
  {--remove,--no-remove}"[(default\: False)]:remove:"
)

_shtab_tyro___dev_cli_py_test_options=(
  {-h,--help}"[show this help message and exit]:help:"
)

_shtab_tyro___dev_cli_py_update_options=(
  {-h,--help}"[show this help message and exit]:help:"
  {-v,--verbosity}"[Verbosity level\; e.g.\: -v, -vv, -vvv, etc. (repeatable)]:verbosity:"
)

_shtab_tyro___dev_cli_py_update_test_snapshot_files_options=(
  {-h,--help}"[show this help message and exit]:help:"
  {-v,--verbosity}"[Verbosity level\; e.g.\: -v, -vv, -vvv, etc. (repeatable)]:verbosity:"
)

_shtab_tyro___dev_cli_py_version_options=(
  {-h,--help}"[show this help message and exit]:help:"
)


_shtab_tyro___dev_cli_py() {
  local context state line curcontext="$curcontext" one_or_more='(-)*' remainder='(*)'

  if ((${_shtab_tyro___dev_cli_py_options[(I)${(q)one_or_more}*]} + ${_shtab_tyro___dev_cli_py_options[(I)${(q)remainder}*]} == 0)); then  # noqa: E501
    _shtab_tyro___dev_cli_py_options+=(': :_shtab_tyro___dev_cli_py_commands' '*::: :->./dev-cli.py')
  fi
  _arguments -C -s $_shtab_tyro___dev_cli_py_options

  case $state in
    ./dev-cli.py)
      words=($line[1] "${words[@]}")
      (( CURRENT += 1 ))
      curcontext="${curcontext%:*:*}:_shtab_tyro___dev_cli_py-$line[1]:"
      case $line[1] in
        coverage) _arguments -C -s $_shtab_tyro___dev_cli_py_coverage_options ;;
        install) _arguments -C -s $_shtab_tyro___dev_cli_py_install_options ;;
        lint) _arguments -C -s $_shtab_tyro___dev_cli_py_lint_options ;;
        mypy) _arguments -C -s $_shtab_tyro___dev_cli_py_mypy_options ;;
        nox) _arguments -C -s $_shtab_tyro___dev_cli_py_nox_options ;;
        pip-audit) _arguments -C -s $_shtab_tyro___dev_cli_py_pip_audit_options ;;
        publish) _arguments -C -s $_shtab_tyro___dev_cli_py_publish_options ;;
        shell-completion) _arguments -C -s $_shtab_tyro___dev_cli_py_shell_completion_options ;;
        test) _arguments -C -s $_shtab_tyro___dev_cli_py_test_options ;;
        update) _arguments -C -s $_shtab_tyro___dev_cli_py_update_options ;;
        update-test-snapshot-files) _arguments -C -s $_shtab_tyro___dev_cli_py_update_test_snapshot_files_options ;;
        version) _arguments -C -s $_shtab_tyro___dev_cli_py_version_options ;;
      esac
  esac
}



typeset -A opt_args

if [[ $zsh_eval_context[-1] == eval ]]; then
  # eval/source/. command, register function for later
  compdef _shtab_tyro___dev_cli_py -N ./dev-cli.py
else
  # autoload from fpath, call function directly
  _shtab_tyro___dev_cli_py "$@"
fi
