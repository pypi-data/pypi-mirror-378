# coding: utf-8

"""
    CUA API

    Documentation of API endpoints of CUA

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from robotnikai.models.patched_integration import PatchedIntegration

class TestPatchedIntegration(unittest.TestCase):
    """PatchedIntegration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PatchedIntegration:
        """Test PatchedIntegration
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PatchedIntegration`
        """
        model = PatchedIntegration()
        if include_optional:
            return PatchedIntegration(
                integration_id = '',
                type = robotnikai.models.integration_type.IntegrationType(
                    code = '', 
                    name = '', 
                    icon = '', ),
                name = '',
                tags = [
                    ''
                    ],
                version = '',
                icon = '',
                description = '',
                account_fields = None,
                dependencies = None,
                configuration_form = None,
                activated = '',
                owner = '',
                connected_accounts = '',
                client_id = '',
                secret = '',
                access_token_url = '',
                authorize_url = '',
                identity_url = '',
                scope = '',
                basic_auth = True,
                accept_header = '',
                fetch_userinfo = '',
                api_key = '',
                api_header_name = 'Bearer'
            )
        else:
            return PatchedIntegration(
        )
        """

    def testPatchedIntegration(self):
        """Test PatchedIntegration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
