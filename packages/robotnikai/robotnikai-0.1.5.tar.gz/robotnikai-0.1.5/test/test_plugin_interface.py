# coding: utf-8

"""
    RobotnikAI API

    Documentation of API endpoints of RobotnikAI for SDK

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from robotnikai.models.plugin_interface import PluginInterface

class TestPluginInterface(unittest.TestCase):
    """PluginInterface unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PluginInterface:
        """Test PluginInterface
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PluginInterface`
        """
        model = PluginInterface()
        if include_optional:
            return PluginInterface(
                id = 56,
                organization = 56,
                app = 56,
                integrations = '',
                plugins = '',
                title = '',
                namespace = 'z',
                description = '',
                capabilities = [
                    ''
                    ],
                is_visible = True,
                json_schema = None,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                tables = [
                    56
                    ]
            )
        else:
            return PluginInterface(
                app = 56,
                title = '',
                namespace = 'z',
        )
        """

    def testPluginInterface(self):
        """Test PluginInterface"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
