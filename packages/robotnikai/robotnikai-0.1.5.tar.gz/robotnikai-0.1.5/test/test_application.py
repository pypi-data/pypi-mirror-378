# coding: utf-8

"""
CUA API

Documentation of API endpoints of CUA

The version of the OpenAPI document: 1.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import datetime
import unittest


from robotnikai.models.application import Application


class TestApplication(unittest.TestCase):
    """Application unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(
        self,
    ) -> Application:
        """Test Application
        This method creates an instance of the Application model with minimal required attributes to test its functionality and validation.
        """

        return Application(
            id=56,
            creator="",
            url="",
            activated=True,
            name="Test application",
            slug="z",
            created_at=datetime.datetime.strptime(
                "2013-10-20 19:20:30.00", "%Y-%m-%d %H:%M:%S.%f"
            ),
            updated_at=datetime.datetime.strptime(
                "2013-10-20 19:20:30.00", "%Y-%m-%d %H:%M:%S.%f"
            ),
        )

    def testApplication(self):
        """Test Application"""
        inst_req_only = self.make_instance()
        self.assertTrue(isinstance(inst_req_only, Application), "Should be an instance of Application")
        self.assertTrue(inst_req_only.id == 56, "id should be 56")
        self.assertTrue(inst_req_only.creator == "", "creator should be an empty string")
        self.assertTrue(inst_req_only.url == "", "url should be an empty string")
        self.assertTrue(inst_req_only.activated is True, "activated should be True")
        self.assertEqual(
            inst_req_only.name, "Test application", "name should be 'Test application'"
        )
        


if __name__ == "__main__":
    unittest.main()
