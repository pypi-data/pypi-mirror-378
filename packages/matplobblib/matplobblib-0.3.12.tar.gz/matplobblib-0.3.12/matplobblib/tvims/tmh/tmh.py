from ...forall import *
#######################################################################################################################
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–∏–ø–æ—Ç–µ–∑ –æ –∑–Ω–∞—á–µ–Ω–∏–∏ —Å—Ä–µ–¥–Ω–µ–≥–æ
#######################################################################################################################
def TMH_1(text,mu_0,mu_1,alpha,splitter = ';',locale = 'rus') -> tuple:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–∏–ø–æ—Ç–µ–∑—ã –æ–± –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –∑–Ω–∞—á–µ–Ω–∏–∏ –ì–ï–ù–ï–†–ê–õ–¨–ù–û–ì–û –°–†–ï–î–ù–ï–ì–û –ü–†–ò –ù–ï–ò–ó–í–ï–°–¢–ù–û–ô –î–ò–°–ü–ï–†–°–ò–ò –Ω–∞ —É—Ä–æ–≤–Ω–µ –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏ ùú∂.
    –ü—É—Å—Ç—å X- =(x1,‚Ä¶,x_n) - —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –≤—ã–±–æ—Ä–∫–∏ X =(X1,‚Ä¶,X_n)
    –∏–∑ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è N(Œº; œÉ^2).
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –Ω–∞ —É—Ä–æ–≤–Ω–µ –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏ Œ± =`alpha` –æ—Å–Ω–æ–≤–Ω–∞—è –≥–∏–ø–æ—Ç–µ–∑–∞ H0: Œº=`mu_0`
    –ø—Ä–æ—Ç–∏–≤ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –≥–∏–ø–æ—Ç–µ–∑—ã H1:Œº‚â†`mu_0` —Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –≤–∏–¥–∞
    KŒ± = (‚àí‚àû,-A)‚à™(A,+‚àû).
    - –ù–∞–π–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è  t = T_–Ω–∞–±–ª. = T(X- ). 
    - –ù–∞–π–¥–∏—Ç–µ –≥—Ä–∞–Ω–∏—Ü—É A –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞. 
    - –ù–∞–π–¥–∏—Ç–µ P-–∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è –∏ —Å–¥–µ–ª–∞–π—Ç–µ –≤—ã–≤–æ–¥—ã.
    - –ù–∞–π–¥–∏—Ç–µ –º–æ—â–Ω–æ—Å—Ç—å W –∫—Ä–∏—Ç–µ—Ä–∏—è –¥–ª—è H1:Œº= `mu_1`
    
    
    –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: X- = `text`



    ## Args:
        text (str): –°—Ç—Ä–æ–∫–∞ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è –≤—Å–µ—Ö —á–∏—Å–µ–ª, –¥–∞–Ω–Ω—ã—Ö –∫–∞–∫ X-
        mu_0 (numerical): –ó–Ω–∞—á–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –ø—Ä–∏ –≥–∏–ø–æ—Ç–∏–∑–µ H0
        mu_1 (numerical): –ó–Ω–∞—á–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –¥–ª—è W –∫—Ä–∏—Ç–µ—Ä–∏—è
        alpha (numerical): –£—Ä–æ–≤–µ–Ω—å –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏
        splitter (str, optional): –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É –∫–∞–∂–¥—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –≤ `text`. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ —Ä–∞–≤–Ω–æ =  ';'.
        locale (str, optional): –õ–æ–∫–∞–ª–∏–∑—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö - –µ—Å–ª–∏ —Ü–µ–ª–∞—è –∏ –¥—Ä–æ–±–Ω–∞—è —á–∞—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ —á–∏—Å–ª–∞ –∏–∑ `text —Ä–∞–∑–¥–µ–ª–µ–Ω–∞ –Ω–µ –∑–∞–ø—è—Ç–æ–π, —Ç–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –Ω–∞ –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ —Ä–∞–≤–Ω–æ =  'rus'.

    ## Prints
        `answer` –∫–∞–∂–¥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ.<br>C –∑–∞–ø—è—Ç–æ–π –≤–º–µ—Å—Ç–æ —Ç–æ—á–∫–∏ –∏ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –¥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–µ—Å—è—Ç–∏—á–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤.

    ## Returns:
        `answer` (tuple): –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
    """
    from scipy.stats import t, nct
    
    if locale== 'rus':
        x = np.array(text.replace(',','.').split(splitter)).astype(float)
    else:
        x = np.array(text.split(splitter)).astype(float)
        
    n = x.size

    # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ
    x_bar = np.mean(x)
    s = np.std(x, ddof=1)
    t_stat = (x_bar - mu_0) / (s / np.sqrt(n))

    # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
    t_critical = t.ppf(1 - alpha/2, df=n-1)  # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —É—Ä–æ–≤–Ω—è alpha
    K_alpha = (-t_critical, t_critical)

    print("–ó–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è = " + one_rrstr(t_stat,3))
    print("–ì—Ä–∞–Ω–∏—Ü–∞ –ê –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ = " + one_rrstr(t_critical,3))
    print("–ì–∏–ø–æ—Ç–µ–∑–∞ H0 –æ—Ç–≤–µ—Ä–≥–∞–µ—Ç—Å—è." if not (K_alpha[0] <= t_stat <= K_alpha[1]) else "–ì–∏–ø–æ—Ç–µ–∑–∞ H0 –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è.")


    p_value = 2 * (1 - t.cdf(abs(t_stat), df=n-1))
    print("P-–∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è = " + one_rrstr(p_value,3) )




    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è Beta
    delta = (mu_1 - mu_0) / (s / np.sqrt(n))
    
    ##########################
    df=n-1
    G=nct(df,delta)
    T=t(df)
    talpha2=T.isf(alpha/2)
    beta=G.cdf(talpha2)-G.cdf(-talpha2)
    
    power = 1 - beta

    print("–ú–æ—â–Ω–æ—Å—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏—è = " + one_rrstr(power,3))
    
    return (t_stat, t_critical, p_value, power)
#######################################################################################################################
def TMH_2(text,sigma,mu_0,mu_1,alpha,splitter = ';',locale = 'rus') -> tuple:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞  –≥–∏–ø–æ—Ç–µ–∑—ã  –æ–±  –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –∑–Ω–∞—á–µ–Ω–∏–∏  –ì–ï–ù–ï–†–ê–õ–¨–ù–û–ì–û –°–†–ï–î–ù–ï–ì–û –ü–†–ò –ò–ó–í–ï–°–¢–ù–û–ô –î–ò–°–ü–ï–†–°–ò–ò –Ω–∞ —É—Ä–æ–≤–Ω–µ –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏ ùú∂.
    –ü—É—Å—Ç—å X- =(x1,‚Ä¶,x_n) - —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –≤—ã–±–æ—Ä–∫–∏ X =(X1,‚Ä¶,X_n)
    –∏–∑ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è N(Œº;`sigma`^2).
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –Ω–∞ —É—Ä–æ–≤–Ω–µ –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏ Œ± =`alpha` –æ—Å–Ω–æ–≤–Ω–∞—è –≥–∏–ø–æ—Ç–µ–∑–∞ H0: Œº=`mu_0`
    –ø—Ä–æ—Ç–∏–≤ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –≥–∏–ø–æ—Ç–µ–∑—ã H1:Œº‚â†`mu_0` —Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –≤–∏–¥–∞
    KŒ± = (‚àí‚àû,-A)‚à™(A,+‚àû).
    - –ù–∞–π–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è Z_–Ω–∞–±–ª. = Z(X-). 
    - –ù–∞–π–¥–∏—Ç–µ –≥—Ä–∞–Ω–∏—Ü—É A –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞. 
    - –ù–∞–π–¥–∏—Ç–µ P-–∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è –∏ —Å–¥–µ–ª–∞–π—Ç–µ –≤—ã–≤–æ–¥—ã.
    - –ù–∞–π–¥–∏—Ç–µ –º–æ—â–Ω–æ—Å—Ç—å W –∫—Ä–∏—Ç–µ—Ä–∏—è –¥–ª—è H1:Œº= `mu_1`
    
    
    –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: X- = `text`
    
    
    ## Args:
        text (str): –°—Ç—Ä–æ–∫–∞ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è –≤—Å–µ—Ö —á–∏—Å–µ–ª, –¥–∞–Ω–Ω—ã—Ö –∫–∞–∫ X-
        sigma (numerical): –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ
        mu_0 (numerical): –ó–Ω–∞—á–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –ø—Ä–∏ –≥–∏–ø–æ—Ç–∏–∑–µ H0
        mu_1 (numerical): –ó–Ω–∞—á–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –¥–ª—è W –∫—Ä–∏—Ç–µ—Ä–∏—è
        alpha (numerical): –£—Ä–æ–≤–µ–Ω—å –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏
        splitter (str, optional): –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É –∫–∞–∂–¥—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –≤ `text`. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ —Ä–∞–≤–Ω–æ =  ';'.
        locale (str, optional): –õ–æ–∫–∞–ª–∏–∑—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö - –µ—Å–ª–∏ —Ü–µ–ª–∞—è –∏ –¥—Ä–æ–±–Ω–∞—è —á–∞—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ —á–∏—Å–ª–∞ –∏–∑ `text —Ä–∞–∑–¥–µ–ª–µ–Ω–∞ –Ω–µ –∑–∞–ø—è—Ç–æ–π, —Ç–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –Ω–∞ –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ —Ä–∞–≤–Ω–æ =  'rus'.

    ## Prints
        `answer` –∫–∞–∂–¥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ.<br>C –∑–∞–ø—è—Ç–æ–π –≤–º–µ—Å—Ç–æ —Ç–æ—á–∫–∏ –∏ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –¥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–µ—Å—è—Ç–∏—á–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤.

    ## Returns:
        `answer` (tuple): –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
    """
    from scipy.stats import norm
    
    # –î–∞–Ω–Ω—ã–µ
    if locale== 'rus':
        x = np.array(text.replace(',','.').split(splitter)).astype(float)
    else:
        x = np.array(text.split(splitter)).astype(float)

    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
    n = x.size                # –†–∞–∑–º–µ—Ä –≤—ã–±–æ—Ä–∫–∏


    # 1. –ó–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è Z–Ω–∞–±–ª.
    x_bar = np.mean(x)        # –°—Ä–µ–¥–Ω–µ–µ –≤—ã–±–æ—Ä–∫–∏
    z_stat = (x_bar - mu_0) / (sigma / np.sqrt(n))
    print(f"–ó–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è = {z_stat:.3f}".replace('.',','))

    # 2. –ì—Ä–∞–Ω–∏—Ü–∞ A –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞
    A = norm.ppf(1 - alpha / 2)
    print(f"–ì—Ä–∞–Ω–∏—Ü–∞ A –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ = {A:.3f}".replace('.',','))

    # 3. P-–∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è
    p_value = 2 * (1 - norm.cdf(abs(z_stat)))
    print(f"P-–∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è = {p_value:.3f}".replace('.',','))

    # –í—ã–≤–æ–¥ –ø–æ –≥–∏–ø–æ—Ç–µ–∑–µ
    if abs(z_stat) > A:
        print("–ì–∏–ø–æ—Ç–µ–∑–∞ H0 –æ—Ç–≤–µ—Ä–≥–∞–µ—Ç—Å—è.")
    else:
        print("–ì–∏–ø–æ—Ç–µ–∑–∞ H0 –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è.")

    # 4. –ú–æ—â–Ω–æ—Å—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏—è W
    delta = (mu_1 - mu_0) / (sigma / np.sqrt(n))
    beta = norm.cdf(A - delta) - norm.cdf(-A - delta)
    power = 1 - beta
    print(f"–ú–æ—â–Ω–æ—Å—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏—è = {power:.3f}".replace('.',','))
    
    return (z_stat, A, p_value, power)
#######################################################################################################################
TMH = [TMH_1,TMH_2]