[project]
name = "scio-pypi"
version = "1.0.0"
description = "Statistical Confidence from Internal Observations"
authors = [{name = "Élie Goudout", email = "elie.goudout@thalesgroup.com"}]
maintainers = [{name = "Élie Goudout", email = "elie.goudout@thalesgroup.com"}]
requires-python = ">=3.12, <3.14"
readme = "README.md"
license = {file = "LICENSE"}
keywords = [
    "out-of-distribution detection",
    "machine learning",
    "statistics",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed",
]
dependencies = [
    "dill>=0.3.8",
    "faiss-cpu>=1.12",
    "lazy-loader>=0.4",
    "matplotlib>=3.10",
    "numpy>=2.2.2",
    "pandas>=2.2.3",
    "paramclasses>=0.4.0",
    "rich>=13.9.4",
    "scikit-learn>=1.6.1",
    "scipy>=1.16",
    "seaborn>=0.13.2",
    "torch>=2.3",
    "torchinfo>=1.8",
]
[dependency-groups]
dev = [
    "datasets>=3",
    "mypy>=1.17",
    "mypy-extensions>=1.1",
    "myst-parser>=4.0.1",
    "pandas-stubs>=2.2.3.241126",
    "pydata-sphinx-theme>=0.16.1",
    "pytest>=8.3.4",
    "pytest-cov>=6",
    "ruamel-yaml>=0.18.7",
    "sphinx>=8.2.3",
    "sphinx-copybutton>=0.5.2",
    "sphinx-design>=0.6.1",
    "sphinx-gallery>=0.19",
    "sphinxcontrib-bibtex>=2.6.4",
    "sphinxcontrib-images>=1.0.1",
    "sphinxcontrib-katex>=0.9.11",
]

[tool.uv]
# Until github.com/astral-sh/uv/issues/15125 is fixed
required-environments = [
  "python_version >= '3.12' and python_version < '3.13'",
  "python_version >= '3.13'"
]
# Adjust indirect dependencies lower bound
constraint-dependencies = [
    "aiohttp>=3.10", # datasets
    "accessible-pygments>=0.0.5", # pydata-sphinx-theme
    "beautifulsoup4>=4.13", # pydata-sphinx-theme
    "filelock>=3.13", # torch<=2.7.1
    "frozenlist>=1.5", # datasets > aiohttp
    "fsspec>=2023.10", # torch<=2.7.1
    "iniconfig>=2.1", # pytest
    "jinja2>=3.1.3", # myst-parser
    "multiprocess>=0.70.13", # datasets
    "networkx>=3.2", # torch<=2.7.1
    "nvidia-nvjitlink-cu12>=12.1", # torch > nvidia-cusolver-cu12 > nvidia-cusparse-cu12
    "pillow>=11", # matplotlib
    "pyarrow>=18", # datasets
    "pybtex>=0.25", # sphinxcontrib-bibtex
    "pybtex-docutils>=1.0.2", # sphinxcontrib-bibtex
    "pyyaml>=6.0.2", # sphinxcontrib-bibtex > pybtex
    "requests>=2.32.2", # sphinx
    "ruamel-yaml-clib>=0.2.11", # ruamel-yaml
    "setuptools>=58.3", # sphinxcontrib-bibtex
    "soupsieve>=2.3", # pydata-sphinx-theme
    "sympy>=1.9", # torch<=2.7.1
    "typing-extensions>=4.12", # torch<=2.7.1
    "urllib3>=2", # requests
    "xxhash>=3.5", # datasets
]


[tool.ruff]
extend-exclude = ["docs/src/auto_*"]

[tool.ruff.lint]
select = ["ALL"]
ignore = ["D416"]  # Numpy docstyle, see https://github.com/PyCQA/pydocstyle/blob/master/docs/error_codes.rst

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"test/**/*.py" = [
    "ANN001",                        # Optional argument typing in fixtures
    "N802", "N803", "N806",          # Fixtures and variables may be capitalized
    "PLR2004",                       # May use "magic numbers" in tests
    "S101",                          # Authorize `assert` in `test/`
]
"test/**/test_*.py" = [
    "ANN201",                        # No return typing for tests
    "B018",                          # Useless expressions (actually useful)
    "PLR0913",                       # Many fixtures needed sometimes
    "T201",                          # Print statements
]
"docs/src/conf.py" = [
    "INP001",                        # Implicit namespace package
]
"docs/src/tutorials/*" = [
    "B018",                          # Useless statements
    "D205", "D212", "D400", "D415",  # Incorrect module docstring
    "E402", "I001",                  # Import not at top/sorted/formatted
    "INP001",                        # Implicit namespace package
    "PLR2004",                       # Magic values
    "T201",                          # Print statements
]
".github/scripts/*.py" = [
    "INP001",                        # Implicit namespace package
]

[tool.ruff.format]
docstring-code-format = true  # Enable reformatting of code snippets in docstrings.
preview = true


[tool.mypy]
files = [
    "scio",
    "test",
    "docs/src/conf.py",
    "docs/src/tutorials",
]
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
pretty = true


[tool.pytest.ini_options]
testpaths = "test"
addopts = [
    "--cov",  # Nonlast option (github.com/pytest-dev/pytest-cov/issues/701)
    "--import-mode=importlib",  # Recommended by pytest
]

[tool.coverage.run]
source = ["scio", "test"]

[tool.coverage.report]
precision = 2
skip_empty = true
show_missing = true


[build-system]
requires = ["uv_build>=0.8.3,<0.9.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "scio"
module-root = ""
