name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        
    - name: Lint with ruff
      run: |
        ruff check .
        
    - name: Type check with mypy
      run: |
        mypy accessnode tests
        
    - name: Setup test databases
      run: |
        PGPASSWORD=postgres psql -h localhost -U postgres -c "CREATE DATABASE test_accessnode;"
        PGPASSWORD=postgres psql -h localhost -U postgres -c "CREATE DATABASE accessnode_main;"

    - name: Run tests
      run: |
        # Run unit tests (no database required)
        pytest tests/unit/ -v
        # Run integration tests (requires database)
        pytest tests/integration/ -v
        # Run final comprehensive test for validation
        python final_comprehensive_test.py
      env:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: accessnode_main
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        SECRET_KEY: test-secret-key-for-ci
        ENCRYPTION_KEY: test-encryption-key-32-characters