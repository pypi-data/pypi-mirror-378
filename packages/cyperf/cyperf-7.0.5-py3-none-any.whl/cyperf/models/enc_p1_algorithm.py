# coding: utf-8

"""
    CyPerf Application API

    CyPerf REST API

    The version of the OpenAPI document: 1.0.0
    Contact: support@keysight.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class EncP1Algorithm(str, Enum):
    """
    EncP1Algorithm
    """

    """
    allowed enum values
    """
    DES_CBC = 'DES CBC'
    DES_CBC3 = 'DES CBC3'
    AES128_CBC = 'AES128 CBC'
    AES192_CBC = 'AES192 CBC'
    AES256_CBC = 'AES256 CBC'
    AES128_GCM_ICV8 = 'AES128 GCM ICV8'
    AES192_GCM_ICV8 = 'AES192 GCM ICV8'
    AES256_GCM_ICV8 = 'AES256 GCM ICV8'
    AES128_GCM_ICV12 = 'AES128 GCM ICV12'
    AES192_GCM_ICV12 = 'AES192 GCM ICV12'
    AES256_GCM_ICV12 = 'AES256 GCM ICV12'
    AES128_GCM_ICV16 = 'AES128 GCM ICV16'
    AES192_GCM_ICV16 = 'AES192 GCM ICV16'
    AES256_GCM_ICV16 = 'AES256 GCM ICV16'
    DES_MINUS_CBC = 'DES-CBC'
    PH1_MINUS_DES_MINUS_CBC_MINUS_3 = 'PH1-DES-CBC-3'
    PH1_MINUS_AES128_MINUS_CBC = 'PH1-AES128-CBC'
    PH1_MINUS_AES192_MINUS_CBC = 'PH1-AES192-CBC'
    PH1_MINUS_AES256_MINUS_CBC = 'PH1-AES256-CBC'
    PH1_MINUS_AES128_MINUS_GCM_MINUS_ICV_MINUS_8 = 'PH1-AES128-GCM-ICV-8'
    PH1_MINUS_AES192_MINUS_GCM_MINUS_ICV_MINUS_8 = 'PH1-AES192-GCM-ICV-8'
    PH1_MINUS_AES256_MINUS_GCM_MINUS_ICV_MINUS_8 = 'PH1-AES256-GCM-ICV-8'
    PH1_MINUS_AES128_MINUS_GCM_MINUS_ICV_MINUS_12 = 'PH1-AES128-GCM-ICV-12'
    PH1_MINUS_AES192_MINUS_GCM_MINUS_ICV_MINUS_12 = 'PH1-AES192-GCM-ICV-12'
    PH1_MINUS_AES256_MINUS_GCM_MINUS_ICV_MINUS_12 = 'PH1-AES256-GCM-ICV-12'
    PH1_MINUS_AES128_MINUS_GCM_MINUS_ICV_MINUS_16 = 'PH1-AES128-GCM-ICV-16'
    PH1_MINUS_AES192_MINUS_GCM_MINUS_ICV_MINUS_16 = 'PH1-AES192-GCM-ICV-16'
    PH1_MINUS_AES256_MINUS_GCM_MINUS_ICV_MINUS_16 = 'PH1-AES256-GCM-ICV-16'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of EncP1Algorithm from a JSON string"""
        return cls(json.loads(json_str))


