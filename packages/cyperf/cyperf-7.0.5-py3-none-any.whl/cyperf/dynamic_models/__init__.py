# coding: utf-8

# flake8: noqa
"""
    CyPerf Application API

    CyPerf REST API

    The version of the OpenAPI document: 1.0.0
    Contact: support@keysight.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from cyperf import DynamicModel
import cyperf

# import models into model package
APILink = DynamicModel('APILink', (), {} )
APIRelationship = DynamicModel('APIRelationship', (), {} )
Action = DynamicModel('Action', (), {} )
ActionBase = DynamicModel('ActionBase', (), {} )
ActionInput = DynamicModel('ActionInput', (), {} )
ActionInputFindParam = DynamicModel('ActionInputFindParam', (), {} )
ActionMetadata = DynamicModel('ActionMetadata', (), {} )
ActivationCodeInfo = DynamicModel('ActivationCodeInfo', (), {} )
ActivationCodeListRequest = DynamicModel('ActivationCodeListRequest', (), {} )
ActivationCodeRequest = DynamicModel('ActivationCodeRequest', (), {} )
AddActionInfo = DynamicModel('AddActionInfo', (), {} )
AddInput = DynamicModel('AddInput', (), {} )
AdvancedSettings = DynamicModel('AdvancedSettings', (), {} )
Agent = DynamicModel('Agent', (), {} )
AgentAssignmentByPort = DynamicModel('AgentAssignmentByPort', (), {} )
AgentAssignmentDetails = DynamicModel('AgentAssignmentDetails', (), {} )
AgentAssignments = DynamicModel('AgentAssignments', (), {} )
AgentCPUInfo = DynamicModel('AgentCPUInfo', (), {} )
AgentFeatures = DynamicModel('AgentFeatures', (), {} )
AgentOptimizationMode = DynamicModel('AgentOptimizationMode', (), {} )
AgentRelease = DynamicModel('AgentRelease', (), {} )
AgentReservation = DynamicModel('AgentReservation', (), {} )
AgentToBeRebooted = DynamicModel('AgentToBeRebooted', (), {} )
AgentsGroup = DynamicModel('AgentsGroup', (), {} )
AppExchange = DynamicModel('AppExchange', (), {} )
AppFlow = DynamicModel('AppFlow', (), {} )
AppFlowDesc = DynamicModel('AppFlowDesc', (), {} )
AppFlowInput = DynamicModel('AppFlowInput', (), {} )
AppFlowInputFindParam = DynamicModel('AppFlowInputFindParam', (), {} )
AppId = DynamicModel('AppId', (), {} )
AppMode = DynamicModel('AppMode', (), {} )
Application = DynamicModel('Application', (), {} )
ApplicationProfile = DynamicModel('ApplicationProfile', (), {} )
ApplicationType = DynamicModel('ApplicationType', (), {} )
AppsecApp = DynamicModel('AppsecApp', (), {} )
AppsecAppMetadata = DynamicModel('AppsecAppMetadata', (), {} )
AppsecAttack = DynamicModel('AppsecAttack', (), {} )
AppsecConfig = DynamicModel('AppsecConfig', (), {} )
ArchiveInfo = DynamicModel('ArchiveInfo', (), {} )
ArrayV2ElementMetadata = DynamicModel('ArrayV2ElementMetadata', (), {} )
AsyncContext = DynamicModel('AsyncContext', (), {} )
AsyncOperationResponse = DynamicModel('AsyncOperationResponse', (), {} )
Attack = DynamicModel('Attack', (), {} )
AttackAction = DynamicModel('AttackAction', (), {} )
AttackMetadata = DynamicModel('AttackMetadata', (), {} )
AttackMetadataKeywordsInner = DynamicModel('AttackMetadataKeywordsInner', (), {} )
AttackObjectivesAndTimeline = DynamicModel('AttackObjectivesAndTimeline', (), {} )
AttackProfile = DynamicModel('AttackProfile', (), {} )
AttackTimelineSegment = DynamicModel('AttackTimelineSegment', (), {} )
AttackTrack = DynamicModel('AttackTrack', (), {} )
AuthMethodType = DynamicModel('AuthMethodType', (), {} )
AuthProfile = DynamicModel('AuthProfile', (), {} )
AuthProfileMetadata = DynamicModel('AuthProfileMetadata', (), {} )
AuthSettings = DynamicModel('AuthSettings', (), {} )
Authenticate200Response = DynamicModel('Authenticate200Response', (), {} )
AuthenticationSettings = DynamicModel('AuthenticationSettings', (), {} )
AutomaticIpType = DynamicModel('AutomaticIpType', (), {} )
Broker = DynamicModel('Broker', (), {} )
CaptureInput = DynamicModel('CaptureInput', (), {} )
CaptureInputFindParam = DynamicModel('CaptureInputFindParam', (), {} )
CaptureSettings = DynamicModel('CaptureSettings', (), {} )
Category = DynamicModel('Category', (), {} )
CategoryFilter = DynamicModel('CategoryFilter', (), {} )
CategoryValue = DynamicModel('CategoryValue', (), {} )
CertConfig = DynamicModel('CertConfig', (), {} )
Certificate = DynamicModel('Certificate', (), {} )
ChassisInfo = DynamicModel('ChassisInfo', (), {} )
Choice = DynamicModel('Choice', (), {} )
CipherTLS12 = DynamicModel('CipherTLS12', (), {} )
CipherTLS13 = DynamicModel('CipherTLS13', (), {} )
CiscoAnyConnectSettings = DynamicModel('CiscoAnyConnectSettings', (), {} )
CiscoEncapsulation = DynamicModel('CiscoEncapsulation', (), {} )
ClearPortsOwnershipOperation = DynamicModel('ClearPortsOwnershipOperation', (), {} )
Command = DynamicModel('Command', (), {} )
ComputeNode = DynamicModel('ComputeNode', (), {} )
Config = DynamicModel('Config', (), {} )
ConfigCategory = DynamicModel('ConfigCategory', (), {} )
ConfigId = DynamicModel('ConfigId', (), {} )
ConfigMetadata = DynamicModel('ConfigMetadata', (), {} )
ConfigValidation = DynamicModel('ConfigValidation', (), {} )
Conflict = DynamicModel('Conflict', (), {} )
Connection = DynamicModel('Connection', (), {} )
ConnectionPersistence = DynamicModel('ConnectionPersistence', (), {} )
Consumer = DynamicModel('Consumer', (), {} )
Controller = DynamicModel('Controller', (), {} )
CountedFeatureConsumer = DynamicModel('CountedFeatureConsumer', (), {} )
CountedFeatureStats = DynamicModel('CountedFeatureStats', (), {} )
CreateAppOperation = DynamicModel('CreateAppOperation', (), {} )
CreateAppOrAttackOperationInput = DynamicModel('CreateAppOrAttackOperationInput', (), {} )
CustomDashboards = DynamicModel('CustomDashboards', (), {} )
CustomImportHandler = DynamicModel('CustomImportHandler', (), {} )
CustomStat = DynamicModel('CustomStat', (), {} )
DNSResolver = DynamicModel('DNSResolver', (), {} )
DNSServer = DynamicModel('DNSServer', (), {} )
DTLSSettings = DynamicModel('DTLSSettings', (), {} )
DUTNetwork = DynamicModel('DUTNetwork', (), {} )
Dashboard = DynamicModel('Dashboard', (), {} )
DataType = DynamicModel('DataType', (), {} )
DataTypeValuesInner = DynamicModel('DataTypeValuesInner', (), {} )
Definition = DynamicModel('Definition', (), {} )
DeleteInput = DynamicModel('DeleteInput', (), {} )
DhP1Group = DynamicModel('DhP1Group', (), {} )
DiagnosticComponent = DynamicModel('DiagnosticComponent', (), {} )
DiagnosticComponentContext = DynamicModel('DiagnosticComponentContext', (), {} )
DiagnosticOptions = DynamicModel('DiagnosticOptions', (), {} )
DiskUsage = DynamicModel('DiskUsage', (), {} )
ESPOverUDPSettings = DynamicModel('ESPOverUDPSettings', (), {} )
EditActionInput = DynamicModel('EditActionInput', (), {} )
EditAppOperation = DynamicModel('EditAppOperation', (), {} )
EffectivePorts = DynamicModel('EffectivePorts', (), {} )
EmulatedRouter = DynamicModel('EmulatedRouter', (), {} )
EmulatedRouterRange = DynamicModel('EmulatedRouterRange', (), {} )
EmulatedSubnetConfig = DynamicModel('EmulatedSubnetConfig', (), {} )
EncP1Algorithm = DynamicModel('EncP1Algorithm', (), {} )
EncP2Algorithm = DynamicModel('EncP2Algorithm', (), {} )
Endpoint = DynamicModel('Endpoint', (), {} )
EntitlementCodeInfo = DynamicModel('EntitlementCodeInfo', (), {} )
EntitlementCodeRequest = DynamicModel('EntitlementCodeRequest', (), {} )
Enum = DynamicModel('Enum', (), {} )
ErrorDescription = DynamicModel('ErrorDescription', (), {} )
ErrorResponse = DynamicModel('ErrorResponse', (), {} )
EthRange = DynamicModel('EthRange', (), {} )
EulaDetails = DynamicModel('EulaDetails', (), {} )
EulaSummary = DynamicModel('EulaSummary', (), {} )
Exchange = DynamicModel('Exchange', (), {} )
ExchangeOrder = DynamicModel('ExchangeOrder', (), {} )
ExchangePayload = DynamicModel('ExchangePayload', (), {} )
ExpectedDiskSpace = DynamicModel('ExpectedDiskSpace', (), {} )
ExpectedDiskSpaceMessage = DynamicModel('ExpectedDiskSpaceMessage', (), {} )
ExpectedDiskSpacePrettySize = DynamicModel('ExpectedDiskSpacePrettySize', (), {} )
ExpectedDiskSpaceSize = DynamicModel('ExpectedDiskSpaceSize', (), {} )
ExportAllOperation = DynamicModel('ExportAllOperation', (), {} )
ExportAppsOperationInput = DynamicModel('ExportAppsOperationInput', (), {} )
ExportFilesOperationInput = DynamicModel('ExportFilesOperationInput', (), {} )
ExportFilesRequest = DynamicModel('ExportFilesRequest', (), {} )
ExportPackageOperation = DynamicModel('ExportPackageOperation', (), {} )
ExternalResourceInfo = DynamicModel('ExternalResourceInfo', (), {} )
F5Encapsulation = DynamicModel('F5Encapsulation', (), {} )
F5Settings = DynamicModel('F5Settings', (), {} )
Feature = DynamicModel('Feature', (), {} )
FeatureReservation = DynamicModel('FeatureReservation', (), {} )
FeatureReservationReserve = DynamicModel('FeatureReservationReserve', (), {} )
FileMetadata = DynamicModel('FileMetadata', (), {} )
FileValue = DynamicModel('FileValue', (), {} )
Filter = DynamicModel('Filter', (), {} )
FilteredStat = DynamicModel('FilteredStat', (), {} )
FindParamMatchesOperation = DynamicModel('FindParamMatchesOperation', (), {} )
FortinetEncapsulation = DynamicModel('FortinetEncapsulation', (), {} )
FortinetSettings = DynamicModel('FortinetSettings', (), {} )
FulfillmentRequest = DynamicModel('FulfillmentRequest', (), {} )
GenerateAllOperation = DynamicModel('GenerateAllOperation', (), {} )
GenerateCSVReportsOperation = DynamicModel('GenerateCSVReportsOperation', (), {} )
GeneratePDFReportOperation = DynamicModel('GeneratePDFReportOperation', (), {} )
GenericFile = DynamicModel('GenericFile', (), {} )
GetAgents200Response = DynamicModel('GetAgents200Response', (), {} )
GetAgents200ResponseOneOf = DynamicModel('GetAgents200ResponseOneOf', (), {} )
GetAgentsTags200Response = DynamicModel('GetAgentsTags200Response', (), {} )
GetAgentsTags200ResponseOneOf = DynamicModel('GetAgentsTags200ResponseOneOf', (), {} )
GetAsyncOperationResult200Response = DynamicModel('GetAsyncOperationResult200Response', (), {} )
GetAttacksOperation = DynamicModel('GetAttacksOperation', (), {} )
GetBrokers200Response = DynamicModel('GetBrokers200Response', (), {} )
GetBrokers200ResponseOneOf = DynamicModel('GetBrokers200ResponseOneOf', (), {} )
GetCategoriesOperation = DynamicModel('GetCategoriesOperation', (), {} )
GetConfigCategories200Response = DynamicModel('GetConfigCategories200Response', (), {} )
GetConfigCategories200ResponseOneOf = DynamicModel('GetConfigCategories200ResponseOneOf', (), {} )
GetConfigs200Response = DynamicModel('GetConfigs200Response', (), {} )
GetConfigs200ResponseOneOf = DynamicModel('GetConfigs200ResponseOneOf', (), {} )
GetControllers200Response = DynamicModel('GetControllers200Response', (), {} )
GetControllers200ResponseOneOf = DynamicModel('GetControllers200ResponseOneOf', (), {} )
GetDiskUsageConsumers200Response = DynamicModel('GetDiskUsageConsumers200Response', (), {} )
GetDiskUsageConsumers200ResponseOneOf = DynamicModel('GetDiskUsageConsumers200ResponseOneOf', (), {} )
GetLicenseAsyncOperationResult200Response = DynamicModel('GetLicenseAsyncOperationResult200Response', (), {} )
GetLicenseServers200Response = DynamicModel('GetLicenseServers200Response', (), {} )
GetLicenseServers200ResponseOneOf = DynamicModel('GetLicenseServers200ResponseOneOf', (), {} )
GetNotifications200Response = DynamicModel('GetNotifications200Response', (), {} )
GetNotifications200ResponseOneOf = DynamicModel('GetNotifications200ResponseOneOf', (), {} )
GetResourcesApplicationTypes200Response = DynamicModel('GetResourcesApplicationTypes200Response', (), {} )
GetResourcesApplicationTypes200ResponseOneOf = DynamicModel('GetResourcesApplicationTypes200ResponseOneOf', (), {} )
GetResourcesApps200Response = DynamicModel('GetResourcesApps200Response', (), {} )
GetResourcesApps200ResponseOneOf = DynamicModel('GetResourcesApps200ResponseOneOf', (), {} )
GetResourcesAttacks200Response = DynamicModel('GetResourcesAttacks200Response', (), {} )
GetResourcesAttacks200ResponseOneOf = DynamicModel('GetResourcesAttacks200ResponseOneOf', (), {} )
GetResourcesAuthProfiles200Response = DynamicModel('GetResourcesAuthProfiles200Response', (), {} )
GetResourcesAuthProfiles200ResponseOneOf = DynamicModel('GetResourcesAuthProfiles200ResponseOneOf', (), {} )
GetResourcesCertificates200Response = DynamicModel('GetResourcesCertificates200Response', (), {} )
GetResourcesCertificates200ResponseOneOf = DynamicModel('GetResourcesCertificates200ResponseOneOf', (), {} )
GetResourcesCustomImportOperations200Response = DynamicModel('GetResourcesCustomImportOperations200Response', (), {} )
GetResourcesCustomImportOperations200ResponseOneOf = DynamicModel('GetResourcesCustomImportOperations200ResponseOneOf', (), {} )
GetResourcesHttpProfiles200Response = DynamicModel('GetResourcesHttpProfiles200Response', (), {} )
GetResourcesHttpProfiles200ResponseOneOf = DynamicModel('GetResourcesHttpProfiles200ResponseOneOf', (), {} )
GetResultFiles200Response = DynamicModel('GetResultFiles200Response', (), {} )
GetResultFiles200ResponseOneOf = DynamicModel('GetResultFiles200ResponseOneOf', (), {} )
GetResultStats200Response = DynamicModel('GetResultStats200Response', (), {} )
GetResultStats200ResponseOneOf = DynamicModel('GetResultStats200ResponseOneOf', (), {} )
GetResults200Response = DynamicModel('GetResults200Response', (), {} )
GetResults200ResponseOneOf = DynamicModel('GetResults200ResponseOneOf', (), {} )
GetResultsTags200Response = DynamicModel('GetResultsTags200Response', (), {} )
GetResultsTags200ResponseOneOf = DynamicModel('GetResultsTags200ResponseOneOf', (), {} )
GetSessionMeta200Response = DynamicModel('GetSessionMeta200Response', (), {} )
GetSessionMeta200ResponseOneOf = DynamicModel('GetSessionMeta200ResponseOneOf', (), {} )
GetSessions200Response = DynamicModel('GetSessions200Response', (), {} )
GetSessions200ResponseOneOf = DynamicModel('GetSessions200ResponseOneOf', (), {} )
GetStatsPlugins200Response = DynamicModel('GetStatsPlugins200Response', (), {} )
GetStatsPlugins200ResponseOneOf = DynamicModel('GetStatsPlugins200ResponseOneOf', (), {} )
GetStrikesOperation = DynamicModel('GetStrikesOperation', (), {} )
HTTPProfile = DynamicModel('HTTPProfile', (), {} )
HTTPReqMeta = DynamicModel('HTTPReqMeta', (), {} )
HTTPResMeta = DynamicModel('HTTPResMeta', (), {} )
HTTPVersion = DynamicModel('HTTPVersion', (), {} )
HashP1Algorithm = DynamicModel('HashP1Algorithm', (), {} )
HashP2Algorithm = DynamicModel('HashP2Algorithm', (), {} )
HealthCheckConfig = DynamicModel('HealthCheckConfig', (), {} )
HealthIssue = DynamicModel('HealthIssue', (), {} )
HostID = DynamicModel('HostID', (), {} )
IPNetwork = DynamicModel('IPNetwork', (), {} )
IPRange = DynamicModel('IPRange', (), {} )
IPSecRange = DynamicModel('IPSecRange', (), {} )
IPSecStack = DynamicModel('IPSecStack', (), {} )
IdPSignatureAlgo = DynamicModel('IdPSignatureAlgo', (), {} )
ImportAllOperation = DynamicModel('ImportAllOperation', (), {} )
ImportOfflineLicenseResult = DynamicModel('ImportOfflineLicenseResult', (), {} )
IngestOperation = DynamicModel('IngestOperation', (), {} )
InnerIPRange = DynamicModel('InnerIPRange', (), {} )
Interface = DynamicModel('Interface', (), {} )
IpMask = DynamicModel('IpMask', (), {} )
IpPreference = DynamicModel('IpPreference', (), {} )
IpVer = DynamicModel('IpVer', (), {} )
License = DynamicModel('License', (), {} )
LicenseReceipt = DynamicModel('LicenseReceipt', (), {} )
LicenseServerMetadata = DynamicModel('LicenseServerMetadata', (), {} )
Link = DynamicModel('Link', (), {} )
LoadConfigOperation = DynamicModel('LoadConfigOperation', (), {} )
LocalSubnetConfig = DynamicModel('LocalSubnetConfig', (), {} )
LogConfig = DynamicModel('LogConfig', (), {} )
LogLevel = DynamicModel('LogLevel', (), {} )
MacDtlsStack = DynamicModel('MacDtlsStack', (), {} )
MappingType = DynamicModel('MappingType', (), {} )
MarkedAsDeleted = DynamicModel('MarkedAsDeleted', (), {} )
MediaFile = DynamicModel('MediaFile', (), {} )
MediaTrack = DynamicModel('MediaTrack', (), {} )
Metadata = DynamicModel('Metadata', (), {} )
MosMode = DynamicModel('MosMode', (), {} )
NameIdFormat = DynamicModel('NameIdFormat', (), {} )
NameServer = DynamicModel('NameServer', (), {} )
NetworkMapping = DynamicModel('NetworkMapping', (), {} )
NetworkMeshing = DynamicModel('NetworkMeshing', (), {} )
NetworkProfile = DynamicModel('NetworkProfile', (), {} )
NetworkSegmentBase = DynamicModel('NetworkSegmentBase', (), {} )
NodesByController = DynamicModel('NodesByController', (), {} )
NodesPowerCycleOperation = DynamicModel('NodesPowerCycleOperation', (), {} )
Notification = DynamicModel('Notification', (), {} )
NotificationCounts = DynamicModel('NotificationCounts', (), {} )
NtpInfo = DynamicModel('NtpInfo', (), {} )
ObjectiveType = DynamicModel('ObjectiveType', (), {} )
ObjectiveUnit = DynamicModel('ObjectiveUnit', (), {} )
ObjectiveValueEntry = DynamicModel('ObjectiveValueEntry', (), {} )
ObjectivesAndTimeline = DynamicModel('ObjectivesAndTimeline', (), {} )
OpenAPIDefinitions = DynamicModel('OpenAPIDefinitions', (), {} )
P1Config = DynamicModel('P1Config', (), {} )
P2Config = DynamicModel('P2Config', (), {} )
PANGPEncapsulation = DynamicModel('PANGPEncapsulation', (), {} )
PANGPSettings = DynamicModel('PANGPSettings', (), {} )
Pair = DynamicModel('Pair', (), {} )
ParamMetadata = DynamicModel('ParamMetadata', (), {} )
ParamMetadataTypeInfo = DynamicModel('ParamMetadataTypeInfo', (), {} )
ParamMetadataTypeInfoArrayV2 = DynamicModel('ParamMetadataTypeInfoArrayV2', (), {} )
ParamMetadataTypeInfoArrayV2ElementsInner = DynamicModel('ParamMetadataTypeInfoArrayV2ElementsInner', (), {} )
ParamMetadataTypeInfoInt = DynamicModel('ParamMetadataTypeInfoInt', (), {} )
ParamMetadataTypeInfoMedia = DynamicModel('ParamMetadataTypeInfoMedia', (), {} )
ParamMetadataTypeInfoString = DynamicModel('ParamMetadataTypeInfoString', (), {} )
ParamSourceType = DynamicModel('ParamSourceType', (), {} )
ParamType = DynamicModel('ParamType', (), {} )
Parameter = DynamicModel('Parameter', (), {} )
ParameterMatch = DynamicModel('ParameterMatch', (), {} )
ParameterMetadata = DynamicModel('ParameterMetadata', (), {} )
Params = DynamicModel('Params', (), {} )
ParamsEnum = DynamicModel('ParamsEnum', (), {} )
PayloadMeta = DynamicModel('PayloadMeta', (), {} )
PayloadMetadata = DynamicModel('PayloadMetadata', (), {} )
PepDUT = DynamicModel('PepDUT', (), {} )
PfsP2Group = DynamicModel('PfsP2Group', (), {} )
Plugin = DynamicModel('Plugin', (), {} )
PluginStats = DynamicModel('PluginStats', (), {} )
Port = DynamicModel('Port', (), {} )
PortSettings = DynamicModel('PortSettings', (), {} )
PortsByController = DynamicModel('PortsByController', (), {} )
PortsByNode = DynamicModel('PortsByNode', (), {} )
PrepareTestOperation = DynamicModel('PrepareTestOperation', (), {} )
PreparedTestOptions = DynamicModel('PreparedTestOptions', (), {} )
PrfP1Algorithm = DynamicModel('PrfP1Algorithm', (), {} )
ProtectedSubnetConfig = DynamicModel('ProtectedSubnetConfig', (), {} )
RTPEncryptionMode = DynamicModel('RTPEncryptionMode', (), {} )
RTPProfile = DynamicModel('RTPProfile', (), {} )
RTPProfileMeta = DynamicModel('RTPProfileMeta', (), {} )
RebootOperationInput = DynamicModel('RebootOperationInput', (), {} )
RebootPortsOperation = DynamicModel('RebootPortsOperation', (), {} )
Reference = DynamicModel('Reference', (), {} )
RegexMatch = DynamicModel('RegexMatch', (), {} )
ReleaseOperationInput = DynamicModel('ReleaseOperationInput', (), {} )
RemoteAccess = DynamicModel('RemoteAccess', (), {} )
RemoteSubnetConfig = DynamicModel('RemoteSubnetConfig', (), {} )
RenameInput = DynamicModel('RenameInput', (), {} )
ReorderActionInput = DynamicModel('ReorderActionInput', (), {} )
ReorderExchangesInput = DynamicModel('ReorderExchangesInput', (), {} )
ReplayCapture = DynamicModel('ReplayCapture', (), {} )
RequiredFileTypes = DynamicModel('RequiredFileTypes', (), {} )
ReserveOperationInput = DynamicModel('ReserveOperationInput', (), {} )
ResultFileMetadata = DynamicModel('ResultFileMetadata', (), {} )
ResultMetadata = DynamicModel('ResultMetadata', (), {} )
ResultsGroup = DynamicModel('ResultsGroup', (), {} )
SaveConfigOperation = DynamicModel('SaveConfigOperation', (), {} )
Scenario = DynamicModel('Scenario', (), {} )
SecondaryObjective = DynamicModel('SecondaryObjective', (), {} )
SegmentType = DynamicModel('SegmentType', (), {} )
SelectedEnv = DynamicModel('SelectedEnv', (), {} )
Session = DynamicModel('Session', (), {} )
SessionReuseMethodTLS12 = DynamicModel('SessionReuseMethodTLS12', (), {} )
SessionReuseMethodTLS13 = DynamicModel('SessionReuseMethodTLS13', (), {} )
SetAggregationModeOperation = DynamicModel('SetAggregationModeOperation', (), {} )
SetAppOperation = DynamicModel('SetAppOperation', (), {} )
SetDpdkModeOperationInput = DynamicModel('SetDpdkModeOperationInput', (), {} )
SetLinkStateOperation = DynamicModel('SetLinkStateOperation', (), {} )
SetNtpOperationInput = DynamicModel('SetNtpOperationInput', (), {} )
SimulatedIdP = DynamicModel('SimulatedIdP', (), {} )
Snapshot = DynamicModel('Snapshot', (), {} )
SortBodyField = DynamicModel('SortBodyField', (), {} )
SpecificObjective = DynamicModel('SpecificObjective', (), {} )
StartAgentsBatchDeleteRequestInner = DynamicModel('StartAgentsBatchDeleteRequestInner', (), {} )
StatelessStream = DynamicModel('StatelessStream', (), {} )
StaticARPEntry = DynamicModel('StaticARPEntry', (), {} )
StatsResult = DynamicModel('StatsResult', (), {} )
SteadySegment = DynamicModel('SteadySegment', (), {} )
StepSegment = DynamicModel('StepSegment', (), {} )
StreamDirection = DynamicModel('StreamDirection', (), {} )
StreamPayloadType = DynamicModel('StreamPayloadType', (), {} )
StreamProfile = DynamicModel('StreamProfile', (), {} )
SupportedGroupTLS13 = DynamicModel('SupportedGroupTLS13', (), {} )
SystemInfo = DynamicModel('SystemInfo', (), {} )
TLSProfile = DynamicModel('TLSProfile', (), {} )
TcpProfile = DynamicModel('TcpProfile', (), {} )
TestInfo = DynamicModel('TestInfo', (), {} )
TestStateChangedOperation = DynamicModel('TestStateChangedOperation', (), {} )
TimeValue = DynamicModel('TimeValue', (), {} )
TimelineSegment = DynamicModel('TimelineSegment', (), {} )
TimelineSegmentBase = DynamicModel('TimelineSegmentBase', (), {} )
TimelineSegmentUnion = DynamicModel('TimelineSegmentUnion', (), {} )
Timers = DynamicModel('Timers', (), {} )
Track = DynamicModel('Track', (), {} )
TrackType = DynamicModel('TrackType', (), {} )
TrafficAgentInfo = DynamicModel('TrafficAgentInfo', (), {} )
TrafficProfileBase = DynamicModel('TrafficProfileBase', (), {} )
TrafficSettings = DynamicModel('TrafficSettings', (), {} )
TransportProfile = DynamicModel('TransportProfile', (), {} )
TransportProfileBase = DynamicModel('TransportProfileBase', (), {} )
TunnelRange = DynamicModel('TunnelRange', (), {} )
TunnelSettings = DynamicModel('TunnelSettings', (), {} )
TunnelStack = DynamicModel('TunnelStack', (), {} )
TypeArrayV2Metadata = DynamicModel('TypeArrayV2Metadata', (), {} )
TypeInfoMetadata = DynamicModel('TypeInfoMetadata', (), {} )
TypeIntMetadata = DynamicModel('TypeIntMetadata', (), {} )
TypeMediaMetadata = DynamicModel('TypeMediaMetadata', (), {} )
TypeStringMetadata = DynamicModel('TypeStringMetadata', (), {} )
UdpProfile = DynamicModel('UdpProfile', (), {} )
UpdateNetworkMapping = DynamicModel('UpdateNetworkMapping', (), {} )
VLANRange = DynamicModel('VLANRange', (), {} )
ValidationMessage = DynamicModel('ValidationMessage', (), {} )
Version = DynamicModel('Version', (), {} )
