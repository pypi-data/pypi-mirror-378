# coding: utf-8

"""
    CyPerf Application API

    CyPerf REST API

    The version of the OpenAPI document: 1.0.0
    Contact: support@keysight.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cyperf.models.transport_profile_base import TransportProfileBase

class TestTransportProfileBase(unittest.TestCase):
    """TransportProfileBase unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TransportProfileBase:
        """Test TransportProfileBase
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TransportProfileBase`
        """
        model = TransportProfileBase()
        if include_optional:
            return TransportProfileBase(
                client_http_profile = cyperf.models.http_profile.HTTPProfile(
                    additional_headers = null, 
                    connection_persistence = null, 
                    connections_max_transactions = 56, 
                    description = '', 
                    external_resource_url = '', 
                    http_version = null, 
                    headers = null, 
                    is_modified = True, 
                    name = '', 
                    params = [
                        cyperf.models.params.Params(
                            array_element_type = '', 
                            array_elements = [
                                {
                                    'key' : ''
                                    }
                                ], 
                            category = '', 
                            category_index = 56, 
                            deprecated_previous_source = '', 
                            description = '', 
                            dictionary_value = {
                                'key' : ''
                                }, 
                            enum = cyperf.models.params_enum.Params_Enum(
                                choices = [
                                    cyperf.models.choice.Choice(
                                        description = '', 
                                        hidden = True, 
                                        name = '', 
                                        value = '', )
                                    ], ), 
                            file_value = null, 
                            flow_identifier = True, 
                            is_deprecated = True, 
                            is_modified = True, 
                            media_files = [
                                cyperf.models.media_file.MediaFile(
                                    file_value = null, 
                                    media_tracks = [
                                        cyperf.models.media_track.MediaTrack(
                                            bitrate = 56, 
                                            bitrate_kbps = 56, 
                                            codec = '', 
                                            codec_description = '', 
                                            track_id = '', 
                                            track_type = null, 
                                            id = '', )
                                        ], 
                                    id = '', 
                                    links = [
                                        cyperf.models.api_link.APILink(
                                            content_type = '', 
                                            href = '', 
                                            method = '', 
                                            name = '', 
                                            references_count = 56, 
                                            rel = '', 
                                            type = '', )
                                        ], )
                                ], 
                            metadata = cyperf.models.param_metadata.ParamMetadata(
                                type_info = cyperf.models.param_metadata_type_info.ParamMetadata_TypeInfo(
                                    array_v2 = cyperf.models.param_metadata_type_info_array_v2.ParamMetadata_TypeInfo_arrayV2(
                                        elements = [
                                            cyperf.models.param_metadata_type_info_array_v2_elements_inner.ParamMetadata_TypeInfo_arrayV2_elements_inner(
                                                type = '', )
                                            ], ), 
                                    int = cyperf.models.param_metadata_type_info_int.ParamMetadata_TypeInfo_int(
                                        max_value = 56, 
                                        min_value = 56, ), 
                                    media = cyperf.models.param_metadata_type_info_media.ParamMetadata_TypeInfo_media(
                                        track_id = '', 
                                        track_type = '', ), 
                                    string = cyperf.models.param_metadata_type_info_string.ParamMetadata_TypeInfo_string(
                                        charset = '', 
                                        max_length = 56, 
                                        min_length = 56, ), ), ), 
                            name = '', 
                            param_id = '', 
                            readonly = True, 
                            source = '', 
                            supported_sources = [
                                ''
                                ], 
                            type = '', 
                            value = '', 
                            file_upload = [
                                'YQ=='
                                ], 
                            id = , 
                            links = [
                                cyperf.models.api_link.APILink(
                                    content_type = '', 
                                    href = '', 
                                    method = '', 
                                    name = '', 
                                    references_count = 56, 
                                    rel = '', 
                                    type = '', )
                                ], 
                            supports_dynamic_payload = True, 
                            upload_url = '', )
                        ], 
                    use_application_server_headers = True, 
                    links = , ),
                client_tls_profile = cyperf.models.tls_profile.TLSProfile(
                    certificate_file = null, 
                    cipher = null, 
                    cipher12 = null, 
                    cipher13 = null, 
                    ciphers12 = [
                        'ECDHE-RSA-AES256-GCM-SHA384'
                        ], 
                    ciphers13 = [
                        'AES-256-GCM-SHA384'
                        ], 
                    dh_file = null, 
                    get_tls_conflicts = [
                        'YQ=='
                        ], 
                    immediate_close = True, 
                    key_file = null, 
                    key_file_password = '', 
                    links = [
                        cyperf.models.api_link.APILink(
                            content_type = '', 
                            href = '', 
                            method = '', 
                            name = '', 
                            references_count = 56, 
                            rel = '', 
                            type = '', )
                        ], 
                    middle_box_enabled = True, 
                    profile_id = '', 
                    resolve_tls_conflicts = [
                        cyperf.models.conflict.Conflict(
                            name = '', 
                            path_to_target = '', 
                            path_vars = {
                                'key' : ''
                                }, )
                        ], 
                    send_close_notify = True, 
                    session_reuse_count = 56, 
                    session_reuse_method = null, 
                    session_reuse_method12 = null, 
                    session_reuse_method13 = null, 
                    sni_cert_configs = [
                        cyperf.models.cert_config.CertConfig(
                            certificate_file = null, 
                            dh_file = null, 
                            get_sni_conflicts = [
                                'YQ=='
                                ], 
                            id = '', 
                            is_playlist = True, 
                            key_file = null, 
                            key_file_password = '', 
                            playlist_column_name = '', 
                            playlist_filename = '', 
                            resolve_sni_conflicts = [
                                cyperf.models.conflict.Conflict(
                                    name = '', 
                                    path_to_target = '', 
                                    path_vars = {
                                        'key' : ''
                                        }, )
                                ], 
                            sni_hostname = '', )
                        ], 
                    sni_enabled = True, 
                    supported_groups13 = [
                        'P-256'
                        ], 
                    tls12_enabled = True, 
                    tls13_enabled = True, 
                    use_tls_profile = True, 
                    version = 'NONE', ),
                client_tcp_profile = cyperf.models.tcp_profile.TcpProfile(
                    close_with_reset = True, 
                    defer_accept = True, 
                    ecn_enabled = True, 
                    max_rto = 56, 
                    max_src_port = 56, 
                    min_rto = 56, 
                    min_src_port = 56, 
                    ping_pong = True, 
                    pmtu_disc_disabled = True, 
                    recycle_tw_enabled = True, 
                    reordering = True, 
                    reuse_tw_enabled = True, 
                    rx_buffer = 56, 
                    sack_enabled = True, 
                    sock_group = '', 
                    timestamp_hdr_enabled = True, 
                    tx_buffer = 56, 
                    user_mss = 56, 
                    wscale_enabled = True, ),
                ip_tos = 56,
                rtp_profile = cyperf.models.rtp_profile.RTPProfile(
                    encryption_mode = null, 
                    mos_mode = null, 
                    profile_id = '', ),
                server_http_profile = cyperf.models.http_profile.HTTPProfile(
                    additional_headers = null, 
                    connection_persistence = null, 
                    connections_max_transactions = 56, 
                    description = '', 
                    external_resource_url = '', 
                    http_version = null, 
                    headers = null, 
                    is_modified = True, 
                    name = '', 
                    params = [
                        cyperf.models.params.Params(
                            array_element_type = '', 
                            array_elements = [
                                {
                                    'key' : ''
                                    }
                                ], 
                            category = '', 
                            category_index = 56, 
                            deprecated_previous_source = '', 
                            description = '', 
                            dictionary_value = {
                                'key' : ''
                                }, 
                            enum = cyperf.models.params_enum.Params_Enum(
                                choices = [
                                    cyperf.models.choice.Choice(
                                        description = '', 
                                        hidden = True, 
                                        name = '', 
                                        value = '', )
                                    ], ), 
                            file_value = null, 
                            flow_identifier = True, 
                            is_deprecated = True, 
                            is_modified = True, 
                            media_files = [
                                cyperf.models.media_file.MediaFile(
                                    file_value = null, 
                                    media_tracks = [
                                        cyperf.models.media_track.MediaTrack(
                                            bitrate = 56, 
                                            bitrate_kbps = 56, 
                                            codec = '', 
                                            codec_description = '', 
                                            track_id = '', 
                                            track_type = null, 
                                            id = '', )
                                        ], 
                                    id = '', 
                                    links = [
                                        cyperf.models.api_link.APILink(
                                            content_type = '', 
                                            href = '', 
                                            method = '', 
                                            name = '', 
                                            references_count = 56, 
                                            rel = '', 
                                            type = '', )
                                        ], )
                                ], 
                            metadata = cyperf.models.param_metadata.ParamMetadata(
                                type_info = cyperf.models.param_metadata_type_info.ParamMetadata_TypeInfo(
                                    array_v2 = cyperf.models.param_metadata_type_info_array_v2.ParamMetadata_TypeInfo_arrayV2(
                                        elements = [
                                            cyperf.models.param_metadata_type_info_array_v2_elements_inner.ParamMetadata_TypeInfo_arrayV2_elements_inner(
                                                type = '', )
                                            ], ), 
                                    int = cyperf.models.param_metadata_type_info_int.ParamMetadata_TypeInfo_int(
                                        max_value = 56, 
                                        min_value = 56, ), 
                                    media = cyperf.models.param_metadata_type_info_media.ParamMetadata_TypeInfo_media(
                                        track_id = '', 
                                        track_type = '', ), 
                                    string = cyperf.models.param_metadata_type_info_string.ParamMetadata_TypeInfo_string(
                                        charset = '', 
                                        max_length = 56, 
                                        min_length = 56, ), ), ), 
                            name = '', 
                            param_id = '', 
                            readonly = True, 
                            source = '', 
                            supported_sources = [
                                ''
                                ], 
                            type = '', 
                            value = '', 
                            file_upload = [
                                'YQ=='
                                ], 
                            id = , 
                            links = [
                                cyperf.models.api_link.APILink(
                                    content_type = '', 
                                    href = '', 
                                    method = '', 
                                    name = '', 
                                    references_count = 56, 
                                    rel = '', 
                                    type = '', )
                                ], 
                            supports_dynamic_payload = True, 
                            upload_url = '', )
                        ], 
                    use_application_server_headers = True, 
                    links = , ),
                server_tls_profile = cyperf.models.tls_profile.TLSProfile(
                    certificate_file = null, 
                    cipher = null, 
                    cipher12 = null, 
                    cipher13 = null, 
                    ciphers12 = [
                        'ECDHE-RSA-AES256-GCM-SHA384'
                        ], 
                    ciphers13 = [
                        'AES-256-GCM-SHA384'
                        ], 
                    dh_file = null, 
                    get_tls_conflicts = [
                        'YQ=='
                        ], 
                    immediate_close = True, 
                    key_file = null, 
                    key_file_password = '', 
                    links = [
                        cyperf.models.api_link.APILink(
                            content_type = '', 
                            href = '', 
                            method = '', 
                            name = '', 
                            references_count = 56, 
                            rel = '', 
                            type = '', )
                        ], 
                    middle_box_enabled = True, 
                    profile_id = '', 
                    resolve_tls_conflicts = [
                        cyperf.models.conflict.Conflict(
                            name = '', 
                            path_to_target = '', 
                            path_vars = {
                                'key' : ''
                                }, )
                        ], 
                    send_close_notify = True, 
                    session_reuse_count = 56, 
                    session_reuse_method = null, 
                    session_reuse_method12 = null, 
                    session_reuse_method13 = null, 
                    sni_cert_configs = [
                        cyperf.models.cert_config.CertConfig(
                            certificate_file = null, 
                            dh_file = null, 
                            get_sni_conflicts = [
                                'YQ=='
                                ], 
                            id = '', 
                            is_playlist = True, 
                            key_file = null, 
                            key_file_password = '', 
                            playlist_column_name = '', 
                            playlist_filename = '', 
                            resolve_sni_conflicts = [
                                cyperf.models.conflict.Conflict(
                                    name = '', 
                                    path_to_target = '', 
                                    path_vars = {
                                        'key' : ''
                                        }, )
                                ], 
                            sni_hostname = '', )
                        ], 
                    sni_enabled = True, 
                    supported_groups13 = [
                        'P-256'
                        ], 
                    tls12_enabled = True, 
                    tls13_enabled = True, 
                    use_tls_profile = True, 
                    version = 'NONE', ),
                server_tcp_profile = cyperf.models.tcp_profile.TcpProfile(
                    close_with_reset = True, 
                    defer_accept = True, 
                    ecn_enabled = True, 
                    max_rto = 56, 
                    max_src_port = 56, 
                    min_rto = 56, 
                    min_src_port = 56, 
                    ping_pong = True, 
                    pmtu_disc_disabled = True, 
                    recycle_tw_enabled = True, 
                    reordering = True, 
                    reuse_tw_enabled = True, 
                    rx_buffer = 56, 
                    sack_enabled = True, 
                    sock_group = '', 
                    timestamp_hdr_enabled = True, 
                    tx_buffer = 56, 
                    user_mss = 56, 
                    wscale_enabled = True, ),
                udp_profile = cyperf.models.udp_profile.UdpProfile(
                    max_src_port = 56, 
                    min_src_port = 56, 
                    recv_buff_size_ini = 56, 
                    recv_buff_size_res = 56, 
                    rx_buffer = 56, 
                    sock_group = '', 
                    tx_buffer = 56, ),
                vlan_prio = 56,
                links = [
                    cyperf.models.api_link.APILink(
                        content_type = '', 
                        href = '', 
                        method = '', 
                        name = '', 
                        references_count = 56, 
                        rel = '', 
                        type = '', )
                    ]
            )
        else:
            return TransportProfileBase(
        )
        """

    def testTransportProfileBase(self):
        """Test TransportProfileBase"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
