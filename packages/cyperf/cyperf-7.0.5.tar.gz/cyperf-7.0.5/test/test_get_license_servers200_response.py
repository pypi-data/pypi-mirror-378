# coding: utf-8

"""
    CyPerf Application API

    CyPerf REST API

    The version of the OpenAPI document: 1.0.0
    Contact: support@keysight.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cyperf.models.get_license_servers200_response import GetLicenseServers200Response

class TestGetLicenseServers200Response(unittest.TestCase):
    """GetLicenseServers200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetLicenseServers200Response:
        """Test GetLicenseServers200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetLicenseServers200Response`
        """
        model = GetLicenseServers200Response()
        if include_optional:
            return GetLicenseServers200Response(
                data = [
                    cyperf.models.license_server_metadata.LicenseServerMetadata(
                        connection_status = '', 
                        failure_reason = '', 
                        fingerprint = '', 
                        host_name = '', 
                        id = 56, 
                        interactive_fingerprint_verification = True, 
                        password = '', 
                        pretty_conn_status = '', 
                        trust_new = True, 
                        tunnel_host_name = '', 
                        user = '', )
                    ],
                total_count = 56
            )
        else:
            return GetLicenseServers200Response(
        )
        """

    def testGetLicenseServers200Response(self):
        """Test GetLicenseServers200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
