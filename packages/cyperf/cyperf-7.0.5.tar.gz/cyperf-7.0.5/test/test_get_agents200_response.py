# coding: utf-8

"""
    CyPerf Application API

    CyPerf REST API

    The version of the OpenAPI document: 1.0.0
    Contact: support@keysight.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cyperf.models.get_agents200_response import GetAgents200Response

class TestGetAgents200Response(unittest.TestCase):
    """GetAgents200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetAgents200Response:
        """Test GetAgents200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetAgents200Response`
        """
        model = GetAgents200Response()
        if include_optional:
            return GetAgents200Response(
                data = [
                    cyperf.models.agent.Agent(
                        agent_tags = [
                            ''
                            ], 
                        ip = '', 
                        interfaces = [
                            cyperf.models.interface.Interface(
                                gateway = '', 
                                ip = [
                                    cyperf.models.ip_mask.IpMask(
                                        net_mask = 56, )
                                    ], 
                                mtu = 56, 
                                mac = '', 
                                name = '', )
                            ], 
                        last_update = 56, 
                        reservation_id = '', 
                        selected_env = cyperf.models.selected_env.SelectedEnv(
                            session_id = '', 
                            test_interface = [
                                cyperf.models.interface.Interface(
                                    gateway = '', 
                                    mtu = 56, 
                                    mac = '', 
                                    name = '', )
                                ], 
                            token = '', ), 
                        selection_status = '', 
                        session_name = '', 
                        status = '', 
                        configured_proxy = '', 
                        cpu_info = [
                            cyperf.models.agent_cpu_info.AgentCPUInfo(
                                cpu_core_count = 56, 
                                cpu_freq_mhz = 1.337, 
                                family = '', 
                                model = '', 
                                model_name = '', 
                                vendor_id = '', )
                            ], 
                        dpdk_enabled = True, 
                        features = cyperf.models.agent_features.AgentFeatures(
                            debian_os = '', 
                            dpdk_usage = '', 
                            update = '', ), 
                        hostname = '', 
                        id = '', 
                        memory_mb = 1.337, 
                        mgmt_interface = , 
                        ntp_info = cyperf.models.ntp_info.NtpInfo(
                            active_server = '', 
                            servers = [
                                ''
                                ], 
                            status = '', ), 
                        offline = True, 
                        owner = '', 
                        owner_id = '', 
                        package_version_status = '', 
                        requires_updating = True, 
                        system_info = cyperf.models.system_info.SystemInfo(
                            chassis_info = cyperf.models.chassis_info.ChassisInfo(
                                checkout_id = 56, 
                                compute_node_id = '', 
                                port_id = '', ), 
                            kernel_version = '', 
                            os_name = '', 
                            port_manager_version = '', 
                            traffic_agent_info = [
                                cyperf.models.traffic_agent_info.TrafficAgentInfo(
                                    type = '', 
                                    version = '', )
                                ], ), 
                        links = [
                            cyperf.models.api_link.APILink(
                                content_type = '', 
                                href = '', 
                                method = '', 
                                name = '', 
                                references_count = 56, 
                                rel = '', 
                                type = '', )
                            ], )
                    ],
                total_count = 56
            )
        else:
            return GetAgents200Response(
        )
        """

    def testGetAgents200Response(self):
        """Test GetAgents200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
