# coding: utf-8

"""
    CyPerf Application API

    CyPerf REST API

    The version of the OpenAPI document: 1.0.0
    Contact: support@keysight.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cyperf.models.get_async_operation_result200_response import GetAsyncOperationResult200Response

class TestGetAsyncOperationResult200Response(unittest.TestCase):
    """GetAsyncOperationResult200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetAsyncOperationResult200Response:
        """Test GetAsyncOperationResult200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetAsyncOperationResult200Response`
        """
        model = GetAsyncOperationResult200Response()
        if include_optional:
            return GetAsyncOperationResult200Response(
                activation_codes = [
                    cyperf.models.activation_code_info.activation-code-info(
                        activation_code = '', 
                        available_quantity = 56, 
                        description = '', 
                        product = '', 
                        total_quantity = 56, )
                    ],
                entitlement_code = '',
                activation_code = '',
                available_quantity = 56,
                description = '',
                product = '',
                total_quantity = 56,
                available_count = 56,
                consumers = [
                    cyperf.models.counted_feature_consumer.counted-feature-consumer(
                        app = '', 
                        client = '', 
                        consumed_count = 56, 
                        reserved_count = 56, 
                        reserved_remaining_duration = 56, 
                        user = '', )
                    ],
                feature_name = '',
                installed_count = 56
            )
        else:
            return GetAsyncOperationResult200Response(
                activation_codes = [
                    cyperf.models.activation_code_info.activation-code-info(
                        activation_code = '', 
                        available_quantity = 56, 
                        description = '', 
                        product = '', 
                        total_quantity = 56, )
                    ],
                entitlement_code = '',
                activation_code = '',
                available_quantity = 56,
                description = '',
                product = '',
                total_quantity = 56,
                available_count = 56,
                consumers = [
                    cyperf.models.counted_feature_consumer.counted-feature-consumer(
                        app = '', 
                        client = '', 
                        consumed_count = 56, 
                        reserved_count = 56, 
                        reserved_remaining_duration = 56, 
                        user = '', )
                    ],
                feature_name = '',
                installed_count = 56,
        )
        """

    def testGetAsyncOperationResult200Response(self):
        """Test GetAsyncOperationResult200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
