# coding: utf-8

"""
    CyPerf Application API

    CyPerf REST API

    The version of the OpenAPI document: 1.0.0
    Contact: support@keysight.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cyperf.models.appsec_attack import AppsecAttack

class TestAppsecAttack(unittest.TestCase):
    """AppsecAttack unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppsecAttack:
        """Test AppsecAttack
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppsecAttack`
        """
        model = AppsecAttack()
        if include_optional:
            return AppsecAttack(
                attack = None,
                description = '',
                metadata = cyperf.models.attack_metadata.AttackMetadata(
                    cve_count = 56, 
                    direction = '', 
                    keywords = [
                        null
                        ], 
                    legacy_names = [
                        ''
                        ], 
                    references = [
                        cyperf.models.reference.Reference(
                            type = '', 
                            value = '', )
                        ], 
                    severity = '', 
                    strikes_count = 56, ),
                name = '',
                id = '',
                links = [
                    cyperf.models.api_link.APILink(
                        content_type = '', 
                        href = '', 
                        method = '', 
                        name = '', 
                        references_count = 56, 
                        rel = '', 
                        type = '', )
                    ],
                owner = '',
                owner_id = ''
            )
        else:
            return AppsecAttack(
        )
        """

    def testAppsecAttack(self):
        """Test AppsecAttack"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
