[build-system]
requires = [
    "scikit-build-core>=0.5.0",
    "pybind11[global]>=2.10.0,<2.12.0; python_version<'3.9'",
    "pybind11[global]>=2.10.0; python_version>='3.9'", 
    "numpy>=1.21.0",
    "setuptools_scm",
]
build-backend = "scikit_build_core.build"

[project]
name = "dicube"
dynamic = ["version"]
description = "Medical Image Storage Library with DICOM compatibility"
readme = "README.md"
authors = [{name = "Fangzhou Liao"}]
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "numpy>=1.21.0",
    "pydicom>=2.3.0",
    "zstandard>=0.18.0",
    "spacetransformer-core>=0.2.6",
]

[project.optional-dependencies]
jph = [
    "pybind11>=2.10.0,<2.12.0; python_version<'3.9'",
    "pybind11>=2.10.0; python_version>='3.9'"
]
nifti = ["nibabel>=3.2.0"]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "build>=0.8.0",
    "pylibjpeg>=2.0",
    "pylibjpeg-openjpeg>=2.0",
    "nibabel>=3.2.0", 
]
all = [
    "pybind11>=2.10.0,<2.12.0; python_version<'3.9'",
    "pybind11>=2.10.0; python_version>='3.9'", 
    "nibabel>=3.2.0"
]

[project.urls]
"Homepage" = "https://github.com/fastdiag-toolbox/dicube"
"Bug Reports" = "https://github.com/fastdiag-toolbox/dicube/issues"
"Source" = "https://github.com/fastdiag-toolbox/dicube"

[tool.scikit-build]
cmake.build-type = "Release"
build.verbose = true
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"

sdist.include = [
    "openjph/**/*",
    "dicube/**/*", 
    "CMakeLists.txt",
    "build_scripts/*",
]

sdist.exclude = [
    "testdata/**/*",
]

# wheel包只需包含Python代码和编译好的扩展模块
wheel.exclude = [
    # 排除所有C++源码
    "dicube/**/*.cpp",
    "dicube/**/*.h",
    # 排除测试数据
    "testdata/**/*",
    # 排除构建文件
    "openjph/**/*",
    "CMakeLists.txt",
    "build_scripts/*",
]

cmake.args = [
    "-DOPENJPH_BUILD_STATIC=ON",
    "-DDICUBE_BUILD_PYTHON_EXTENSIONS=ON",
    "-DCMAKE_BUILD_TYPE=Release",
]

[tool.scikit-build.cmake.define]
"OPENJPH_BUILD_STATIC" = "ON"
"DICUBE_BUILD_PYTHON_EXTENSIONS" = "ON"

[tool.scikit-build.wheel.packages]
"dicube" = "dicube"

[tool.scikit-build.wheel.install-dir]
"*.pyd" = "dicube/codecs/jph"
"*.so" = "dicube/codecs/jph"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "ignore:builtin type SwigPy.*has no __module__ attribute:DeprecationWarning",
    "ignore:builtin type swigvarlink has no __module__ attribute:DeprecationWarning",
]

[tool.setuptools_scm]
version_scheme = "no-guess-dev"
local_scheme = "no-local-version" 