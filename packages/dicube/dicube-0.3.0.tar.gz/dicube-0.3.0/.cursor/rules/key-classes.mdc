---
description: Key classes and interfaces in the DiCube library
---
# Key Classes and Interfaces

## DicomCubeImage
Main interface for medical image handling, defined in [dicube/core/image.py](mdc:dicube/core/image.py)

```python
import dicube

# Create from DICOM directory
image = dicube.load_from_dicom_folder(\"path/to/dicom/\")

# Save to compressed format 
dicube.save(image, \"output.dcbs\", file_type=\"s\")  # HTJ2K (Speed format)

# Load from file
loaded_image = dicube.load(\"output.dcbs\")

# Get pixel data
pixel_data = image.get_fdata()  # Returns float array
raw_data = image.raw_image       # Returns original dtype
```

## DicomMeta
DICOM metadata container with efficient shared/non-shared value handling:
Defined in [dicube/dicom/dicom_meta.py](mdc:dicube/dicom/dicom_meta.py)

```python
from dicube import DicomMeta, read_dicom_dir

# Read DICOM directory
meta = read_dicom_dir(\"dicom_folder/\")

# Access shared values (same across all slices)
patient_name = meta.get(\"PatientName\")  # Returns single value

# Access non-shared values (different per slice)
positions = meta.get(\"ImagePositionPatient\")  # Returns list
```

## DicomStatus
DICOM consistency checking provided in [dicube/dicom/dicom_status.py](mdc:dicube/dicom/dicom_status.py)

```python
from dicube import DicomStatus, get_dicom_status

status = get_dicom_status(meta)
```

Common status values include: `CONSISTENT`, `MISSING_SERIES_UID`, `DUPLICATE_INSTANCE_NUMBERS`, `NON_UNIFORM_SPACING`, etc.
