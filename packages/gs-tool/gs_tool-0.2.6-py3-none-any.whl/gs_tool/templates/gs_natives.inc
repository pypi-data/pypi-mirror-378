const CANIdType: {CAN11bit=0, CAN29bit=1}

#define CANMSG[.id, CANIdType:.idType, .dataSize, .data{64}]

#define BTMSG[.mac{6}, .rssi, .dataSize, .data{32}]

#define BTPARAMS[.mac{6}, .uuid16, .uuid{16}]

native Diagnostics(const message[], ...) = -1;
native Delay(const value) = -2;
native DisablePulseCounting(const inputNum, const disabled) = -3;
native NullInput(const inputNum) = -4;
native SetOutputValue(const outputNum, const value) = -5;
native SavePoint(const value) = -6;
native GetVar(const name[]) = -7;
native SetVar(const name[], const value) = -8;
native PortInit(const index, const speed, const bufSize, const stopBits = 0, const parity = 0, const packetMode = 0, const dataBits = 8) = -9;
native PortRead(const index, &char, const timeout) = -10;
native PortWrite(const index, const buf[], const size) = -11;
native TagWriteValue(const index, const value) = -12;
native TagWriteArray(const index, const size, const buf[]) = -13;
native CRC16(const buf[], const size, const crcinit = 0xFFFF) = -14;
native CRC8(const crcInit, const buf[], const size) = -15;
native SendAnswer(const connectionId, const commandIndex, const answerBuf[], const answerSize, const dataBuf[], const dataSize) = -16;
native CRC8_D5(const buf[], const size) = -17;
native DiagnosticsHex(const buf[], const size) = -18;
native getIntFromBuf(const buf{}, const index) = -19;
native swapBuf(buf{}, const size) = -20;
//native min(const value1, const value2) = -21;
native FileSize(const filename[]) = -22;
native FileRead(const filename[], buf[], const bufSize, const offset = 0) = -23;
native FileWrite(const filename[], const buf[], const bufSize, const offset = -1) = -24;
native FileDelete(const filename[]) = -25;
native PortReadPackage(const index, buf[], const bufSize, const firstByteTimeout, const nextByteTimeout) = -26;
native PlayAudio(const filename[]) = -27;
native NewPhoto(const filename[]) = -28;
native InZone(const lat, const lon, const angle, const delta, const radExt, const radInt) = -29;
native NextDir(const rootDir[], const lastDir[], res[], const resSize) = -30;
native GetIMEI(res[], const resSize) = -31;
native setAutoinformerRoute(Dir[]) = -32;
native GetUnsentPackets() = -33;
native ExecCommand(Cmd[]) = -34;
native CANInit(speed, active, const port = 0, const canFd = 0, const baudrateFd = 0, const brs = 0, const esi = 0) = -35;
native CANEnableReception(enable, const port = 0) = -36;
native CANSetFilter(id, mask, type, const port = 0) = -37;
native CANSend(const msg[CANMSG], const port = 0, const isFd = 0) = -38;
native CANReceive(msg[CANMSG], const port = 0, const isFd = 0) = -39;
native GetBinaryDataFromCommand(buf[], const bufSize) = -40;
native DDDErase_Dummy() = -41;
native DDDRead_Dummy() = -42;
native DDDWrite_Dummy() = -43;
native NextFile(const rootDir[], const lastFile[], res[], const resSize) = -44;
native ZipFile(const fileName[], const zipName[], const compressionLevel) = -45;
native SocketOpen(const address[], const port, const timeout, const protocol, const useSSL) = -46;
native SocketSend(const src[], const bytesToSend, &bytesSent, const timeout) = -47;
native SocketRecv(dest[], const bufSize, &bytesRcvd, const timeout) = -48;
native SocketClose() = -49;
native SetCoordinates(const lat, const lon, const datetime = 0, const height = 0, const speed = 0, const course = 0) = -50;
native SemaphoreTake(const index, const timeout) = -51;
native SemaphoreGive(const index) = -52;
native Rand(const min, const max) = -53;
native SetFlagOfInvalidCoordinates(const enable) = -54;
native BTInit(const amountDev, const devMacs[]{6}) = -55;
native BTReceive(msg[BTMSG], const timeout) = -56;
native RAMErase() = -57;
native RAMRead(const offset, &value) = -58;
native RAMWrite(const offset, const value) = -59;
native ROMDelete(const key) = -60;
native ROMRead(const key, buf[], const bufSize) = -61;
native ROMWrite(const key, const buf[], const size) = -62;
native ROMErase() = -63;
native IridiumEnable(const enable) = -64;
native IridiumELMode(const enable) = -65;
native IridiumReceive(buf[], const size, const timeout) = -66;
native IridiumTransmit(const buf[], const size) = -67;
native IridiumGetCntMsgToTransmit() = -68;
native SetLed(const red, const green, const blue, const blinkCount, const onTime, const offTime, const repeat) = -69;
native RegularLedEnable(const enable) = -70;
native TagWriteValue64(const index, const buf[]) = -71;
native IridiumGetMtmsn() = -72;
native IridiumGetMomsn() = -73;
native ServerMaxConnections() = -74;
native ServerGetHandle(const index) = -75;
native ServerSocketOccupy(const port) = -76;
native ServerSocketRelease() = -77;
native ServerSocketSend(const handle, const src[], const bytesToSend, &bytesSent) = -78;
native ServerSocketRecv(const handle, dest[], const bufSize, &bytesRcvd, const timeout) = -79;
native ServerSocketClose(const handle) = -80;
native BTConnectTo(const mac{6}, const timeout = 120000) = -81;
native BTDisconnectFrom(const mac{6}) = -82;
native BTReadChar(msg[BTPARAMS], const pData[], const maxDataLen) = -83;
native BTWriteChar(msg[BTPARAMS], const pData[], const dataLen, const withResponseType = false) = -84;
native BTNotifySize(msg[BTPARAMS], const timeout) = -85;
native BTNotifyRetrieve(msg[BTPARAMS], pData[], const maxLen, const timeout) = -86;
native BTSubscribe(msg[BTPARAMS], const queueSize = 3, const subCode = 0x0003) = -87;
native BTUnsubscribe(msg[BTPARAMS]) = -88;
native AESCrypt(const pData[], const len, const key[], output[]) = -89;
native AESDecrypt(const pData[], const len, const key[], output[]) = -90;
native BTGetCharsAmount(const mac{6}, &amount) = -91;
native BTGetChar(msg[BTPARAMS], const num) = -92;
native ChargerEnable(const enable) = -93;
native GetUserArray(buf[], const bufSize, const userArrayPos) = -94;
native TagWriteBegin() = -95;
native TagWriteEnd() = -96;
native GetStringVar(const name[], destination{}, const size) = -97;
native Base64Encode(const binData{}, const binDataSize, const stringBuff{}, const stringBuffSize) = -98;
native Base64Decode(const stringBuff{}, const stringBuffSize, const binData{}, const binDataSize) = -99;
native MeshInit() = -100;
native MeshSend(const destAmount, const destAddrs{}, const bufWrite{}, const bufWriteSize) = -101;
native MeshReceive(&sourceAddr, recBuf{}, const recBufSize, &rssi, const timeout) = -102;
native MeshMsgSize(const timeout) = -103;
native MeshSetConfig(const key{16}, const loraConfig, const rfPower) = -104;
native TagProtoRead(const tagId, buf{}, const size) = -105;
native SetStringVar(const name[], const value[]) = -106;
native Unzip(const zipName[], const dirName[], const fileNameInZip[] = "") = -107;
native Unpack(const gszName[], const outName[]) = -108;
native XTEACrypt(buf{16}, const key{32}) = -109;
native XTEADecrypt(buf{16}, const key{32}) = -110;
native NewMeta(const name[], const uuid[], &metaDesc) = -111;
native MetaAddField(const metaDesc, const name[], const type, const repeated = false,  ...) = -112;
native ArchiveRegisterClient(const metaDesc, &clientId) = -113;
native ArchiveUnregisterClient(const clientId, const uuid[]) = -114;
native ArchiveClientIsRegistered(const uuid[], &clientId) = -115;
native ArchiveWriteData(const clientId, ...) = -116;
native ArchiveWriteDateTimeAndData(const clientId, const dateTime, const msec, ...) = -117;
native Subscribe(const uuid[], const path[], const func[]) = -118;
native Unsubscribe(const uuid[], const path[], const func[]) = -119;
native CallRequest(const path[], const targetFunction[], const successCallback[], const failureCallback[], ...) = -120;
native CallResponse(const success, ...) = -121;
native RegisterSignature(const func[], const numArgs, const args[]) = -122;
native SetTimer(const requestId, const func[], const timeout, const bool:autoReload = false) = -123;
native GetSysVar(const name[]) = -124;
native GetSysStringVar(const name[], destination{}, const size) = -125;
native ConfigNewMeta(const name[], &metaDesc)= -126;
native ConfigMetaAddField(const metaDesc, const name[], const type, const repeated,  ...)= -127;
native ConfigGet(const name[], ...) = -128;
native ConfigSet (const name[], ...) = -129;
native ConfigDelete()= -130;
native AddOrUpdateConfig(const metaDesc) = -131;