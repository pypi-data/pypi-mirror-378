# AIDEV-NOTE: DevContainer postgres runs separately, not with direct mounts
# AIDEV-NOTE: Use rebuild_extension_simple.sh for quick rebuilds (copy-and-build approach)

services:
  dev:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
      cache_from:
        - type=local,src=/tmp/.buildx-cache
      cache_to:
        - type=local,dest=/tmp/.buildx-cache,mode=max
    volumes:
      - ..:/workspace:cached
    command: sleep infinity
    networks:
      - default
    environment:
      - DEBIAN_FRONTEND=noninteractive
      - COMPOSE_DOCKER_CLI_BUILD=1
      - DOCKER_BUILDKIT=1

  postgres:
    build:
      context: ../pg_steadytext
      dockerfile: Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    container_name: pg_steadytext_db
    command: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
      STEADYTEXT_GENERATION_CACHE_CAPACITY: "512"
      STEADYTEXT_GENERATION_CACHE_MAX_SIZE_MB: "100.0"
      STEADYTEXT_EMBEDDING_CACHE_CAPACITY: "1024"
      STEADYTEXT_EMBEDDING_CACHE_MAX_SIZE_MB: "200.0"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - steadytext_cache:/root/.cache/steadytext
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default
    env_file:
      - ../.env

volumes:
  postgres_data:
  steadytext_cache:

networks:
  default:
    driver: bridge 