[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "steadytext"
version = "2025.9.21"
description = "Deterministic text generation and embedding with zero configuration"
readme = "README.md"
authors = [
  { name="SteadyText Community", email="singh@diwank.name" },
]
license = { file="LICENSE" }
requires-python = ">=3.10,<3.14"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

dependencies = [
    "llama-cpp-python>=0.3.16",
    "numpy>=1.21.0",
    "huggingface-hub>=0.32.0",
    "requests>=2.32.5",
    "tqdm>=4",
    "click>=8.0.0",
    "chonkie>=0.2.1",
    "faiss-cpu>=1.7.0",
    "pyzmq>=22.0.0",
    "pydantic>=2.11.7",
    "httpx>=0.27.2",
    "tomli>=2.2.0",
    "tomli-w>=1.2.0",
    "openai>=1.102.0",
    "voyageai>=0.3.4",
]

[tool.hatch.build.targets.sdist]
exclude = ["**/.env", ".env"]

[tool.hatch.build.targets.wheel]
artifacts = ["**/.env", ".env"]

[tool.hatch.metadata]
allow-direct-references = true

[project.urls]
"Homepage" = "https://github.com/julep-ai/steadytext"
"Bug Tracker" = "https://github.com/julep-ai/steadytext/issues"

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-xdist",
]
benchmark = [
    "psutil",
    "tabulate",
    "matplotlib",
    "pandas",
    # "lighteval",
]

[project.scripts]
steadytext = "steadytext.cli:main"
st = "steadytext.cli:main"

[tool.poe.tasks]
# AIDEV-NOTE: Tests use mini models by default for fast CI/testing
test = { cmd = "pytest", env = { STEADYTEXT_USE_MINI_MODELS = "true", STEADYTEXT_ALLOW_MODEL_DOWNLOADS = "true" } }
test-cov = { cmd = "pytest --cov=steadytext --cov-report=term-missing --cov-report=html --cov-report=xml", env = { STEADYTEXT_USE_MINI_MODELS = "true", STEADYTEXT_ALLOW_MODEL_DOWNLOADS = "true" } }
test-parallel = { cmd = "pytest -p no:xdist", env = { STEADYTEXT_USE_MINI_MODELS = "true", STEADYTEXT_ALLOW_MODEL_DOWNLOADS = "true" } }
# Test with full models (not mini)
test-full = "pytest"
lint = "ruff check --fix --unsafe-fixes"
format = "ruff format"
typecheck = "ty check"
pre-commit = "pre-commit run --all-files"
docs-build = "mkdocs build"
docs-serve = "mkdocs serve"
docs-deploy = "mkdocs gh-deploy"
check = [
  "format",
  "lint",
  "typecheck"
]
build = [
  "format",
  "lint",
  "typecheck",
  "test-parallel",
  "docs-build",
]


[dependency-groups]
dev = [
    "ruff>=0.12.8",
    "ty>=0.0.1a17",
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "pytest-testmon>=2.1.3",
    "pytest-fast-first>=1.0.5",
    "pytest-sugar>=1.0.0",
    # "pytest-watcher>=0.4.3",
    "pytest-mock>=3.14.1",
    "pre-commit",
    "poethepoet",
    # "ipython>=8.37.0",
    "pip>=25.1.1",
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",
    "psutil>=7.0.0",
    "tabulate>=0.9.0",
    "numpy>=1.26.4",
    "matplotlib>=3.10.3",
    "pandas>=2.3.0",
    # "lighteval>=0.10.0",
    "pydantic>=2.11.7",
    "setuptools>=80.9.0",
]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
norecursedirs = ["docs", "*.egg-info", ".git", ".tox", ".pytype", ".venv"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]
markers = [
    "slow: marks tests that require model loading (deselect with '-m \"not slow\"')",
    "fast: marks tests that use fallback behavior only",
    "model_required: marks tests that require actual models to be loaded",
    "concurrent: marks tests that use internal concurrency (threads/processes) - should not run in parallel",
]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--disable-warnings",
]

[tool.ty.src]
exclude = [
    "examples/",
    "benchmarks/",
]

[tool.ty.rules]
unused-ignore-comment = "ignore"
redundant-cast = "ignore"
possibly-unbound-attribute = "ignore"   # TODO: Change to "error"
possibly-unbound-import = "ignore"      # TODO: Change to "error"
