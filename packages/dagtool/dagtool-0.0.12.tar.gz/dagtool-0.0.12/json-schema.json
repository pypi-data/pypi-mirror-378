{
  "$defs": {
    "BashTask": {
      "description": "Bash Task model.",
      "properties": {
        "desc": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A Airflow task description that will pass to the `doc` argument.",
          "title": "Desc"
        },
        "upstream": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "description": "A list of upstream task name or only task name of this task.",
          "title": "Upstream"
        },
        "task": {
          "description": "A task name.",
          "title": "Task",
          "type": "string"
        },
        "type": {
          "const": "task",
          "default": "task",
          "description": "A task type.",
          "title": "Type",
          "type": "string"
        },
        "uses": {
          "const": "bash",
          "description": "An tool type for bash model.",
          "title": "Uses",
          "type": "string"
        },
        "trigger_rule": {
          "$ref": "#/$defs/TriggerRule",
          "default": "all_success",
          "description": "Task trigger rule. Read more detail, https://www.astronomer.io/blog/understanding-airflow-trigger-rules-comprehensive-visual-guide/"
        },
        "owner": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An owner name.",
          "title": "Owner"
        },
        "email": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the 'to' email address(es) used in email alerts. This can be a single email or multiple ones. Multiple addresses can be specified as a comma or semicolon separated string or by passing a list of strings.",
          "title": "Email"
        },
        "email_on_failure": {
          "description": "Indicates whether email alerts should be sent when a task failed",
          "title": "Email On Failure",
          "type": "boolean"
        },
        "email_on_retry": {
          "title": "Email On Retry",
          "type": "boolean"
        },
        "depends_on_past": {
          "default": false,
          "title": "Depends On Past",
          "type": "boolean"
        },
        "pool": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the slot pool this task should run in, slot pools are a way to limit concurrency for certain tasks.",
          "title": "Pool"
        },
        "pool_slots": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the number of pool slots this task should use (>= 1) Values less than 1 are not allowed.",
          "title": "Pool Slots"
        },
        "retries": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A retry count.",
          "title": "Retries"
        },
        "retry_delay": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "integer"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Retry Delay"
        },
        "retry_exponential_backoff": {
          "default": false,
          "title": "Retry Exponential Backoff",
          "type": "boolean"
        },
        "executor_config": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Executor Config"
        },
        "inlets": {
          "description": "A list of inlets or inlet value.",
          "items": {
            "$ref": "#/$defs/Dataset"
          },
          "title": "Inlets",
          "type": "array"
        },
        "outlets": {
          "description": "A list of outlets or outlet value.",
          "items": {
            "$ref": "#/$defs/Dataset"
          },
          "title": "Outlets",
          "type": "array"
        },
        "command": {
          "description": "A bash command or bash file",
          "title": "Command",
          "type": "string"
        },
        "env": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A mapping of environment variable.",
          "title": "Env"
        },
        "append_env": {
          "default": false,
          "title": "Append Env",
          "type": "boolean"
        },
        "output_encoding": {
          "default": "utf-8",
          "description": "Output encoding of bash command.",
          "title": "Output Encoding",
          "type": "string"
        },
        "skip_on_exit_code": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": 99,
          "title": "Skip On Exit Code"
        },
        "cwd": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cwd"
        }
      },
      "required": [
        "task",
        "uses",
        "command"
      ],
      "title": "BashTask",
      "type": "object"
    },
    "CustomToolTask": {
      "description": "Custom Task model.",
      "properties": {
        "desc": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A Airflow task description that will pass to the `doc` argument.",
          "title": "Desc"
        },
        "upstream": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "description": "A list of upstream task name or only task name of this task.",
          "title": "Upstream"
        },
        "task": {
          "description": "A task name.",
          "title": "Task",
          "type": "string"
        },
        "type": {
          "const": "task",
          "default": "task",
          "description": "A task type.",
          "title": "Type",
          "type": "string"
        },
        "uses": {
          "const": "custom_tool",
          "description": "A custom tool type.",
          "title": "Uses",
          "type": "string"
        },
        "trigger_rule": {
          "$ref": "#/$defs/TriggerRule",
          "default": "all_success",
          "description": "Task trigger rule. Read more detail, https://www.astronomer.io/blog/understanding-airflow-trigger-rules-comprehensive-visual-guide/"
        },
        "owner": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An owner name.",
          "title": "Owner"
        },
        "email": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the 'to' email address(es) used in email alerts. This can be a single email or multiple ones. Multiple addresses can be specified as a comma or semicolon separated string or by passing a list of strings.",
          "title": "Email"
        },
        "email_on_failure": {
          "description": "Indicates whether email alerts should be sent when a task failed",
          "title": "Email On Failure",
          "type": "boolean"
        },
        "email_on_retry": {
          "title": "Email On Retry",
          "type": "boolean"
        },
        "depends_on_past": {
          "default": false,
          "title": "Depends On Past",
          "type": "boolean"
        },
        "pool": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the slot pool this task should run in, slot pools are a way to limit concurrency for certain tasks.",
          "title": "Pool"
        },
        "pool_slots": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the number of pool slots this task should use (>= 1) Values less than 1 are not allowed.",
          "title": "Pool Slots"
        },
        "retries": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A retry count.",
          "title": "Retries"
        },
        "retry_delay": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "integer"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Retry Delay"
        },
        "retry_exponential_backoff": {
          "default": false,
          "title": "Retry Exponential Backoff",
          "type": "boolean"
        },
        "executor_config": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Executor Config"
        },
        "inlets": {
          "description": "A list of inlets or inlet value.",
          "items": {
            "$ref": "#/$defs/Dataset"
          },
          "title": "Inlets",
          "type": "array"
        },
        "outlets": {
          "description": "A list of outlets or outlet value.",
          "items": {
            "$ref": "#/$defs/Dataset"
          },
          "title": "Outlets",
          "type": "array"
        },
        "name": {
          "description": "A custom tool name.",
          "title": "Name",
          "type": "string"
        },
        "params": {
          "additionalProperties": true,
          "description": "A mapping of parameters that want to pass to Custom Task model before build.",
          "title": "Params",
          "type": "object"
        }
      },
      "required": [
        "task",
        "uses",
        "name"
      ],
      "title": "CustomToolTask",
      "type": "object"
    },
    "Dataset": {
      "description": "DataHub Dataset model.",
      "properties": {
        "platform": {
          "description": "A platform type.",
          "enum": [
            "hive",
            "gcs",
            "hdfs",
            "hana",
            "iceberg",
            "s3",
            "kafka",
            "kafka_connect",
            "mongodb",
            "mysql",
            "openapi",
            "postgres",
            "oracle",
            "tableau",
            "mssql",
            "bigquery",
            "druid",
            "file"
          ],
          "title": "Platform",
          "type": "string"
        },
        "name": {
          "description": "An entity name.",
          "title": "Name",
          "type": "string"
        },
        "platform_instance": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Platform Instance"
        }
      },
      "required": [
        "platform",
        "name"
      ],
      "title": "Dataset",
      "type": "object"
    },
    "DebugTask": {
      "description": "Debug Task model.",
      "properties": {
        "desc": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A Airflow task description that will pass to the `doc` argument.",
          "title": "Desc"
        },
        "upstream": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "description": "A list of upstream task name or only task name of this task.",
          "title": "Upstream"
        },
        "task": {
          "description": "A task name.",
          "title": "Task",
          "type": "string"
        },
        "type": {
          "const": "task",
          "default": "task",
          "description": "A task type.",
          "title": "Type",
          "type": "string"
        },
        "uses": {
          "const": "debug",
          "description": "A debug task name.",
          "title": "Uses",
          "type": "string"
        },
        "trigger_rule": {
          "$ref": "#/$defs/TriggerRule",
          "default": "all_success",
          "description": "Task trigger rule. Read more detail, https://www.astronomer.io/blog/understanding-airflow-trigger-rules-comprehensive-visual-guide/"
        },
        "owner": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An owner name.",
          "title": "Owner"
        },
        "email": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the 'to' email address(es) used in email alerts. This can be a single email or multiple ones. Multiple addresses can be specified as a comma or semicolon separated string or by passing a list of strings.",
          "title": "Email"
        },
        "email_on_failure": {
          "description": "Indicates whether email alerts should be sent when a task failed",
          "title": "Email On Failure",
          "type": "boolean"
        },
        "email_on_retry": {
          "title": "Email On Retry",
          "type": "boolean"
        },
        "depends_on_past": {
          "default": false,
          "title": "Depends On Past",
          "type": "boolean"
        },
        "pool": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the slot pool this task should run in, slot pools are a way to limit concurrency for certain tasks.",
          "title": "Pool"
        },
        "pool_slots": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the number of pool slots this task should use (>= 1) Values less than 1 are not allowed.",
          "title": "Pool Slots"
        },
        "retries": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A retry count.",
          "title": "Retries"
        },
        "retry_delay": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "integer"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Retry Delay"
        },
        "retry_exponential_backoff": {
          "default": false,
          "title": "Retry Exponential Backoff",
          "type": "boolean"
        },
        "executor_config": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Executor Config"
        },
        "inlets": {
          "description": "A list of inlets or inlet value.",
          "items": {
            "$ref": "#/$defs/Dataset"
          },
          "title": "Inlets",
          "type": "array"
        },
        "outlets": {
          "description": "A list of outlets or outlet value.",
          "items": {
            "$ref": "#/$defs/Dataset"
          },
          "title": "Outlets",
          "type": "array"
        },
        "params": {
          "additionalProperties": true,
          "description": "A parameters that want to logging.",
          "title": "Params",
          "type": "object"
        }
      },
      "required": [
        "task",
        "uses"
      ],
      "title": "DebugTask",
      "type": "object"
    },
    "DefaultArgs": {
      "description": "Default Args Model that will use with the `default_args` field with the\nAirflow DAG object. These field reference arguments from the BaseOperator\nobject.",
      "properties": {
        "owner": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An owner name.",
          "title": "Owner"
        },
        "depends_on_past": {
          "default": false,
          "description": "",
          "title": "Depends On Past",
          "type": "boolean"
        },
        "start_date": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Start Date"
        },
        "end_date": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "End Date"
        },
        "email": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the 'to' email address(es) used in email alerts. This can be a single email or multiple ones. Multiple addresses can be specified as a comma or semicolon separated string or by passing a list of strings.",
          "title": "Email"
        },
        "email_on_failure": {
          "description": "Indicates whether email alerts should be sent when a task failed",
          "title": "Email On Failure",
          "type": "boolean"
        },
        "email_on_retry": {
          "title": "Email On Retry",
          "type": "boolean"
        },
        "retries": {
          "description": "A retry count number.",
          "title": "Retries",
          "type": "integer"
        },
        "retry_delay": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "integer"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "description": "A retry time delay before start the next retry process.",
          "title": "Retry Delay"
        },
        "retry_exponential_backoff": {
          "default": false,
          "description": "allow progressively longer waits between retries by using exponential backoff algorithm on retry delay (delay will be converted into seconds).",
          "title": "Retry Exponential Backoff",
          "type": "boolean"
        },
        "max_retry_delay": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Max Retry Delay"
        },
        "trigger_rule": {
          "$ref": "#/$defs/TriggerRule",
          "default": "all_success",
          "description": "Task trigger rule. Read more detail, https://www.astronomer.io/blog/understanding-airflow-trigger-rules-comprehensive-visual-guide/"
        },
        "sla": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sla"
        },
        "do_xcom_push": {
          "default": true,
          "title": "Do Xcom Push",
          "type": "boolean"
        }
      },
      "title": "DefaultArgs",
      "type": "object"
    },
    "EmptyTask": {
      "description": "Empty Task model.\n\nThis task model will build the Airflow EmptyOperator instance only.",
      "properties": {
        "desc": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A Airflow task description that will pass to the `doc` argument.",
          "title": "Desc"
        },
        "upstream": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "description": "A list of upstream task name or only task name of this task.",
          "title": "Upstream"
        },
        "task": {
          "description": "A task name.",
          "title": "Task",
          "type": "string"
        },
        "type": {
          "const": "task",
          "default": "task",
          "description": "A task type.",
          "title": "Type",
          "type": "string"
        },
        "uses": {
          "const": "empty",
          "description": "An empty task name.",
          "title": "Uses",
          "type": "string"
        },
        "trigger_rule": {
          "$ref": "#/$defs/TriggerRule",
          "default": "all_success",
          "description": "Task trigger rule. Read more detail, https://www.astronomer.io/blog/understanding-airflow-trigger-rules-comprehensive-visual-guide/"
        },
        "owner": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An owner name.",
          "title": "Owner"
        },
        "email": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the 'to' email address(es) used in email alerts. This can be a single email or multiple ones. Multiple addresses can be specified as a comma or semicolon separated string or by passing a list of strings.",
          "title": "Email"
        },
        "email_on_failure": {
          "description": "Indicates whether email alerts should be sent when a task failed",
          "title": "Email On Failure",
          "type": "boolean"
        },
        "email_on_retry": {
          "title": "Email On Retry",
          "type": "boolean"
        },
        "depends_on_past": {
          "default": false,
          "title": "Depends On Past",
          "type": "boolean"
        },
        "pool": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the slot pool this task should run in, slot pools are a way to limit concurrency for certain tasks.",
          "title": "Pool"
        },
        "pool_slots": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the number of pool slots this task should use (>= 1) Values less than 1 are not allowed.",
          "title": "Pool Slots"
        },
        "retries": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A retry count.",
          "title": "Retries"
        },
        "retry_delay": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "integer"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Retry Delay"
        },
        "retry_exponential_backoff": {
          "default": false,
          "title": "Retry Exponential Backoff",
          "type": "boolean"
        },
        "executor_config": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Executor Config"
        },
        "inlets": {
          "description": "A list of inlets or inlet value.",
          "items": {
            "$ref": "#/$defs/Dataset"
          },
          "title": "Inlets",
          "type": "array"
        },
        "outlets": {
          "description": "A list of outlets or outlet value.",
          "items": {
            "$ref": "#/$defs/Dataset"
          },
          "title": "Outlets",
          "type": "array"
        }
      },
      "required": [
        "task",
        "uses"
      ],
      "title": "EmptyTask",
      "type": "object"
    },
    "OperatorTask": {
      "description": "Operator Task model.",
      "properties": {
        "desc": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A Airflow task description that will pass to the `doc` argument.",
          "title": "Desc"
        },
        "upstream": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "description": "A list of upstream task name or only task name of this task.",
          "title": "Upstream"
        },
        "task": {
          "description": "A task name.",
          "title": "Task",
          "type": "string"
        },
        "type": {
          "const": "task",
          "default": "task",
          "description": "A task type.",
          "title": "Type",
          "type": "string"
        },
        "uses": {
          "const": "operator",
          "description": "An operator task name.",
          "title": "Uses",
          "type": "string"
        },
        "trigger_rule": {
          "$ref": "#/$defs/TriggerRule",
          "default": "all_success",
          "description": "Task trigger rule. Read more detail, https://www.astronomer.io/blog/understanding-airflow-trigger-rules-comprehensive-visual-guide/"
        },
        "owner": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An owner name.",
          "title": "Owner"
        },
        "email": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the 'to' email address(es) used in email alerts. This can be a single email or multiple ones. Multiple addresses can be specified as a comma or semicolon separated string or by passing a list of strings.",
          "title": "Email"
        },
        "email_on_failure": {
          "description": "Indicates whether email alerts should be sent when a task failed",
          "title": "Email On Failure",
          "type": "boolean"
        },
        "email_on_retry": {
          "title": "Email On Retry",
          "type": "boolean"
        },
        "depends_on_past": {
          "default": false,
          "title": "Depends On Past",
          "type": "boolean"
        },
        "pool": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the slot pool this task should run in, slot pools are a way to limit concurrency for certain tasks.",
          "title": "Pool"
        },
        "pool_slots": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the number of pool slots this task should use (>= 1) Values less than 1 are not allowed.",
          "title": "Pool Slots"
        },
        "retries": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A retry count.",
          "title": "Retries"
        },
        "retry_delay": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "integer"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Retry Delay"
        },
        "retry_exponential_backoff": {
          "default": false,
          "title": "Retry Exponential Backoff",
          "type": "boolean"
        },
        "executor_config": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Executor Config"
        },
        "inlets": {
          "description": "A list of inlets or inlet value.",
          "items": {
            "$ref": "#/$defs/Dataset"
          },
          "title": "Inlets",
          "type": "array"
        },
        "outlets": {
          "description": "A list of outlets or outlet value.",
          "items": {
            "$ref": "#/$defs/Dataset"
          },
          "title": "Outlets",
          "type": "array"
        },
        "name": {
          "description": "An Airflow operator that import from external provider.",
          "title": "Name",
          "type": "string"
        },
        "params": {
          "additionalProperties": true,
          "description": "A mapping of parameters that want to pass to Airflow Operator",
          "title": "Params",
          "type": "object"
        }
      },
      "required": [
        "task",
        "uses",
        "name"
      ],
      "title": "OperatorTask",
      "type": "object"
    },
    "PythonTask": {
      "description": "Python Task model.",
      "properties": {
        "desc": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A Airflow task description that will pass to the `doc` argument.",
          "title": "Desc"
        },
        "upstream": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "description": "A list of upstream task name or only task name of this task.",
          "title": "Upstream"
        },
        "task": {
          "description": "A task name.",
          "title": "Task",
          "type": "string"
        },
        "type": {
          "const": "task",
          "default": "task",
          "description": "A task type.",
          "title": "Type",
          "type": "string"
        },
        "uses": {
          "const": "python",
          "description": "A Python task name.",
          "title": "Uses",
          "type": "string"
        },
        "trigger_rule": {
          "$ref": "#/$defs/TriggerRule",
          "default": "all_success",
          "description": "Task trigger rule. Read more detail, https://www.astronomer.io/blog/understanding-airflow-trigger-rules-comprehensive-visual-guide/"
        },
        "owner": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An owner name.",
          "title": "Owner"
        },
        "email": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the 'to' email address(es) used in email alerts. This can be a single email or multiple ones. Multiple addresses can be specified as a comma or semicolon separated string or by passing a list of strings.",
          "title": "Email"
        },
        "email_on_failure": {
          "description": "Indicates whether email alerts should be sent when a task failed",
          "title": "Email On Failure",
          "type": "boolean"
        },
        "email_on_retry": {
          "title": "Email On Retry",
          "type": "boolean"
        },
        "depends_on_past": {
          "default": false,
          "title": "Depends On Past",
          "type": "boolean"
        },
        "pool": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the slot pool this task should run in, slot pools are a way to limit concurrency for certain tasks.",
          "title": "Pool"
        },
        "pool_slots": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the number of pool slots this task should use (>= 1) Values less than 1 are not allowed.",
          "title": "Pool Slots"
        },
        "retries": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A retry count.",
          "title": "Retries"
        },
        "retry_delay": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "integer"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Retry Delay"
        },
        "retry_exponential_backoff": {
          "default": false,
          "title": "Retry Exponential Backoff",
          "type": "boolean"
        },
        "executor_config": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Executor Config"
        },
        "inlets": {
          "description": "A list of inlets or inlet value.",
          "items": {
            "$ref": "#/$defs/Dataset"
          },
          "title": "Inlets",
          "type": "array"
        },
        "outlets": {
          "description": "A list of outlets or outlet value.",
          "items": {
            "$ref": "#/$defs/Dataset"
          },
          "title": "Outlets",
          "type": "array"
        },
        "caller": {
          "description": "A Python function name that already set on the `python_callers` parameter.",
          "title": "Caller",
          "type": "string"
        },
        "params": {
          "additionalProperties": true,
          "description": "A parameters that will pass to the `op_kwargs` argument.",
          "title": "Params",
          "type": "object"
        }
      },
      "required": [
        "task",
        "uses",
        "caller"
      ],
      "title": "PythonTask",
      "type": "object"
    },
    "RaiseTask": {
      "description": "Raise Task model.",
      "properties": {
        "desc": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A Airflow task description that will pass to the `doc` argument.",
          "title": "Desc"
        },
        "upstream": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "description": "A list of upstream task name or only task name of this task.",
          "title": "Upstream"
        },
        "task": {
          "description": "A task name.",
          "title": "Task",
          "type": "string"
        },
        "type": {
          "const": "task",
          "default": "task",
          "description": "A task type.",
          "title": "Type",
          "type": "string"
        },
        "uses": {
          "const": "raise",
          "description": "A raise task name.",
          "title": "Uses",
          "type": "string"
        },
        "trigger_rule": {
          "$ref": "#/$defs/TriggerRule",
          "default": "all_success",
          "description": "Task trigger rule. Read more detail, https://www.astronomer.io/blog/understanding-airflow-trigger-rules-comprehensive-visual-guide/"
        },
        "owner": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An owner name.",
          "title": "Owner"
        },
        "email": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the 'to' email address(es) used in email alerts. This can be a single email or multiple ones. Multiple addresses can be specified as a comma or semicolon separated string or by passing a list of strings.",
          "title": "Email"
        },
        "email_on_failure": {
          "description": "Indicates whether email alerts should be sent when a task failed",
          "title": "Email On Failure",
          "type": "boolean"
        },
        "email_on_retry": {
          "title": "Email On Retry",
          "type": "boolean"
        },
        "depends_on_past": {
          "default": false,
          "title": "Depends On Past",
          "type": "boolean"
        },
        "pool": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the slot pool this task should run in, slot pools are a way to limit concurrency for certain tasks.",
          "title": "Pool"
        },
        "pool_slots": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "the number of pool slots this task should use (>= 1) Values less than 1 are not allowed.",
          "title": "Pool Slots"
        },
        "retries": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A retry count.",
          "title": "Retries"
        },
        "retry_delay": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "integer"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Retry Delay"
        },
        "retry_exponential_backoff": {
          "default": false,
          "title": "Retry Exponential Backoff",
          "type": "boolean"
        },
        "executor_config": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Executor Config"
        },
        "inlets": {
          "description": "A list of inlets or inlet value.",
          "items": {
            "$ref": "#/$defs/Dataset"
          },
          "title": "Inlets",
          "type": "array"
        },
        "outlets": {
          "description": "A list of outlets or outlet value.",
          "items": {
            "$ref": "#/$defs/Dataset"
          },
          "title": "Outlets",
          "type": "array"
        },
        "message": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Message"
        },
        "skipped": {
          "default": false,
          "title": "Skipped",
          "type": "boolean"
        }
      },
      "required": [
        "task",
        "uses"
      ],
      "title": "RaiseTask",
      "type": "object"
    },
    "TaskGroup": {
      "description": "Group of Task model that will represent Airflow Task Group object.",
      "properties": {
        "desc": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A Airflow task description that will pass to the `doc` argument.",
          "title": "Desc"
        },
        "upstream": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "description": "A list of upstream task name or only task name of this task.",
          "title": "Upstream"
        },
        "group": {
          "description": "A task group name.",
          "title": "Group",
          "type": "string"
        },
        "type": {
          "const": "group",
          "default": "A group type.",
          "title": "Type",
          "type": "string"
        },
        "tooltip": {
          "default": "",
          "description": "A task group tooltip that will display on the UI.",
          "title": "Tooltip",
          "type": "string"
        },
        "tasks": {
          "description": "A list of Any Task model.",
          "items": {
            "description": "An any task type that able be task or task group model.",
            "oneOf": [
              {
                "description": "All supported tasks.",
                "discriminator": {
                  "mapping": {
                    "bash": "#/$defs/BashTask",
                    "custom_tool": "#/$defs/CustomToolTask",
                    "debug": "#/$defs/DebugTask",
                    "empty": "#/$defs/EmptyTask",
                    "operator": "#/$defs/OperatorTask",
                    "python": "#/$defs/PythonTask",
                    "raise": "#/$defs/RaiseTask"
                  },
                  "propertyName": "uses"
                },
                "oneOf": [
                  {
                    "$ref": "#/$defs/EmptyTask"
                  },
                  {
                    "$ref": "#/$defs/DebugTask"
                  },
                  {
                    "$ref": "#/$defs/BashTask"
                  },
                  {
                    "$ref": "#/$defs/PythonTask"
                  },
                  {
                    "$ref": "#/$defs/CustomToolTask"
                  },
                  {
                    "$ref": "#/$defs/OperatorTask"
                  },
                  {
                    "$ref": "#/$defs/RaiseTask"
                  }
                ]
              },
              {
                "$ref": "#/$defs/TaskGroup"
              }
            ]
          },
          "title": "Tasks",
          "type": "array"
        }
      },
      "required": [
        "group"
      ],
      "title": "TaskGroup",
      "type": "object"
    },
    "TriggerRule": {
      "description": "Class with task's trigger rules.",
      "enum": [
        "all_success",
        "all_failed",
        "all_done",
        "all_done_setup_success",
        "one_success",
        "one_failed",
        "one_done",
        "none_failed",
        "none_failed_or_skipped",
        "none_skipped",
        "dummy",
        "always",
        "none_failed_min_one_success",
        "all_skipped"
      ],
      "title": "TriggerRule",
      "type": "string"
    }
  },
  "description": "Dag Model for validate template config data support DagGenerator object.\nThis model will include necessary field for Airflow DAG object and dp\nfield for DagGenerator object together.",
  "properties": {
    "id": {
      "description": "A DAG ID.",
      "title": "Id",
      "type": "string"
    },
    "type": {
      "const": "dag",
      "description": "A type of template config.",
      "title": "Type",
      "type": "string"
    },
    "display_name": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A DAG display name that support on Airflow version >= 2.9.0",
      "title": "Display Name"
    },
    "desc": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A DAG description.",
      "title": "Desc"
    },
    "docs": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A DAG document that allow to pass with markdown syntax.",
      "title": "Docs"
    },
    "params": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "a dictionary of DAG level parameters that are made accessible in templates, namespaced under `params`. These params can be overridden at the task level.",
      "title": "Params",
      "type": "object"
    },
    "vars": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "Custom Jinja macro variables that will use to prepare compound variable to specific variable for shorten usage in the template.",
      "title": "Vars",
      "type": "object"
    },
    "tasks": {
      "description": "A list of any task, origin task or group task",
      "items": {
        "description": "An any task type that able be task or task group model.",
        "oneOf": [
          {
            "description": "All supported tasks.",
            "discriminator": {
              "mapping": {
                "bash": "#/$defs/BashTask",
                "custom_tool": "#/$defs/CustomToolTask",
                "debug": "#/$defs/DebugTask",
                "empty": "#/$defs/EmptyTask",
                "operator": "#/$defs/OperatorTask",
                "python": "#/$defs/PythonTask",
                "raise": "#/$defs/RaiseTask"
              },
              "propertyName": "uses"
            },
            "oneOf": [
              {
                "$ref": "#/$defs/EmptyTask"
              },
              {
                "$ref": "#/$defs/DebugTask"
              },
              {
                "$ref": "#/$defs/BashTask"
              },
              {
                "$ref": "#/$defs/PythonTask"
              },
              {
                "$ref": "#/$defs/CustomToolTask"
              },
              {
                "$ref": "#/$defs/OperatorTask"
              },
              {
                "$ref": "#/$defs/RaiseTask"
              }
            ]
          },
          {
            "$ref": "#/$defs/TaskGroup"
          }
        ]
      },
      "title": "Tasks",
      "type": "array"
    },
    "filename": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A filename of the current position.",
      "title": "Filename"
    },
    "parent_dir": {
      "anyOf": [
        {
          "format": "path",
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A parent dir path.",
      "title": "Parent Dir"
    },
    "created_dt": {
      "anyOf": [
        {
          "format": "date-time",
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A file created datetime.",
      "title": "Created Dt"
    },
    "updated_dt": {
      "anyOf": [
        {
          "format": "date-time",
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A file modified datetime.",
      "title": "Updated Dt"
    },
    "raw_data": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A raw data that load from template config path.",
      "title": "Raw Data"
    },
    "raw_data_hash": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A hashed raw data with SHA256.",
      "title": "Raw Data Hash"
    },
    "owner": {
      "default": "dogdag",
      "description": "An owner name.",
      "title": "Owner",
      "type": "string"
    },
    "tags": {
      "description": "A list of tags. A tag value allow to pass Jinja template.",
      "items": {
        "type": "string"
      },
      "title": "Tags",
      "type": "array"
    },
    "schedule": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Defines the rules according to which DAG runs are scheduled. This value allow to pass with a Jinja template.",
      "title": "Schedule"
    },
    "start_date": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "format": "date-time",
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "The timestamp from which the scheduler will attempt to backfill. This value allow to pass with a Jinja template.",
      "title": "Start Date"
    },
    "end_date": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "format": "date-time",
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A date beyond which your DAG won't run, leave to None for open-ended scheduling. This value allow to pass with a Jinja template.",
      "title": "End Date"
    },
    "catchup": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "string"
        }
      ],
      "default": false,
      "description": "Perform scheduler catchup (or only run latest)? This value allow to pass with a Jinja template.",
      "title": "Catchup"
    },
    "max_active_tasks": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "string"
        }
      ],
      "description": "the number of task instances allowed to run concurrently",
      "title": "Max Active Tasks"
    },
    "max_active_runs": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "string"
        }
      ],
      "description": "maximum number of active DAG runs, beyond this number of DAG runs in a running state, the scheduler won't create new active DAG runs (This field allow to pass a Jinja template).",
      "title": "Max Active Runs"
    },
    "concurrency": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A concurrency value that deprecate when upgrade to Airflow3.",
      "title": "Concurrency"
    },
    "is_paused_upon_creation": {
      "default": true,
      "title": "Is Paused Upon Creation",
      "type": "boolean"
    },
    "dagrun_timeout_sec": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A DagRun timeout in second value.",
      "title": "Dagrun Timeout Sec"
    },
    "owner_links": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "Dict of owners and their links, that will be clickable on the DAGs view UI. Can be used as an HTTP link (for example the link to your Slack channel), or a mailto link. e.g: {\"dag_owner\": \"https://airflow.apache.org/\"}",
      "title": "Owner Links",
      "type": "object"
    },
    "fail_stop": {
      "default": null,
      "description": "Fails currently running tasks when task in DAG fails.",
      "title": "Fail Stop",
      "type": "boolean"
    },
    "default_args": {
      "$ref": "#/$defs/DefaultArgs",
      "description": "A dictionary of default parameters to be used as constructor keyword parameters when initialising operators."
    }
  },
  "required": [
    "id",
    "type"
  ],
  "title": "Dag",
  "type": "object"
}
