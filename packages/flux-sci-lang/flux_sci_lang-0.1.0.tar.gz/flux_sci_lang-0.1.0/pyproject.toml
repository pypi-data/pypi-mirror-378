[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "flux-sci-lang"
version = "0.1.0"
description = "FLUX Scientific Computing Language - Domain-Specific Language for PDEs, CFD, and Computational Physics"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Michael Crowe", email = "michael@flux-sci.org"}
]
keywords = ["scientific-computing", "PDE", "CFD", "DSL", "computational-physics", "finite-element", "GPU"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Mathematics",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "matplotlib>=3.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=3.0",
    "black>=22.0",
    "flake8>=5.0",
    "mypy>=0.990",
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
]
gpu = [
    "cupy>=10.0",
    "pycuda>=2021.1",
]
hpc = [
    "mpi4py>=3.0",
    "h5py>=3.0",
]

[project.scripts]
flux-sci = "flux_scientific:main"

[project.urls]
Homepage = "https://github.com/MichaelCrowe11/flux-sci-lang"
Documentation = "https://flux-sci-lang.readthedocs.io"
Repository = "https://github.com/MichaelCrowe11/flux-sci-lang"
"Bug Tracker" = "https://github.com/MichaelCrowe11/flux-sci-lang/issues"

[tool.black]
line-length = 127
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | output
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = [
    "tests/",
    "examples/",
    "benchmarks/",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-ra --strict-markers --cov=src"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/benchmarks/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
]