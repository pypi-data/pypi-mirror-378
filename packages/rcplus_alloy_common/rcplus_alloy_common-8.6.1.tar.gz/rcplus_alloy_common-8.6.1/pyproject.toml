[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.ruff]
line-length = 120
lint.select = ["E", "F", "W", "Q", "PL", "AIR"]
lint.ignore = ["PLR2004", "PLW1514", "PLR2044", "E266", "PLR6301"]
preview = true

[tool.ruff.lint.pylint]
max-args = 11

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["PLC0415"]

[tool.poetry]
name = "rcplus_alloy_common"
version = "8.6.1"
description = "RC+/Alloy helpers functions for Python"
readme = "README.md"
authors = [
    "Ringier AG <info@rcplus.io>",
]
license = "Proprietary"
repository = "https://github.com/alloy-ch/rcplus-alloy-lib-py-common"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Intended Audience :: Developers",
]
keywords = ["rcplus", "alloy", "logging", "metrics", "utilities"]

[tool.poetry.dependencies]
python = ">= 3.10, < 4"
requests = ">=2.6.1"
jsonschema = ">=3.0.0"
python-json-logger = "^3.2.0"
pydantic = ">=2,<3"
apache-airflow = {version = "^2.8.1", optional = true, extras=["amazon", "slack"], python = "<3.12"}
pytz = {version = "^2023.3", optional = true}
boto3 = {version = "^1.34", optional = true}
pandas = {version = "^2.1", optional = true}
awswrangler = {version = "^3.2", optional = true}
pyyaml = {version = "^6.0", optional = true}

[tool.poetry.extras]
airflow = ["apache-airflow", "pytz", "pyyaml"]
gam = []
aws = ["pandas", "awswrangler", "pyyaml"]
custom-attributes = ["boto3", "pyyaml"]

[tool.poetry.group.dev.dependencies]
pytest = ">=7.2.0"
pytest-asyncio = ">=0.10.0"
pylint-quotes = ">=0.2.0"
moto = "^4.1.10"
coverage = "^7.2.6"
bumpsemver = "*"
pyparsing = "^3.1.0"
setuptools = "^68.1.2"
ruff = "^0.6"
mypy = "*"
pytest-env = "^1.0.1"
opentelemetry-sdk = ">=1.27.0"
opentelemetry-instrumentation-logging = ">=0.50b0"

[tool.poetry.group.types.dependencies]
types-jsonschema = "^4.19.0.3"
types-boto3 = "^1.0.2"
types-requests = "^2.31.0.5"
types-urllib3 = "^1.26.25.14"
types-pytz = "^2023.3.1.1"
pandas-stubs = "^2.0.3.230814"
types-pyyaml = "^6.0.12.20240917"

[tool.pylint]
max-line-length = 120

[tool.pylint.main]
string-quote = "double"
triple-quote = "double"
docstring-quote = "double"

[tool.mypy]
[[tool.mypy.overrides]]
module = [
    "moto",
    "jsonpath_ng.*",
    "pyarrow",
    "airflow.*",
]
ignore_missing_imports = true

[tool.vulture]
ignore_names = ["logger"]

[tool.pytest.ini_options]
addopts = "-rsxX -vv --capture=tee-sys"
testpaths = ["tests"]
python_files="tests/*.py"
log_cli = "0"
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"

env = [
    "WR_WORKGROUP=test-wg",
    "WR_DATABASE=test-db",
    "AWS_ACCESS_KEY_ID=testing",
    "AWS_SECRET_ACCESS_KEY=testing",
    "AWS_SECURITY_TOKEN=testing",
    "AWS_SESSION_TOKEN=testing",
    "AWS_DEFAULT_REGION=us-east-1",
    "AWS_REGION=us-east-1",
    "OTEL_SERVICE_NAME=test-service",
    "OTEL_PYTHON_TRACER_PROVIDER=sdk_tracer_provider",
]
