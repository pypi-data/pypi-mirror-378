# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import messaging_core.auth_pb2 as auth__pb2

GRPC_GENERATED_VERSION = '1.75.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in auth_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AuthServiceStub(object):
    """AuthService exposes authentication and authorization operations for users.
    It provides methods for user registration, login, token management, and session validation.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Login = channel.unary_unary(
                '/proto.AuthService/Login',
                request_serializer=auth__pb2.LoginRequest.SerializeToString,
                response_deserializer=auth__pb2.LoginResponse.FromString,
                _registered_method=True)
        self.Register = channel.unary_unary(
                '/proto.AuthService/Register',
                request_serializer=auth__pb2.RegisterRequest.SerializeToString,
                response_deserializer=auth__pb2.RegisterResponse.FromString,
                _registered_method=True)
        self.RefreshToken = channel.unary_unary(
                '/proto.AuthService/RefreshToken',
                request_serializer=auth__pb2.RefreshTokenRequest.SerializeToString,
                response_deserializer=auth__pb2.RefreshTokenResponse.FromString,
                _registered_method=True)
        self.Logout = channel.unary_unary(
                '/proto.AuthService/Logout',
                request_serializer=auth__pb2.LogoutRequest.SerializeToString,
                response_deserializer=auth__pb2.LogoutResponse.FromString,
                _registered_method=True)
        self.VerifyToken = channel.unary_unary(
                '/proto.AuthService/VerifyToken',
                request_serializer=auth__pb2.VerifyTokenRequest.SerializeToString,
                response_deserializer=auth__pb2.VerifyTokenResponse.FromString,
                _registered_method=True)
        self.GetUserStatus = channel.unary_unary(
                '/proto.AuthService/GetUserStatus',
                request_serializer=auth__pb2.UserStatusRequest.SerializeToString,
                response_deserializer=auth__pb2.UserStatusResponse.FromString,
                _registered_method=True)
        self.CreateAccessToken = channel.unary_unary(
                '/proto.AuthService/CreateAccessToken',
                request_serializer=auth__pb2.CreateAccessTokenRequest.SerializeToString,
                response_deserializer=auth__pb2.CreateAccessTokenResponse.FromString,
                _registered_method=True)


class AuthServiceServicer(object):
    """AuthService exposes authentication and authorization operations for users.
    It provides methods for user registration, login, token management, and session validation.
    """

    def Login(self, request, context):
        """Login authenticates a user and returns authentication tokens.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Register(self, request, context):
        """Register creates a new user account with the provided information.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefreshToken(self, request, context):
        """RefreshToken generates a new access token using a valid refresh token.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Logout(self, request, context):
        """Logout terminates the current user's session and invalidates the refresh token.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyToken(self, request, context):
        """VerifyToken checks if the provided authentication token is valid.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserStatus(self, request, context):
        """GetUserStatus retrieves the online status of a user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAccessToken(self, request, context):
        """CreateAccessToken generates a new access token, typically for service accounts or API access.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=auth__pb2.LoginRequest.FromString,
                    response_serializer=auth__pb2.LoginResponse.SerializeToString,
            ),
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=auth__pb2.RegisterRequest.FromString,
                    response_serializer=auth__pb2.RegisterResponse.SerializeToString,
            ),
            'RefreshToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshToken,
                    request_deserializer=auth__pb2.RefreshTokenRequest.FromString,
                    response_serializer=auth__pb2.RefreshTokenResponse.SerializeToString,
            ),
            'Logout': grpc.unary_unary_rpc_method_handler(
                    servicer.Logout,
                    request_deserializer=auth__pb2.LogoutRequest.FromString,
                    response_serializer=auth__pb2.LogoutResponse.SerializeToString,
            ),
            'VerifyToken': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyToken,
                    request_deserializer=auth__pb2.VerifyTokenRequest.FromString,
                    response_serializer=auth__pb2.VerifyTokenResponse.SerializeToString,
            ),
            'GetUserStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserStatus,
                    request_deserializer=auth__pb2.UserStatusRequest.FromString,
                    response_serializer=auth__pb2.UserStatusResponse.SerializeToString,
            ),
            'CreateAccessToken': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAccessToken,
                    request_deserializer=auth__pb2.CreateAccessTokenRequest.FromString,
                    response_serializer=auth__pb2.CreateAccessTokenResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.AuthService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('proto.AuthService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AuthService(object):
    """AuthService exposes authentication and authorization operations for users.
    It provides methods for user registration, login, token management, and session validation.
    """

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.AuthService/Login',
            auth__pb2.LoginRequest.SerializeToString,
            auth__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.AuthService/Register',
            auth__pb2.RegisterRequest.SerializeToString,
            auth__pb2.RegisterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RefreshToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.AuthService/RefreshToken',
            auth__pb2.RefreshTokenRequest.SerializeToString,
            auth__pb2.RefreshTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.AuthService/Logout',
            auth__pb2.LogoutRequest.SerializeToString,
            auth__pb2.LogoutResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VerifyToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.AuthService/VerifyToken',
            auth__pb2.VerifyTokenRequest.SerializeToString,
            auth__pb2.VerifyTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.AuthService/GetUserStatus',
            auth__pb2.UserStatusRequest.SerializeToString,
            auth__pb2.UserStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateAccessToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.AuthService/CreateAccessToken',
            auth__pb2.CreateAccessTokenRequest.SerializeToString,
            auth__pb2.CreateAccessTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
