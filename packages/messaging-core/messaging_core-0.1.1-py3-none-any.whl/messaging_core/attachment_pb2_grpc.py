# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import messaging_core.attachment_pb2 as attachment__pb2

GRPC_GENERATED_VERSION = '1.75.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in attachment_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AttachmentServiceStub(object):
    """AttachmentService provides functionality for managing file attachments in the messaging system.
    It supports operations like uploading, downloading, and managing file metadata.

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UploadFile = channel.stream_unary(
                '/proto.AttachmentService/UploadFile',
                request_serializer=attachment__pb2.UploadFileRequest.SerializeToString,
                response_deserializer=attachment__pb2.UploadFileResponse.FromString,
                _registered_method=True)
        self.DownloadFile = channel.unary_stream(
                '/proto.AttachmentService/DownloadFile',
                request_serializer=attachment__pb2.DownloadFileRequest.SerializeToString,
                response_deserializer=attachment__pb2.DownloadFileResponse.FromString,
                _registered_method=True)
        self.DeleteFile = channel.unary_unary(
                '/proto.AttachmentService/DeleteFile',
                request_serializer=attachment__pb2.DeleteFileRequest.SerializeToString,
                response_deserializer=attachment__pb2.DeleteFileResponse.FromString,
                _registered_method=True)
        self.GetFileInfo = channel.unary_unary(
                '/proto.AttachmentService/GetFileInfo',
                request_serializer=attachment__pb2.GetFileInfoRequest.SerializeToString,
                response_deserializer=attachment__pb2.GetFileInfoResponse.FromString,
                _registered_method=True)
        self.GeneratePresignedURL = channel.unary_unary(
                '/proto.AttachmentService/GeneratePresignedURL',
                request_serializer=attachment__pb2.GeneratePresignedURLRequest.SerializeToString,
                response_deserializer=attachment__pb2.GeneratePresignedURLResponse.FromString,
                _registered_method=True)


class AttachmentServiceServicer(object):
    """AttachmentService provides functionality for managing file attachments in the messaging system.
    It supports operations like uploading, downloading, and managing file metadata.

    """

    def UploadFile(self, request_iterator, context):
        """UploadFile handles the streaming upload of a file in chunks.
        The first message must contain FileInfo, followed by one or more chunk_data messages.
        Returns the ID and URL of the uploaded file.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFileInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GeneratePresignedURL(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AttachmentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UploadFile': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadFile,
                    request_deserializer=attachment__pb2.UploadFileRequest.FromString,
                    response_serializer=attachment__pb2.UploadFileResponse.SerializeToString,
            ),
            'DownloadFile': grpc.unary_stream_rpc_method_handler(
                    servicer.DownloadFile,
                    request_deserializer=attachment__pb2.DownloadFileRequest.FromString,
                    response_serializer=attachment__pb2.DownloadFileResponse.SerializeToString,
            ),
            'DeleteFile': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFile,
                    request_deserializer=attachment__pb2.DeleteFileRequest.FromString,
                    response_serializer=attachment__pb2.DeleteFileResponse.SerializeToString,
            ),
            'GetFileInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFileInfo,
                    request_deserializer=attachment__pb2.GetFileInfoRequest.FromString,
                    response_serializer=attachment__pb2.GetFileInfoResponse.SerializeToString,
            ),
            'GeneratePresignedURL': grpc.unary_unary_rpc_method_handler(
                    servicer.GeneratePresignedURL,
                    request_deserializer=attachment__pb2.GeneratePresignedURLRequest.FromString,
                    response_serializer=attachment__pb2.GeneratePresignedURLResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.AttachmentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('proto.AttachmentService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AttachmentService(object):
    """AttachmentService provides functionality for managing file attachments in the messaging system.
    It supports operations like uploading, downloading, and managing file metadata.

    """

    @staticmethod
    def UploadFile(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/proto.AttachmentService/UploadFile',
            attachment__pb2.UploadFileRequest.SerializeToString,
            attachment__pb2.UploadFileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DownloadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/proto.AttachmentService/DownloadFile',
            attachment__pb2.DownloadFileRequest.SerializeToString,
            attachment__pb2.DownloadFileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.AttachmentService/DeleteFile',
            attachment__pb2.DeleteFileRequest.SerializeToString,
            attachment__pb2.DeleteFileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFileInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.AttachmentService/GetFileInfo',
            attachment__pb2.GetFileInfoRequest.SerializeToString,
            attachment__pb2.GetFileInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GeneratePresignedURL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.AttachmentService/GeneratePresignedURL',
            attachment__pb2.GeneratePresignedURLRequest.SerializeToString,
            attachment__pb2.GeneratePresignedURLResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
