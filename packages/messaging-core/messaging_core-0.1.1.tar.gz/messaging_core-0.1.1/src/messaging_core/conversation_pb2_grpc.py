# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import messaging_core.conversation_pb2 as conversation__pb2

GRPC_GENERATED_VERSION = '1.75.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in conversation_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ConversationServiceStub(object):
    """ConversationService provides methods for managing conversations and participants.
    It handles the creation, retrieval, updating, and deletion of conversations,
    as well as participant management and conversation settings.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateConversation = channel.unary_unary(
                '/messaging.ConversationService/CreateConversation',
                request_serializer=conversation__pb2.CreateConversationRequest.SerializeToString,
                response_deserializer=conversation__pb2.CreateConversationResponse.FromString,
                _registered_method=True)
        self.GetConversation = channel.unary_unary(
                '/messaging.ConversationService/GetConversation',
                request_serializer=conversation__pb2.GetConversationRequest.SerializeToString,
                response_deserializer=conversation__pb2.GetConversationResponse.FromString,
                _registered_method=True)
        self.ListConversations = channel.unary_unary(
                '/messaging.ConversationService/ListConversations',
                request_serializer=conversation__pb2.ListConversationsRequest.SerializeToString,
                response_deserializer=conversation__pb2.ListConversationsResponse.FromString,
                _registered_method=True)
        self.UpdateConversation = channel.unary_unary(
                '/messaging.ConversationService/UpdateConversation',
                request_serializer=conversation__pb2.UpdateConversationRequest.SerializeToString,
                response_deserializer=conversation__pb2.UpdateConversationResponse.FromString,
                _registered_method=True)
        self.DeleteConversation = channel.unary_unary(
                '/messaging.ConversationService/DeleteConversation',
                request_serializer=conversation__pb2.DeleteConversationRequest.SerializeToString,
                response_deserializer=conversation__pb2.DeleteConversationResponse.FromString,
                _registered_method=True)
        self.AddParticipant = channel.unary_unary(
                '/messaging.ConversationService/AddParticipant',
                request_serializer=conversation__pb2.AddParticipantRequest.SerializeToString,
                response_deserializer=conversation__pb2.AddParticipantResponse.FromString,
                _registered_method=True)
        self.RemoveParticipant = channel.unary_unary(
                '/messaging.ConversationService/RemoveParticipant',
                request_serializer=conversation__pb2.RemoveParticipantRequest.SerializeToString,
                response_deserializer=conversation__pb2.RemoveParticipantResponse.FromString,
                _registered_method=True)
        self.UpdateParticipant = channel.unary_unary(
                '/messaging.ConversationService/UpdateParticipant',
                request_serializer=conversation__pb2.UpdateParticipantRequest.SerializeToString,
                response_deserializer=conversation__pb2.UpdateParticipantResponse.FromString,
                _registered_method=True)
        self.ListParticipants = channel.unary_unary(
                '/messaging.ConversationService/ListParticipants',
                request_serializer=conversation__pb2.ListParticipantsRequest.SerializeToString,
                response_deserializer=conversation__pb2.ListParticipantsResponse.FromString,
                _registered_method=True)
        self.GetConversationSettings = channel.unary_unary(
                '/messaging.ConversationService/GetConversationSettings',
                request_serializer=conversation__pb2.GetConversationSettingsRequest.SerializeToString,
                response_deserializer=conversation__pb2.GetConversationSettingsResponse.FromString,
                _registered_method=True)
        self.UpdateConversationSettings = channel.unary_unary(
                '/messaging.ConversationService/UpdateConversationSettings',
                request_serializer=conversation__pb2.UpdateConversationSettingsRequest.SerializeToString,
                response_deserializer=conversation__pb2.UpdateConversationSettingsResponse.FromString,
                _registered_method=True)


class ConversationServiceServicer(object):
    """ConversationService provides methods for managing conversations and participants.
    It handles the creation, retrieval, updating, and deletion of conversations,
    as well as participant management and conversation settings.
    """

    def CreateConversation(self, request, context):
        """CreateConversation creates a new conversation with the specified participants and settings.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConversation(self, request, context):
        """GetConversation retrieves the details of a specific conversation by its ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConversations(self, request, context):
        """ListConversations retrieves a paginated list of conversations for the current user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateConversation(self, request, context):
        """UpdateConversation updates the properties of an existing conversation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteConversation(self, request, context):
        """DeleteConversation removes a conversation and all its associated data.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddParticipant(self, request, context):
        """AddParticipant adds a new participant to an existing conversation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveParticipant(self, request, context):
        """RemoveParticipant removes a participant from a conversation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateParticipant(self, request, context):
        """UpdateParticipant updates a participant's information in a conversation.
        This can be used to change roles or update participant-specific settings.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListParticipants(self, request, context):
        """ListParticipants retrieves all participants of a specific conversation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConversationSettings(self, request, context):
        """GetConversationSettings retrieves the conversation settings for the current user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateConversationSettings(self, request, context):
        """UpdateConversationSettings updates the conversation settings for the current user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConversationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateConversation': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateConversation,
                    request_deserializer=conversation__pb2.CreateConversationRequest.FromString,
                    response_serializer=conversation__pb2.CreateConversationResponse.SerializeToString,
            ),
            'GetConversation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConversation,
                    request_deserializer=conversation__pb2.GetConversationRequest.FromString,
                    response_serializer=conversation__pb2.GetConversationResponse.SerializeToString,
            ),
            'ListConversations': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConversations,
                    request_deserializer=conversation__pb2.ListConversationsRequest.FromString,
                    response_serializer=conversation__pb2.ListConversationsResponse.SerializeToString,
            ),
            'UpdateConversation': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateConversation,
                    request_deserializer=conversation__pb2.UpdateConversationRequest.FromString,
                    response_serializer=conversation__pb2.UpdateConversationResponse.SerializeToString,
            ),
            'DeleteConversation': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteConversation,
                    request_deserializer=conversation__pb2.DeleteConversationRequest.FromString,
                    response_serializer=conversation__pb2.DeleteConversationResponse.SerializeToString,
            ),
            'AddParticipant': grpc.unary_unary_rpc_method_handler(
                    servicer.AddParticipant,
                    request_deserializer=conversation__pb2.AddParticipantRequest.FromString,
                    response_serializer=conversation__pb2.AddParticipantResponse.SerializeToString,
            ),
            'RemoveParticipant': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveParticipant,
                    request_deserializer=conversation__pb2.RemoveParticipantRequest.FromString,
                    response_serializer=conversation__pb2.RemoveParticipantResponse.SerializeToString,
            ),
            'UpdateParticipant': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateParticipant,
                    request_deserializer=conversation__pb2.UpdateParticipantRequest.FromString,
                    response_serializer=conversation__pb2.UpdateParticipantResponse.SerializeToString,
            ),
            'ListParticipants': grpc.unary_unary_rpc_method_handler(
                    servicer.ListParticipants,
                    request_deserializer=conversation__pb2.ListParticipantsRequest.FromString,
                    response_serializer=conversation__pb2.ListParticipantsResponse.SerializeToString,
            ),
            'GetConversationSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConversationSettings,
                    request_deserializer=conversation__pb2.GetConversationSettingsRequest.FromString,
                    response_serializer=conversation__pb2.GetConversationSettingsResponse.SerializeToString,
            ),
            'UpdateConversationSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateConversationSettings,
                    request_deserializer=conversation__pb2.UpdateConversationSettingsRequest.FromString,
                    response_serializer=conversation__pb2.UpdateConversationSettingsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'messaging.ConversationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('messaging.ConversationService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ConversationService(object):
    """ConversationService provides methods for managing conversations and participants.
    It handles the creation, retrieval, updating, and deletion of conversations,
    as well as participant management and conversation settings.
    """

    @staticmethod
    def CreateConversation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/messaging.ConversationService/CreateConversation',
            conversation__pb2.CreateConversationRequest.SerializeToString,
            conversation__pb2.CreateConversationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetConversation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/messaging.ConversationService/GetConversation',
            conversation__pb2.GetConversationRequest.SerializeToString,
            conversation__pb2.GetConversationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListConversations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/messaging.ConversationService/ListConversations',
            conversation__pb2.ListConversationsRequest.SerializeToString,
            conversation__pb2.ListConversationsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateConversation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/messaging.ConversationService/UpdateConversation',
            conversation__pb2.UpdateConversationRequest.SerializeToString,
            conversation__pb2.UpdateConversationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteConversation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/messaging.ConversationService/DeleteConversation',
            conversation__pb2.DeleteConversationRequest.SerializeToString,
            conversation__pb2.DeleteConversationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddParticipant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/messaging.ConversationService/AddParticipant',
            conversation__pb2.AddParticipantRequest.SerializeToString,
            conversation__pb2.AddParticipantResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveParticipant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/messaging.ConversationService/RemoveParticipant',
            conversation__pb2.RemoveParticipantRequest.SerializeToString,
            conversation__pb2.RemoveParticipantResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateParticipant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/messaging.ConversationService/UpdateParticipant',
            conversation__pb2.UpdateParticipantRequest.SerializeToString,
            conversation__pb2.UpdateParticipantResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListParticipants(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/messaging.ConversationService/ListParticipants',
            conversation__pb2.ListParticipantsRequest.SerializeToString,
            conversation__pb2.ListParticipantsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetConversationSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/messaging.ConversationService/GetConversationSettings',
            conversation__pb2.GetConversationSettingsRequest.SerializeToString,
            conversation__pb2.GetConversationSettingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateConversationSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/messaging.ConversationService/UpdateConversationSettings',
            conversation__pb2.UpdateConversationSettingsRequest.SerializeToString,
            conversation__pb2.UpdateConversationSettingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
