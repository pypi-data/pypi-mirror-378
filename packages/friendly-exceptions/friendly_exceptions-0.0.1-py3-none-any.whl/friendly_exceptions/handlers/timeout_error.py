"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è TimeoutError
TimeoutError handler
"""

from typing import Optional, Any
from .base import BaseHandler


class TimeoutErrorHandler(BaseHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è TimeoutError - –æ—à–∏–±–æ–∫ —Ç–∞–π–º–∞—É—Ç–∞
    Handler for TimeoutError - timeout errors"""
    
    def explain(self, exception: TimeoutError, traceback_obj: Optional[Any] = None) -> str:
        """
        –û–±—ä—è—Å–Ω—è–µ—Ç TimeoutError –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
        Explains TimeoutError in simple terms
        
        Args:
            exception: TimeoutError –¥–ª—è –æ–±—ä—è—Å–Ω–µ–Ω–∏—è / TimeoutError to explain
            traceback_obj: –û–±—ä–µ–∫—Ç —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∏ / Traceback object
            
        Returns:
            –ß–µ–ª–æ–≤–µ–∫–æ-—á–∏—Ç–∞–µ–º–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ / Human-readable explanation
        """
        error_message = str(exception)
        
        if self._get_language() == "ru":
            explanation = f"‚è∞ –û—à–∏–±–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞: {error_message}"
        else:
            explanation = f"‚è∞ Timeout error: {error_message}"
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        context = self.get_context_info(traceback_obj)
        locals_dict = context.get('locals', {})
        
        # –ò—â–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞–π–º–∞—É—Ç–µ
        timeout_info = self._analyze_timeout_context(locals_dict)
        if timeout_info:
            if self._get_language() == "ru":
                explanation += f"\n‚è±Ô∏è –¢–∞–π–º–∞—É—Ç: {timeout_info}"
            else:
                explanation += f"\n‚è±Ô∏è Timeout: {timeout_info}"
        
        # –û–±—ä—è—Å–Ω—è–µ–º –ø—Ä–æ–±–ª–µ–º—É
        if self._get_language() == "ru":
            explanation += "\nüí° –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–Ω—è–ª–∞ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –±—ã–ª–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞"
        else:
            explanation += "\nüí° The operation took too long and was interrupted"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        suggestions = self.get_suggestions(exception)
        if suggestions:
            if self._get_language() == "ru":
                explanation += "\n\nüîß –ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:"
            else:
                explanation += "\n\nüîß How to fix:"
            for i, suggestion in enumerate(suggestions, 1):
                explanation += f"\n{i}. {suggestion}"
        
        return explanation
    
    def _analyze_timeout_context(self, locals_dict: dict) -> Optional[str]:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ç–∞–π–º–∞—É—Ç–∞ / Analyzes timeout context"""
        # –ò—â–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
        timeout_vars = ['timeout', 'timeout_seconds', 'timeout_ms', 'wait_time']
        
        for var_name, var_value in locals_dict.items():
            if var_name.lower() in timeout_vars:
                if isinstance(var_value, (int, float)):
                    return f"{var_value} —Å–µ–∫—É–Ω–¥" if self._get_language() == "ru" else f"{var_value} seconds"
        
        return None
    
    def get_suggestions(self, exception: TimeoutError) -> list[str]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é TimeoutError / Returns suggestions for fixing TimeoutError"""
        if self._get_language() == "ru":
            return [
                "–£–≤–µ–ª–∏—á—å—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–∞–π–º–∞—É—Ç–∞",
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è",
                "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ",
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é –ø–æ–∑–∂–µ",
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –Ω–µ—Ç –ø—Ä–æ–±–ª–µ–º —Å —Å–µ—Ç—å—é",
                "–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"
            ]
        else:
            return [
                "Increase the timeout value",
                "Check your internet connection speed",
                "Make sure the server is working properly",
                "Try the operation again later",
                "Check for network issues",
                "Consider using asynchronous execution"
            ]
