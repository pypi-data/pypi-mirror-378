"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è IsADirectoryError
IsADirectoryError handler
"""

from typing import Optional, Any
from .base import BaseHandler


class IsADirectoryErrorHandler(BaseHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è IsADirectoryError - –æ—à–∏–±–æ–∫ —Ä–∞–±–æ—Ç—ã —Å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º–∏ –∫–∞–∫ —Å —Ñ–∞–π–ª–∞–º–∏
    Handler for IsADirectoryError - errors treating directories as files"""
    
    def explain(self, exception: IsADirectoryError, traceback_obj: Optional[Any] = None) -> str:
        """
        –û–±—ä—è—Å–Ω—è–µ—Ç IsADirectoryError –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
        Explains IsADirectoryError in simple terms
        
        Args:
            exception: IsADirectoryError –¥–ª—è –æ–±—ä—è—Å–Ω–µ–Ω–∏—è / IsADirectoryError to explain
            traceback_obj: –û–±—ä–µ–∫—Ç —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∏ / Traceback object
            
        Returns:
            –ß–µ–ª–æ–≤–µ–∫–æ-—á–∏—Ç–∞–µ–º–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ / Human-readable explanation
        """
        error_message = str(exception)
        
        if self._get_language() == "ru":
            explanation = f"üìÇ –û—à–∏–±–∫–∞: —ç—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è, –∞ –Ω–µ —Ñ–∞–π–ª"
        else:
            explanation = f"üìÇ Error: this is a directory, not a file"
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø—É—Ç—å –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
        path = self._extract_path_from_error(error_message)
        if path:
            if self._get_language() == "ru":
                explanation += f"\nüìÅ –ü—É—Ç—å: {path}"
            else:
                explanation += f"\nüìÅ Path: {path}"
        
        # –û–±—ä—è—Å–Ω—è–µ–º –ø—Ä–æ–±–ª–µ–º—É
        if self._get_language() == "ru":
            explanation += "\nüí° –í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é —Å —Ñ–∞–π–ª–æ–º –Ω–∞–¥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–µ–π"
        else:
            explanation += "\nüí° You're trying to perform a file operation on a directory"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        suggestions = self.get_suggestions(exception)
        if suggestions:
            if self._get_language() == "ru":
                explanation += "\n\nüîß –ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:"
            else:
                explanation += "\n\nüîß How to fix:"
            for i, suggestion in enumerate(suggestions, 1):
                explanation += f"\n{i}. {suggestion}"
        
        return explanation
    
    def _extract_path_from_error(self, error_message: str) -> Optional[str]:
        """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –ø—É—Ç—å –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ / Extracts path from error message"""
        # "Is a directory: 'path'"
        if "'" in error_message:
            parts = error_message.split("'")
            if len(parts) >= 2:
                return parts[1]
        return None
    
    def get_suggestions(self, exception: IsADirectoryError) -> list[str]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é IsADirectoryError / Returns suggestions for fixing IsADirectoryError"""
        if self._get_language() == "ru":
            return [
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ os.listdir() –¥–ª—è —á—Ç–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏",
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ os.path.isdir() –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–∞ –æ–±—ä–µ–∫—Ç–∞",
                "–£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ñ–∞–π–ª –≤–Ω—É—Ç—Ä–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏",
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ os.walk() –¥–ª—è –æ–±—Ö–æ–¥–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏",
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø—É—Ç—å –≤–µ–¥–µ—Ç –∫ —Ñ–∞–π–ª—É, –∞ –Ω–µ –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"
            ]
        else:
            return [
                "Use os.listdir() to read directory contents",
                "Use os.path.isdir() to check object type",
                "Specify a specific file inside the directory",
                "Use os.walk() to traverse the directory",
                "Check that the path leads to a file, not a directory"
            ]
