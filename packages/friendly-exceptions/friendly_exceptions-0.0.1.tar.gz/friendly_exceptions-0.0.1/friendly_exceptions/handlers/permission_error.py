"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è PermissionError
PermissionError handler
"""

from typing import Optional, Any
from .base import BaseHandler


class PermissionErrorHandler(BaseHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è PermissionError - –æ—à–∏–±–æ–∫ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    Handler for PermissionError - permission errors"""
    
    def explain(self, exception: PermissionError, traceback_obj: Optional[Any] = None) -> str:
        """
        –û–±—ä—è—Å–Ω—è–µ—Ç PermissionError –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
        Explains PermissionError in simple terms
        
        Args:
            exception: PermissionError –¥–ª—è –æ–±—ä—è—Å–Ω–µ–Ω–∏—è / PermissionError to explain
            traceback_obj: –û–±—ä–µ–∫—Ç —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∏ / Traceback object
            
        Returns:
            –ß–µ–ª–æ–≤–µ–∫–æ-—á–∏—Ç–∞–µ–º–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ / Human-readable explanation
        """
        error_message = str(exception)
        
        if self._get_language() == "ru":
            explanation = f"üîí –û—à–∏–±–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞: {error_message}"
        else:
            explanation = f"üîí Permission error: {error_message}"
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        context = self.get_context_info(traceback_obj)
        locals_dict = context.get('locals', {})
        
        # –ò—â–µ–º —Ñ–∞–π–ª –≤ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        file_path = self._find_file_in_context(locals_dict)
        if file_path:
            if self._get_language() == "ru":
                explanation += f"\nüìÅ –§–∞–π–ª: {file_path}"
            else:
                explanation += f"\nüìÅ File: {file_path}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∞–≤–∞—Ö
        if self._get_language() == "ru":
            explanation += "\nüí° –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏"
        else:
            explanation += "\nüí° You don't have sufficient permissions to perform this operation"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        suggestions = self.get_suggestions(exception)
        if suggestions:
            if self._get_language() == "ru":
                explanation += "\n\nüîß –ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:"
            else:
                explanation += "\n\nüîß How to fix:"
            for i, suggestion in enumerate(suggestions, 1):
                explanation += f"\n{i}. {suggestion}"
        
        return explanation
    
    def _find_file_in_context(self, locals_dict: dict) -> Optional[str]:
        """–ò—â–µ—Ç —Ñ–∞–π–ª –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ / Finds file in context"""
        # –ò—â–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
        file_indicators = ['file', 'path', 'filename', 'filepath', 'f']
        
        for var_name, var_value in locals_dict.items():
            if var_name.lower() in file_indicators:
                if isinstance(var_value, str) and ('/' in var_value or '\\' in var_value):
                    return var_value
        
        return None
    
    def get_suggestions(self, exception: PermissionError) -> list[str]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é PermissionError / Returns suggestions for fixing PermissionError"""
        if self._get_language() == "ru":
            return [
                "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É: ls -l filename",
                "–ò–∑–º–µ–Ω–∏—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞: chmod +x filename",
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥—Ä—É–≥–∏–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º",
                "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é",
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è"
            ]
        else:
            return [
                "Run the program as administrator",
                "Check file permissions: ls -l filename",
                "Change file permissions: chmod +x filename",
                "Check that the file is not locked by another process",
                "Make sure you have write permissions to the directory",
                "Check that the file is not read-only"
            ]
