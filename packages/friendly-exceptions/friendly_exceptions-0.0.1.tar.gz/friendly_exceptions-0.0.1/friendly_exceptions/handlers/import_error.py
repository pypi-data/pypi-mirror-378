"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è ImportError
ImportError handler
"""

import difflib
from typing import Optional, Any
from .base import BaseHandler


class ImportErrorHandler(BaseHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è ImportError - –æ—à–∏–±–æ–∫ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
    Handler for ImportError - module import errors"""
    
    def explain(self, exception: ImportError, traceback_obj: Optional[Any] = None) -> str:
        """
        –û–±—ä—è—Å–Ω—è–µ—Ç ImportError –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
        
        Args:
            exception: ImportError –¥–ª—è –æ–±—ä—è—Å–Ω–µ–Ω–∏—è
            traceback_obj: –û–±—ä–µ–∫—Ç —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∏
            
        Returns:
            –ß–µ–ª–æ–≤–µ–∫–æ-—á–∏—Ç–∞–µ–º–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ
        """
        error_message = str(exception)
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        context = self.get_context_info(traceback_obj)
        locals_dict = context.get('locals', {})
        
        if self._get_language() == "ru":
            explanation = f"üì¶ –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {error_message}"
        else:
            explanation = f"üì¶ Import error: {error_message}"
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        if "No module named" in error_message:
            explanation = self._explain_no_module(error_message)
        elif "cannot import name" in error_message:
            explanation = self._explain_cannot_import_name(error_message)
        elif "attempted relative import" in error_message:
            explanation = self._explain_relative_import(error_message)
        elif "bad magic number" in error_message:
            explanation = self._explain_bad_magic_number(error_message)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        suggestions = self.get_suggestions(exception)
        if suggestions:
            if self._get_language() == "ru":
                explanation += "\n\nüîß –ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:"
            else:
                explanation += "\n\nüîß How to fix:"
            for i, suggestion in enumerate(suggestions, 1):
                explanation += f"\n{i}. {suggestion}"
        
        return explanation
    
    def _explain_no_module(self, error_message: str) -> str:
        """–û–±—ä—è—Å–Ω—è–µ—Ç –æ—à–∏–±–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –º–æ–¥—É–ª—è / Explains missing module errors"""
        # "No module named 'module_name'"
        if "'" in error_message:
            module_name = error_message.split("'")[1]
            if self._get_language() == "ru":
                explanation = f"üì¶ –ú–æ–¥—É–ª—å '{module_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            else:
                explanation = f"üì¶ Module '{module_name}' not found or not installed"
            
            # –ò—â–µ–º –ø–æ—Ö–æ–∂–∏–µ –º–æ–¥—É–ª–∏
            similar_modules = self._find_similar_modules(module_name)
            if similar_modules:
                if self._get_language() == "ru":
                    explanation += f"\nü§î –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –∏–º–µ–ª–∏ –≤ –≤–∏–¥—É: {similar_modules[0]}"
                    if len(similar_modules) > 1:
                        explanation += f"\nüîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–∞–∫–µ—Ç: pip install {similar_modules[0]}"
                else:
                    explanation += f"\nü§î Perhaps you meant: {similar_modules[0]}"
                    if len(similar_modules) > 1:
                        explanation += f"\nüîß Install package: pip install {similar_modules[0]}"
            
            return explanation
        else:
            if self._get_language() == "ru":
                return "üì¶ –ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            else:
                return "üì¶ Module not found or not installed"
    
    def _explain_cannot_import_name(self, error_message: str) -> str:
        """–û–±—ä—è—Å–Ω—è–µ—Ç –æ—à–∏–±–∫–∏ –∏–º–ø–æ—Ä—Ç–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏–º–µ–Ω–∏"""
        # "cannot import name 'function_name' from 'module_name'"
        if "from" in error_message and "'" in error_message:
            parts = error_message.split("'")
            if len(parts) >= 4:
                name = parts[1]
                module = parts[3]
                return f"üì¶ –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å '{name}' –∏–∑ –º–æ–¥—É–ª—è '{module}'"
        return "üì¶ –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∏–º—è –∏–∑ –º–æ–¥—É–ª—è"
    
    def _explain_relative_import(self, error_message: str) -> str:
        """–û–±—ä—è—Å–Ω—è–µ—Ç –æ—à–∏–±–∫–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞"""
        return "üì¶ –û—à–∏–±–∫–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å: from .module import name"
    
    def _explain_bad_magic_number(self, error_message: str) -> str:
        """–û–±—ä—è—Å–Ω—è–µ—Ç –æ—à–∏–±–∫–∏ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ —á–∏—Å–ª–∞"""
        return "üì¶ –§–∞–π–ª .pyc –ø–æ–≤—Ä–µ–∂–¥–µ–Ω –∏–ª–∏ –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º. –£–¥–∞–ª–∏—Ç–µ —Ñ–∞–π–ª—ã __pycache__ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É"
    
    def _find_similar_modules(self, module_name: str) -> list[str]:
        """
        –ù–∞—Ö–æ–¥–∏—Ç –º–æ–¥—É–ª–∏, –ø–æ—Ö–æ–∂–∏–µ –Ω–∞ –∏—Å–∫–æ–º—ã–π
        
        Args:
            module_name: –ò–º—è –∏—Å–∫–æ–º–æ–≥–æ –º–æ–¥—É–ª—è
            
        Returns:
            –°–ø–∏—Å–æ–∫ –ø–æ—Ö–æ–∂–∏—Ö –º–æ–¥—É–ª–µ–π
        """
        # –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–æ–¥—É–ª–∏ Python
        popular_modules = [
            'numpy', 'pandas', 'matplotlib', 'requests', 'flask', 'django',
            'tensorflow', 'torch', 'scikit-learn', 'opencv-python', 'pillow',
            'beautifulsoup4', 'selenium', 'scrapy', 'fastapi', 'uvicorn',
            'sqlalchemy', 'psycopg2', 'pymongo', 'redis', 'celery',
            'jupyter', 'notebook', 'ipython', 'pytest', 'black', 'flake8',
            'click', 'typer', 'rich', 'tqdm', 'colorama', 'termcolor',
            'pyyaml', 'toml', 'python-dotenv', 'environs', 'pydantic',
            'httpx', 'aiohttp', 'websockets', 'asyncio', 'concurrent',
            'multiprocessing', 'threading', 'queue', 'collections',
            'itertools', 'functools', 'operator', 'pathlib', 'os', 'sys',
            'json', 'csv', 'xml', 'html', 'urllib', 'http', 'socket',
            'ssl', 'hashlib', 'base64', 'uuid', 'datetime', 'time',
            'calendar', 'math', 'statistics', 'random', 'secrets',
            're', 'string', 'textwrap', 'unicodedata', 'codecs',
            'io', 'tempfile', 'shutil', 'glob', 'fnmatch', 'linecache',
            'pickle', 'shelve', 'dbm', 'sqlite3', 'zlib', 'gzip',
            'bz2', 'lzma', 'tarfile', 'zipfile', 'configparser',
            'argparse', 'getopt', 'logging', 'warnings', 'traceback',
            'inspect', 'ast', 'dis', 'types', 'typing', 'dataclasses',
            'enum', 'abc', 'contextlib', 'weakref', 'gc', 'copy',
            'pprint', 'reprlib', 'numbers', 'decimal', 'fractions',
            'cmath', 'array', 'struct', 'memoryview', 'mmap'
        ]
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º difflib –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ—Ö–æ–∂–∏—Ö –º–æ–¥—É–ª–µ–π
        similar = difflib.get_close_matches(module_name, popular_modules, n=3, cutoff=0.6)
        
        return similar
    
    def get_suggestions(self, exception: ImportError) -> list[str]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é ImportError / Returns suggestions for fixing ImportError"""
        error_message = str(exception)
        
        if "No module named" in error_message:
            if self._get_language() == "ru":
                return [
                    "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –º–æ–¥—É–ª—å: pip install module_name",
                    "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –º–æ–¥—É–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: pip list | grep module_name",
                    "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –º–æ–¥—É–ª—è",
                    "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –º–æ–¥—É–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ PYTHONPATH",
                    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–¥—É–ª—å: pip uninstall module_name && pip install module_name"
                ]
            else:
                return [
                    "Install the module: pip install module_name",
                    "Check if module is installed: pip list | grep module_name",
                    "Make sure you're using the correct module name",
                    "Check that the module is in PYTHONPATH",
                    "Try reinstalling the module: pip uninstall module_name && pip install module_name"
                ]
        elif "cannot import name" in error_message:
            if self._get_language() == "ru":
                return [
                    "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∏–º—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –º–æ–¥—É–ª–µ: dir(module_name)",
                    "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è",
                    "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–µ—Ä—Å–∏—é –º–æ–¥—É–ª—è - –∏–º—è –º–æ–≥–ª–æ –∏–∑–º–µ–Ω–∏—Ç—å—Å—è",
                    "–ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –≤–µ—Å—å –º–æ–¥—É–ª—å: import module_name",
                    "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –º–æ–¥—É–ª—è"
                ]
            else:
                return [
                    "Check if the name exists in the module: dir(module_name)",
                    "Make sure you're using the correct name",
                    "Check the module version - the name might have changed",
                    "Import the entire module: import module_name",
                    "Check the module documentation"
                ]
        elif "attempted relative import" in error_message:
            return [
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –∏–º–ø–æ—Ä—Ç –≤–º–µ—Å—Ç–æ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–≥–æ",
                "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∫ –º–æ–¥—É–ª—å: python -m package.module",
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–∫–µ—Ç–∞ –∏ __init__.py —Ñ–∞–π–ª—ã",
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ sys.path –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—É—Ç–∏ –∫ –º–æ–¥—É–ª—é"
            ]
        else:
            return [
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –∏–º–ø–æ—Ä—Ç–∞",
                "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –º–æ–¥—É–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –¥–æ—Å—Ç—É–ø–µ–Ω",
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º –º–æ–¥—É–ª—è",
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä Python"
            ]
