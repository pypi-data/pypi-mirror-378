"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è OSError –∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
OSError and related errors handler
"""

import os
from typing import Optional, Any
from .base import BaseHandler


class OSErrorHandler(BaseHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è OSError - –æ—à–∏–±–æ–∫ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
    Handler for OSError - operating system errors"""
    
    def explain(self, exception: OSError, traceback_obj: Optional[Any] = None) -> str:
        """
        –û–±—ä—è—Å–Ω—è–µ—Ç OSError –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
        Explains OSError in simple terms
        
        Args:
            exception: OSError –¥–ª—è –æ–±—ä—è—Å–Ω–µ–Ω–∏—è / OSError to explain
            traceback_obj: –û–±—ä–µ–∫—Ç —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∏ / Traceback object
            
        Returns:
            –ß–µ–ª–æ–≤–µ–∫–æ-—á–∏—Ç–∞–µ–º–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ / Human-readable explanation
        """
        error_message = str(exception)
        errno = getattr(exception, 'errno', None)
        
        if self._get_language() == "ru":
            explanation = f"üíª –û—à–∏–±–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã: {error_message}"
        else:
            explanation = f"üíª Operating system error: {error_message}"
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫
        if errno:
            explanation += self._explain_by_errno(errno)
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        if "Permission denied" in error_message or "permission denied" in error_message:
            explanation = self._explain_permission_denied(error_message)
        elif "No such file or directory" in error_message:
            explanation = self._explain_file_not_found(error_message)
        elif "Is a directory" in error_message:
            explanation = self._explain_is_directory(error_message)
        elif "Not a directory" in error_message:
            explanation = self._explain_not_directory(error_message)
        elif "Device or resource busy" in error_message:
            explanation = self._explain_device_busy(error_message)
        elif "No space left" in error_message:
            explanation = self._explain_no_space(error_message)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        suggestions = self.get_suggestions(exception)
        if suggestions:
            if self._get_language() == "ru":
                explanation += "\n\nüîß –ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:"
            else:
                explanation += "\n\nüîß How to fix:"
            for i, suggestion in enumerate(suggestions, 1):
                explanation += f"\n{i}. {suggestion}"
        
        return explanation
    
    def _explain_by_errno(self, errno: int) -> str:
        """–û–±—ä—è—Å–Ω—è–µ—Ç –æ—à–∏–±–∫—É –ø–æ –∫–æ–¥—É errno / Explains error by errno code"""
        errno_explanations = {
            1: "Operation not permitted",
            2: "No such file or directory", 
            3: "No such process",
            4: "Interrupted system call",
            5: "Input/output error",
            6: "No such device or address",
            7: "Argument list too long",
            8: "Exec format error",
            9: "Bad file descriptor",
            10: "No child processes",
            11: "Resource temporarily unavailable",
            12: "Cannot allocate memory",
            13: "Permission denied",
            14: "Bad address",
            15: "Block device required",
            16: "Device or resource busy",
            17: "File exists",
            18: "Invalid cross-device link",
            19: "No such device",
            20: "Not a directory",
            21: "Is a directory",
            22: "Invalid argument",
            23: "Too many open files in system",
            24: "Too many open files",
            25: "Inappropriate ioctl for device",
            26: "Text file busy",
            27: "File too large",
            28: "No space left on device",
            29: "Illegal seek",
            30: "Read-only file system",
            31: "Too many links",
            32: "Broken pipe",
            33: "Numerical argument out of domain",
            34: "Numerical result out of range",
            35: "Resource deadlock avoided",
            36: "File name too long",
            37: "No locks available",
            38: "Function not implemented",
            39: "Directory not empty",
            40: "Too many levels of symbolic links",
        }
        
        explanation = errno_explanations.get(errno, "")
        if explanation:
            if self._get_language() == "ru":
                return f"\nüìã –ö–æ–¥ –æ—à–∏–±–∫–∏ {errno}: {explanation}"
            else:
                return f"\nüìã Error code {errno}: {explanation}"
        return ""
    
    def _explain_permission_denied(self, error_message: str) -> str:
        """–û–±—ä—è—Å–Ω—è–µ—Ç –æ—à–∏–±–∫—É –¥–æ—Å—Ç—É–ø–∞ / Explains permission denied error"""
        if self._get_language() == "ru":
            return "üîí –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏"
        else:
            return "üîí Insufficient permissions to perform the operation"
    
    def _explain_file_not_found(self, error_message: str) -> str:
        """–û–±—ä—è—Å–Ω—è–µ—Ç –æ—à–∏–±–∫—É –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ñ–∞–π–ª–∞ / Explains file not found error"""
        if self._get_language() == "ru":
            return "üìÅ –§–∞–π–ª –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        else:
            return "üìÅ File or directory not found"
    
    def _explain_is_directory(self, error_message: str) -> str:
        """–û–±—ä—è—Å–Ω—è–µ—Ç –æ—à–∏–±–∫—É '—ç—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è' / Explains 'is a directory' error"""
        if self._get_language() == "ru":
            return "üìÇ –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é —Å —Ñ–∞–π–ª–æ–º –Ω–∞–¥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–µ–π"
        else:
            return "üìÇ Attempt to perform file operation on a directory"
    
    def _explain_not_directory(self, error_message: str) -> str:
        """–û–±—ä—è—Å–Ω—è–µ—Ç –æ—à–∏–±–∫—É '–Ω–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è' / Explains 'not a directory' error"""
        if self._get_language() == "ru":
            return "üìÑ –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é —Å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–µ–π –Ω–∞–¥ —Ñ–∞–π–ª–æ–º"
        else:
            return "üìÑ Attempt to perform directory operation on a file"
    
    def _explain_device_busy(self, error_message: str) -> str:
        """–û–±—ä—è—Å–Ω—è–µ—Ç –æ—à–∏–±–∫—É '—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∑–∞–Ω—è—Ç–æ' / Explains 'device busy' error"""
        if self._get_language() == "ru":
            return "‚è≥ –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏–ª–∏ —Ä–µ—Å—É—Ä—Å –∑–∞–Ω—è—Ç –¥—Ä—É–≥–∏–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º"
        else:
            return "‚è≥ Device or resource is busy with another process"
    
    def _explain_no_space(self, error_message: str) -> str:
        """–û–±—ä—è—Å–Ω—è–µ—Ç –æ—à–∏–±–∫—É '–Ω–µ—Ç –º–µ—Å—Ç–∞' / Explains 'no space' error"""
        if self._get_language() == "ru":
            return "üíæ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ"
        else:
            return "üíæ Not enough disk space"
    
    def get_suggestions(self, exception: OSError) -> list[str]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é OSError / Returns suggestions for fixing OSError"""
        error_message = str(exception)
        
        if "Permission denied" in error_message:
            if self._get_language() == "ru":
                return [
                    "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏",
                    "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ chmod –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞",
                    "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥—Ä—É–≥–∏–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º"
                ]
            else:
                return [
                    "Check file or directory permissions",
                    "Run the program as administrator",
                    "Use chmod to change access permissions",
                    "Check that the file is not locked by another process"
                ]
        elif "No such file or directory" in error_message:
            if self._get_language() == "ru":
                return [
                    "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É",
                    "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
                    "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –≤–º–µ—Å—Ç–æ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–≥–æ"
                ]
            else:
                return [
                    "Check the file path is correct",
                    "Make sure the file exists",
                    "Check that the directory exists",
                    "Use absolute path instead of relative"
                ]
        elif "No space left" in error_message:
            if self._get_language() == "ru":
                return [
                    "–û—Å–≤–æ–±–æ–¥–∏—Ç–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ",
                    "–£–¥–∞–ª–∏—Ç–µ –Ω–µ–Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã",
                    "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ–µ –º–µ—Å—Ç–æ: df -h",
                    "–û—á–∏—Å—Ç–∏—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"
                ]
            else:
                return [
                    "Free up disk space",
                    "Delete unnecessary files",
                    "Check available space: df -h",
                    "Clean temporary files"
                ]
        else:
            if self._get_language() == "ru":
                return [
                    "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏",
                    "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ä–µ—Å—É—Ä—Å –¥–æ—Å—Ç—É–ø–µ–Ω",
                    "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞",
                    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é –ø–æ–∑–∂–µ"
                ]
            else:
                return [
                    "Check the operation is correct",
                    "Make sure the resource is available",
                    "Check access permissions",
                    "Try the operation again later"
                ]
