Metadata-Version: 2.4
Name: openide-client
Version: 1.1.0
Summary: Python client library for OpenIDE API
Home-page: https://github.com/openide/openide-client
Author: OpenIDE Team
Author-email: OpenIDE Team <team@openide.dev>
License: MIT
Project-URL: Homepage, https://github.com/openide/openide-client
Project-URL: Documentation, https://openide.dev/docs
Project-URL: Repository, https://github.com/openide/openide-client
Project-URL: Bug Tracker, https://github.com/openide/openide-client/issues
Keywords: openide,container,api,client,python
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests>=2.25.0
Requires-Dist: click>=8.0.0
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# OpenIDE Client

Python –∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å OpenIDE - –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.

## üöÄ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

- **–ò–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞** - —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –¥–ª—è –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã
- **HTTP API** - REST API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏
- **Python/Node.js** - –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
- **–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è** - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ venv –∏ npm –æ–∫—Ä—É–∂–µ–Ω–∏—è–º–∏
- **–§–∞–π–ª–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏** - —Ä–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏ –∏ –ø–∞–ø–∫–∞–º–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö
- **Simple –∫–æ–º–∞–Ω–¥—ã** - —É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤

## üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞

```bash
pip install openide-client
```

## üîß –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

### –ë–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

```python
from openide_client import OpenIDEClient, OpenIDEConfig

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
config = OpenIDEConfig(
    openide_directory="B:/Projects/Cursor/OpenIDE",
    timeout=30
)

# –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
client = OpenIDEClient(config)

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
result = client.run_container(
    image="ubuntu:latest",
    command="echo Hello World!",
    detach=True
)
print(f"Container ID: {result['container_id']}")

# –°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
containers = client.list_containers()
print(f"Active containers: {len(containers)}")

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
client.stop_container(result['container_id'])

# –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
client.remove_container(result['container_id'])
```

### HTTP API –∫–ª–∏–µ–Ω—Ç

```python
import requests

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API
response = requests.get('http://localhost:5000/api/health')
print(f"API Status: {response.json()}")

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
response = requests.post('http://localhost:5000/api/containers', json={
    'image': 'ubuntu:latest',
    'command': 'echo Hello World!',
    'detach': True
})
container = response.json()
print(f"Container ID: {container['container_id']}")

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
response = requests.post(f'http://localhost:5000/api/containers/{container["container_id"]}/exec', json={
    'command': 'ls -la'
})
result = response.json()
print(f"Command result: {result['result']}")
```

### Simple –∫–æ–º–∞–Ω–¥—ã

```python
# –°–æ–∑–¥–∞–Ω–∏–µ venv
client.exec_command(container_id, "venv myenv{3.13.5}")

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
client.exec_command(container_id, "file create pyfile{hello}")
client.exec_command(container_id, "file create filename{test.txt}")

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫
client.exec_command(container_id, "folder create foldername{src}")

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
client.exec_command(container_id, "localpip install requests")

# –ó–∞–ø—É—Å–∫ Python —Å–∫—Ä–∏–ø—Ç–∞
client.exec_command(container_id, "run: python{hello.py}")
```

## üìö API Reference

### OpenIDEClient

–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å OpenIDE.

#### –ú–µ—Ç–æ–¥—ã

- `run_container(image, command, **kwargs)` - –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
- `list_containers()` - —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
- `stop_container(container_id)` - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
- `remove_container(container_id)` - —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
- `inspect_container(container_id)` - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
- `exec_command(container_id, command)` - –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã

### OpenIDEConfig

–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞.

#### –ü–∞—Ä–∞–º–µ—Ç—Ä—ã

- `openide_directory` - –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ OpenIDE
- `timeout` - —Ç–∞–π–º–∞—É—Ç –æ–ø–µ—Ä–∞—Ü–∏–π (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 30 —Å–µ–∫)
- `api_key` - API –∫–ª—é—á –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏

## üåê HTTP API

### –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã

| –ú–µ—Ç–æ–¥ | –≠–Ω–¥–ø–æ–∏–Ω—Ç | –û–ø–∏—Å–∞–Ω–∏–µ |
|-------|----------|----------|
| GET | `/api/health` | –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API |
| GET | `/api/containers` | –°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ |
| POST | `/api/containers` | –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ |
| GET | `/api/containers/{id}` | –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ |
| DELETE | `/api/containers/{id}` | –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ |
| POST | `/api/containers/{id}/exec` | –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã |
| GET | `/api/system` | –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ |

### –ó–∞–ø—É—Å–∫ HTTP API —Å–µ—Ä–≤–µ—Ä–∞

```bash
# –£—Å—Ç–∞–Ω–æ–≤–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
pip install flask flask-cors

# –ó–∞–ø—É—Å—Ç–∏ HTTP API —Å–µ—Ä–≤–µ—Ä
python openide_http_api.py --host 0.0.0.0 --port 5000
```

## üîë API –∫–ª—é—á–∏

```bash
# –°–æ–∑–¥–∞–Ω–∏–µ API –∫–ª—é—á–∞
openide api-generate "My API Key" --permissions "run,ps,inspect,exec"

# –°–ø–∏—Å–æ–∫ API –∫–ª—é—á–µ–π
openide api-keys
```

## üìñ –ü—Ä–∏–º–µ—Ä—ã

### CI/CD Pipeline

```python
def deploy_application():
    client = OpenIDEClient(config)
    
    # –°–æ–±–µ—Ä–∏ –æ–±—Ä–∞–∑
    build_result = client.build_image("./Dockerfile", "myapp:latest")
    print("‚úÖ –û–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω")
    
    # –ó–∞–ø—É—Å—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    container = client.run_container(
        image="myapp:latest",
        command="python app.py",
        detach=True,
        ports={"8080": "8080"}
    )
    print(f"‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ: {container['container_id']}")
    
    return container['container_id']
```

### –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤

```python
import time

def monitor_containers():
    client = OpenIDEClient(config)
    
    while True:
        containers = client.list_containers()
        print(f"Active containers: {len(containers)}")
        
        for container in containers:
            print(f"ID: {container['id']}, Status: {container['status']}")
        
        time.sleep(5)

# –ó–∞–ø—É—Å—Ç–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
monitor_containers()
```

## üõ†Ô∏è –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞

### –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

```bash
git clone https://github.com/artemjs/OpenIDE.git
cd OpenIDE
pip install -e .
```

### –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤

```bash
pytest tests/
```

### –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞

```bash
black openide_client/
flake8 openide_client/
```

## üìÑ –õ–∏—Ü–µ–Ω–∑–∏—è

MIT License

## ü§ù –í–∫–ª–∞–¥ –≤ –ø—Ä–æ–µ–∫—Ç

1. –§–æ—Ä–∫–Ω–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
2. –°–æ–∑–¥–∞–π—Ç–µ –≤–µ—Ç–∫—É –¥–ª—è –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ (`git checkout -b feature/amazing-feature`)
3. –ó–∞—Ñ–∏–∫—Å–∏—Ä—É–π—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è (`git commit -m 'Add amazing feature'`)
4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ –≤–µ—Ç–∫—É (`git push origin feature/amazing-feature`)
5. –û—Ç–∫—Ä–æ–π—Ç–µ Pull Request

## üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞

- **GitHub Issues**: https://github.com/artemjs/OpenIDE/issues
- **–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è**: https://github.com/artemjs/OpenIDE/blob/main/README.md

## üéØ Roadmap

- [ ] –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤
- [ ] Web UI –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏
- [ ] –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ IDE
- [ ] –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Kubernetes
- [ ] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

---

**–£–¥–∞—á–Ω–æ–≥–æ –∫–æ–¥–∏–Ω–≥–∞! üöÄ**
