"use strict";(self.webpackChunk_atoti_jupyterlab_extension=self.webpackChunk_atoti_jupyterlab_extension||[]).push([[2233,4614],{12233:(e,s,n)=>{n.r(s),n.d(s,{defaultServerKey:()=>t,fixIncompleteSemverVersion:()=>r,syncDataModel:()=>c,version:()=>u});const t="default",a=/^(?<major>\d+)\.(?<minor>\d+)-(?<prereleaseIdentifier>.+)/,r=e=>{const s=a.exec(e);return s?.groups?`${s.groups.major}.${s.groups.minor}.0-${s.groups.prereleaseIdentifier}`:e};var o=n(82988);const c=e=>{const s=`${e.url.replace(/^http/,"ws")}/atoti/discovery`;let n;const t=()=>{const{connectionStatus:t}=e;"connected"===t?(n=new WebSocket(s),n.addEventListener("message",(({data:s})=>{const n=JSON.parse(s),t=(0,o.v)(n);e.__UNSAFE_setDataModel__(t)}))):"disconnected"===t&&n&&(n.close(),n=void 0)};t();const a=e.subscribeToConnectionStatus(t);return()=>{a(),n&&n.close()}},u="0.9.9"},82988:(e,s,n)=>{n.d(s,{v:()=>a});var t=n(31529);const a=e=>{const s=e.catalogs.map((e=>{const s=e.cubes.map((e=>(e=>{const s=e.dimensions.map((e=>{const s=e.hierarchies.map((e=>{const s=(0,t.keyBy)(e.levels.map(((e,s)=>({...e,index:s}))),"name");return{...e,levels:s}})),n=(0,t.keyBy)(s,"name");return{...e,hierarchies:n}})),{measures:n,kpis:a,sets:r,contextValues:o,measureGroups:c}=e;return{...e,dimensions:(0,t.keyBy)(s,"name"),measures:(0,t.keyBy)(n,"name"),kpis:(0,t.keyBy)(a,"name"),sets:(0,t.keyBy)(r,"name"),contextValues:(0,t.keyBy)(o,"name"),measureGroups:(0,t.keyBy)(c,"name")}})(e)));return{...e,cubes:(0,t.keyBy)(s,"name")}})),{contextValues:n}=e;return{catalogs:(0,t.keyBy)(s,"name"),contextValues:(0,t.keyBy)(n,"name")}}}}]);