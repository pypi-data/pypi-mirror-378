"use strict";(self.webpackChunk_atoti_jupyterlab_extension=self.webpackChunk_atoti_jupyterlab_extension||[]).push([[2320],{32948:(e,n,o)=>{function t(e){return 0===e.length?{numberOfRows:0,numberOfColumns:0}:{numberOfRows:e.length,numberOfColumns:e[0].length}}o.d(n,{Q:()=>t})},92320:(e,n,o)=>{o.d(n,{getSelectionStatistics:()=>s});var t=o(32948);function s({selection:e,cells:{bodyCells:n,staticHeaderCells:o,columnHeaderCells:s,rowHeaderCells:u},hiddenFrozenColumns:r,hiddenScrollableColumns:m}){const l={},a=new Set;return e.forEach((e=>{[[e.body,n,m],[e.columnHeader,s,m],[e.staticHeader,o,r],[e.rowHeader,u,r]].forEach((([e,n,o])=>{const{numberOfRows:s,numberOfColumns:u}=void 0!==n&&n.length>0?(0,t.Q)(n):{numberOfRows:0,numberOfColumns:0};if(e&&n)for(let t=e.rows.from;t<=Math.min(e.rows.to,s-1);t++)for(let s=e.columns.from;s<=Math.min(e.columns.to,u-1);s++){const e=`${t}:${s}`;if(!a.has(e)&&!o.has(s)){a.add(e);const o=n[t]?.[s];if(o){const e=Number(o.value);isNaN(e)||(l.sum=(l.sum??0)+e,l.min=Math.min(l.min??e,e),l.max=Math.max(l.max??e,e),l.countNumbers=(l.countNumbers??0)+1),l.count=(l.count??0)+1}}}}))})),{...l,...l.sum&&l.countNumbers?{avg:l.sum/l.countNumbers}:{}}}}}]);