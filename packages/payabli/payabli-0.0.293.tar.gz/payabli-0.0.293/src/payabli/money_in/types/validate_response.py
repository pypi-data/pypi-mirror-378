# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from ...types.is_success import IsSuccess
from ...types.response_text import ResponseText
from .validate_response_data import ValidateResponseData


class ValidateResponse(UniversalBaseModel):
    """
    Response for card validation endpoint
    """

    response_text: typing_extensions.Annotated[ResponseText, FieldMetadata(alias="responseText")]
    is_success: typing_extensions.Annotated[IsSuccess, FieldMetadata(alias="isSuccess")]
    response_data: typing_extensions.Annotated[ValidateResponseData, FieldMetadata(alias="responseData")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
