# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.serialization import FieldMetadata
from .key_value_array import KeyValueArray
from .notification_log import NotificationLog
from .string_string_key_value_pair import StringStringKeyValuePair


class NotificationLogDetail(NotificationLog):
    web_headers: typing_extensions.Annotated[
        typing.Optional[typing.List[StringStringKeyValuePair]], FieldMetadata(alias="webHeaders")
    ] = None
    response_headers: typing_extensions.Annotated[
        typing.Optional[typing.List[KeyValueArray]], FieldMetadata(alias="responseHeaders")
    ] = None
    response_content: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="responseContent")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
