# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .query_transfer_summary import QueryTransferSummary
from .transfer_detail_record import TransferDetailRecord


class QueryTransferDetailResponse(UniversalBaseModel):
    records: typing_extensions.Annotated[typing.List[TransferDetailRecord], FieldMetadata(alias="Records")] = (
        pydantic.Field()
    )
    """
    List of transfer detail records
    """

    summary: typing_extensions.Annotated[QueryTransferSummary, FieldMetadata(alias="Summary")] = pydantic.Field()
    """
    Summary of the transfer details query
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
