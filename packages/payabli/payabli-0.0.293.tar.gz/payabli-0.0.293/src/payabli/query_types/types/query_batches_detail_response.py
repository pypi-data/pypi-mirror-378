# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .batch_detail_response_record import BatchDetailResponseRecord
from .batch_detail_response_summary import BatchDetailResponseSummary


class QueryBatchesDetailResponse(UniversalBaseModel):
    """
    Response body for queries about batch details.
    """

    records: typing_extensions.Annotated[typing.List[BatchDetailResponseRecord], FieldMetadata(alias="Records")]
    summary: typing_extensions.Annotated[BatchDetailResponseSummary, FieldMetadata(alias="Summary")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
