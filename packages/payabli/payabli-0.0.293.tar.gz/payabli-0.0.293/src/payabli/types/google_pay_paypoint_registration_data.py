# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .entry import Entry
from .google_wallet_data import GoogleWalletData
from .is_enabled import IsEnabled


class GooglePayPaypointRegistrationData(UniversalBaseModel):
    entry: typing.Optional[Entry] = None
    is_enabled: typing_extensions.Annotated[typing.Optional[IsEnabled], FieldMetadata(alias="isEnabled")] = None
    wallet_type: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="walletType")] = pydantic.Field(
        default=None
    )
    """
    The wallet type. In this context it will always be `googlePay`.
    """

    wallet_data: typing_extensions.Annotated[typing.Optional[GoogleWalletData], FieldMetadata(alias="walletData")] = (
        None
    )

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
