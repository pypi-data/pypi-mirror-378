# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .is_success import IsSuccess
from .response_text import ResponseText
from .responsedatanonobject import Responsedatanonobject


class PayabliApiResponseUserMfa(UniversalBaseModel):
    inactive_token_time: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="inactiveTokenTime")] = (
        None
    )
    is_success: typing_extensions.Annotated[typing.Optional[IsSuccess], FieldMetadata(alias="isSuccess")] = None
    remaining: typing.Optional[int] = None
    response_data: typing_extensions.Annotated[
        typing.Optional[Responsedatanonobject], FieldMetadata(alias="responseData")
    ] = None
    response_text: typing_extensions.Annotated[ResponseText, FieldMetadata(alias="responseText")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
