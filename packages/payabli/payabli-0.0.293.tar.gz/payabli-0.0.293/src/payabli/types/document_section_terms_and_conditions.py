# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .document_section_terms_and_conditions_tc_links_item import DocumentSectionTermsAndConditionsTcLinksItem
from .visible import Visible


class DocumentSectionTermsAndConditions(UniversalBaseModel):
    tc_links: typing_extensions.Annotated[
        typing.Optional[typing.List[DocumentSectionTermsAndConditionsTcLinksItem]], FieldMetadata(alias="tcLinks")
    ] = None
    visible: typing.Optional[Visible] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
