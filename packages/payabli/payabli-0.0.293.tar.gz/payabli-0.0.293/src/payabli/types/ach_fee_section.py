# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .template_element import TemplateElement
from .visible import Visible


class AchFeeSection(UniversalBaseModel):
    advanced_settlement_ach_fee: typing_extensions.Annotated[
        typing.Optional[TemplateElement], FieldMetadata(alias="advancedSettlementAchFee")
    ] = None
    annual_ach_fee: typing_extensions.Annotated[
        typing.Optional[TemplateElement], FieldMetadata(alias="annualAchFee")
    ] = None
    chargeback_ach_fee: typing_extensions.Annotated[
        typing.Optional[TemplateElement], FieldMetadata(alias="chargebackAchFee")
    ] = None
    early_termination_ach_fee: typing_extensions.Annotated[
        typing.Optional[TemplateElement], FieldMetadata(alias="earlyTerminationAchFee")
    ] = None
    monthly_ach_fee: typing_extensions.Annotated[
        typing.Optional[TemplateElement], FieldMetadata(alias="monthlyAchFee")
    ] = None
    quarterly_pci_ach_fee: typing_extensions.Annotated[
        typing.Optional[TemplateElement], FieldMetadata(alias="quarterlyPCIAchFee")
    ] = None
    returned_ach_fee: typing_extensions.Annotated[
        typing.Optional[TemplateElement], FieldMetadata(alias="returnedAchFee")
    ] = None
    same_day_ach_fee: typing_extensions.Annotated[
        typing.Optional[TemplateElement], FieldMetadata(alias="sameDayAchFee")
    ] = None
    sunday_origination_ach_fee: typing_extensions.Annotated[
        typing.Optional[TemplateElement], FieldMetadata(alias="sundayOriginationAchFee")
    ] = None
    verify_bank_ach_fee: typing_extensions.Annotated[
        typing.Optional[TemplateElement], FieldMetadata(alias="verifyBankAchFee")
    ] = None
    verify_fund_ach_fee: typing_extensions.Annotated[
        typing.Optional[TemplateElement], FieldMetadata(alias="verifyFundAchFee")
    ] = None
    verify_negative_ach_fee: typing_extensions.Annotated[
        typing.Optional[TemplateElement], FieldMetadata(alias="verifyNegativeAchFee")
    ] = None
    visible: typing.Optional[Visible] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
