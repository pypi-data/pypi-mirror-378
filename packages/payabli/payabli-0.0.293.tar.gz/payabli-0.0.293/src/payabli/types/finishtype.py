# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class Finishtype(UniversalBaseModel):
    calendar: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Flag to enable 'calendar' option
    """

    until_cancelled: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="untilCancelled")] = (
        pydantic.Field(default=None)
    )
    """
    Flag to enable 'untilCancelled' option
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
