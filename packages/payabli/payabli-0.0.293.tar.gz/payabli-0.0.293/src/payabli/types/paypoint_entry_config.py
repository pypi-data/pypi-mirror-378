# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .payabli_pages import PayabliPages
from .paypoint_data import PaypointData


class PaypointEntryConfig(UniversalBaseModel):
    entry_comment: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="EntryComment")] = None
    entry_logo: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="EntryLogo")] = None
    entry_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="EntryName")] = None
    entry_pages: typing_extensions.Annotated[
        typing.Optional[typing.List[PayabliPages]], FieldMetadata(alias="EntryPages")
    ] = None
    entry_subtitle: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="EntrySubtitle")] = None
    entry_title: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="EntryTitle")] = None
    id_entry: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="IdEntry")] = None
    paypoint: typing_extensions.Annotated[typing.Optional[PaypointData], FieldMetadata(alias="Paypoint")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
