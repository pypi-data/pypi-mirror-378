# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .link_data import LinkData


class BAddress(UniversalBaseModel):
    baddress: typing.Optional[LinkData] = None
    baddress_1: typing_extensions.Annotated[typing.Optional[LinkData], FieldMetadata(alias="baddress1")] = None
    bcity: typing.Optional[LinkData] = None
    bcountry: typing.Optional[LinkData] = None
    bstate: typing.Optional[LinkData] = None
    bzip: typing.Optional[LinkData] = None
    maddress: typing.Optional[LinkData] = None
    maddress_1: typing_extensions.Annotated[typing.Optional[LinkData], FieldMetadata(alias="maddress1")] = None
    mcity: typing.Optional[LinkData] = None
    mcountry: typing.Optional[LinkData] = None
    mstate: typing.Optional[LinkData] = None
    mzip: typing.Optional[LinkData] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
