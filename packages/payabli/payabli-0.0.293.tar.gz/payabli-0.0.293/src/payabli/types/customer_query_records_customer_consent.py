# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .customer_query_records_customer_consent_e_communication import CustomerQueryRecordsCustomerConsentECommunication
from .customer_query_records_customer_consent_sms import CustomerQueryRecordsCustomerConsentSms


class CustomerQueryRecordsCustomerConsent(UniversalBaseModel):
    e_communication: typing_extensions.Annotated[
        typing.Optional[CustomerQueryRecordsCustomerConsentECommunication], FieldMetadata(alias="eCommunication")
    ] = pydantic.Field(default=None)
    """
    Describes the customer's email communications consent status.
    """

    sms: typing.Optional[CustomerQueryRecordsCustomerConsentSms] = pydantic.Field(default=None)
    """
    Describes the customer's SMS communications consent status.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
