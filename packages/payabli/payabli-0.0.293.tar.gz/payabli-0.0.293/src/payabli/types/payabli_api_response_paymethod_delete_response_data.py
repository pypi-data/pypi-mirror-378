# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .method_reference_id import MethodReferenceId
from .result_code import ResultCode
from .resulttext import Resulttext


class PayabliApiResponsePaymethodDeleteResponseData(UniversalBaseModel):
    reference_id: typing_extensions.Annotated[
        typing.Optional[MethodReferenceId], FieldMetadata(alias="referenceId")
    ] = pydantic.Field(default=None)
    """
    The method's reference ID.
    """

    result_code: typing_extensions.Annotated[typing.Optional[ResultCode], FieldMetadata(alias="resultCode")] = None
    result_text: typing_extensions.Annotated[typing.Optional[Resulttext], FieldMetadata(alias="resultText")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
