# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class PayabliCredentialsPascal(UniversalBaseModel):
    service: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="Service")] = None
    mode: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="Mode")] = None
    min_ticket: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="MinTicket")] = None
    max_ticket: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="MaxTicket")] = None
    cfee_fix: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="CfeeFix")] = None
    cfee_float: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="CfeeFloat")] = None
    cfee_min: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="CfeeMin")] = None
    cfee_max: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="CfeeMax")] = None
    account_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="AccountId")] = None
    reference_id: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="ReferenceId")] = None
    accept_same_day_ach: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="acceptSameDayACH")] = (
        None
    )
    currency: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="Currency")] = pydantic.Field(
        default=None
    )
    """
    The default currency for the paypoint, either `USD` or `CAD`.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
