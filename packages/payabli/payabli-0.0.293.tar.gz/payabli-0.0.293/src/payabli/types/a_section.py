# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class ASection(UniversalBaseModel):
    minimum_documents: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="minimumDocuments")] = None
    multiple_contacts: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="multipleContacts")] = (
        None
    )
    multiple_owners: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="multipleOwners")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
