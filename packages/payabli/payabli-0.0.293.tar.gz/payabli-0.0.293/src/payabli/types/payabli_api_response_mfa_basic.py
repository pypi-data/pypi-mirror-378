# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .is_success import IsSuccess
from .mfa import Mfa
from .mfa_validation_code import MfaValidationCode
from .response_text import ResponseText


class PayabliApiResponseMfaBasic(UniversalBaseModel):
    is_success: typing_extensions.Annotated[typing.Optional[IsSuccess], FieldMetadata(alias="isSuccess")] = None
    mfa: typing.Optional[Mfa] = None
    mfa_mode: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="mfaMode")] = pydantic.Field(
        default=None
    )
    """
    The mode of multi-factor authentication used.
    """

    mfa_validation_code: typing_extensions.Annotated[
        typing.Optional[MfaValidationCode], FieldMetadata(alias="mfaValidationCode")
    ] = None
    response_data: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="responseData")] = (
        pydantic.Field(default=None)
    )
    """
    Data returned by the response, masked for security.
    """

    response_text: typing_extensions.Annotated[ResponseText, FieldMetadata(alias="responseText")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
