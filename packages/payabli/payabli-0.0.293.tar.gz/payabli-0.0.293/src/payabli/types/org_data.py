# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .file_content import FileContent
from .orgaddress import Orgaddress
from .orgid import Orgid
from .orgname import Orgname
from .orgtype import Orgtype


class OrgData(UniversalBaseModel):
    id_org: typing_extensions.Annotated[typing.Optional[Orgid], FieldMetadata(alias="idOrg")] = None
    org_address: typing_extensions.Annotated[typing.Optional[Orgaddress], FieldMetadata(alias="orgAddress")] = None
    org_logo: typing_extensions.Annotated[typing.Optional[FileContent], FieldMetadata(alias="orgLogo")] = None
    org_name: typing_extensions.Annotated[typing.Optional[Orgname], FieldMetadata(alias="orgName")] = None
    org_status: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="orgStatus")] = pydantic.Field(
        default=None
    )
    """
    The paypoint's status. 
    
    Active - `1`
    
    Inactive - 0
    """

    org_type: typing_extensions.Annotated[typing.Optional[Orgtype], FieldMetadata(alias="orgType")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
