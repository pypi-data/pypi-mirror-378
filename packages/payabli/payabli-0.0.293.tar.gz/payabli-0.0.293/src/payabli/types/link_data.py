# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .read_only import ReadOnly
from .required_element import RequiredElement
from .value_templates import ValueTemplates


class LinkData(UniversalBaseModel):
    ro: typing.Optional[ReadOnly] = None
    rq: typing.Optional[RequiredElement] = None
    validator: typing.Optional[str] = pydantic.Field(default=None)
    """
    The type of validation applied to the field. Available values: 
    - text
    - alpha
    - ein
    - url
    - phone
    - alphanumeric
    - zipcode
    - numbers
    - float
    - ssn
    - email
    - routing
    """

    value: typing.Optional[ValueTemplates] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
