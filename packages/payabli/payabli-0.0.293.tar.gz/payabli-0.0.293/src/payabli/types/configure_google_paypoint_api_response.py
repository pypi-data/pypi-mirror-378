# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .google_pay_paypoint_registration_data import GooglePayPaypointRegistrationData
from .is_success import IsSuccess
from .page_identifier import PageIdentifier
from .response_text import ResponseText
from .responsecode import Responsecode


class ConfigureGooglePaypointApiResponse(UniversalBaseModel):
    is_success: typing_extensions.Annotated[IsSuccess, FieldMetadata(alias="isSuccess")]
    page_identifier: typing_extensions.Annotated[PageIdentifier, FieldMetadata(alias="pageIdentifier")]
    response_code: typing_extensions.Annotated[Responsecode, FieldMetadata(alias="responseCode")]
    response_data: typing_extensions.Annotated[GooglePayPaypointRegistrationData, FieldMetadata(alias="responseData")]
    response_text: typing_extensions.Annotated[ResponseText, FieldMetadata(alias="responseText")]
    room_id: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="roomId")] = pydantic.Field(
        default=None
    )
    """
    Field not in use on this endpoint
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
