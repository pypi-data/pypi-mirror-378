# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from ...types.customer_id import CustomerId
from ...types.is_success import IsSuccess
from ...types.response_text import ResponseText


class AddSubscriptionResponse(UniversalBaseModel):
    """
    Success response

    Examples
    --------
    from payabli.subscription import AddSubscriptionResponse

    AddSubscriptionResponse(
        response_text="Success",
        is_success=True,
        response_data=396,
        customer_id=4440,
    )
    """

    customer_id: typing_extensions.Annotated[typing.Optional[CustomerId], FieldMetadata(alias="customerId")] = None
    response_text: typing_extensions.Annotated[ResponseText, FieldMetadata(alias="responseText")]
    is_success: typing_extensions.Annotated[typing.Optional[IsSuccess], FieldMetadata(alias="isSuccess")] = None
    response_data: typing_extensions.Annotated[int, FieldMetadata(alias="responseData")] = pydantic.Field()
    """
    The identifier of the newly created subscription.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
