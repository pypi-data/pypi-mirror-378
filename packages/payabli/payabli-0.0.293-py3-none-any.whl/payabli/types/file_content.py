# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .file_content_ftype import FileContentFtype


class FileContent(UniversalBaseModel):
    """
    Contains details about a file. Max upload size is 30 MB.
    """

    f_content: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="fContent")] = pydantic.Field(
        default=None
    )
    """
    Content of file, Base64-encoded. Ignored if furl is specified. Max upload size is 30 MB.
    """

    filename: typing.Optional[str] = pydantic.Field(default=None)
    """
    The name of the attached file.
    """

    ftype: typing.Optional[FileContentFtype] = pydantic.Field(default=None)
    """
    The MIME type of the file (if content is provided)
    """

    furl: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional URL provided to show or download the file remotely
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
