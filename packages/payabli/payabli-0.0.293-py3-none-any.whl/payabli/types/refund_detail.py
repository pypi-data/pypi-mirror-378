# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .payment_categories import PaymentCategories
from .split_funding_refund_content import SplitFundingRefundContent


class RefundDetail(UniversalBaseModel):
    """
    Object containing details about the refund, including line items and optional split instructions.
    """

    categories: typing.Optional[typing.List[PaymentCategories]] = pydantic.Field(default=None)
    """
    Array of payment categories/line items describing the amount to be paid. Note: These categories are for information only and aren't validated against the total amount provided.
    """

    split_refunding: typing_extensions.Annotated[
        typing.Optional[typing.List[SplitFundingRefundContent]], FieldMetadata(alias="splitRefunding")
    ] = pydantic.Field(default=None)
    """
    Array of objects containing split instructions for the refund.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
