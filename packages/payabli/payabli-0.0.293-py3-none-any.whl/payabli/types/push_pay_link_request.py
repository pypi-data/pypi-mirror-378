# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class PushPayLinkRequest_Email(UniversalBaseModel):
    """
    Request body for the push paylink operation.
    """

    channel: typing.Literal["email"] = "email"
    additional_emails: typing_extensions.Annotated[
        typing.Optional[typing.List[str]], FieldMetadata(alias="additionalEmails")
    ] = None
    attach_file: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="attachFile")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class PushPayLinkRequest_Sms(UniversalBaseModel):
    """
    Request body for the push paylink operation.
    """

    channel: typing.Literal["sms"] = "sms"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


PushPayLinkRequest = typing.Union[PushPayLinkRequest_Email, PushPayLinkRequest_Sms]
