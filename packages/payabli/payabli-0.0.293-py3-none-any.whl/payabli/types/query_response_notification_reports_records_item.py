# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .created_at import CreatedAt


class QueryResponseNotificationReportsRecordsItem(UniversalBaseModel):
    created_at: typing_extensions.Annotated[typing.Optional[CreatedAt], FieldMetadata(alias="createdAt")] = None
    id: typing.Optional[int] = pydantic.Field(default=None)
    """
    Unique identifier for the report.
    """

    is_downloadable: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="isDownloadable")] = (
        pydantic.Field(default=None)
    )
    """
    Indicator of whether the report can be downloaded.
    """

    report_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="reportName")] = pydantic.Field(
        default=None
    )
    """
    Name of the report.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
