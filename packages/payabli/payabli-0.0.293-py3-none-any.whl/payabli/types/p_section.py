# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .link_data import LinkData


class PSection(UniversalBaseModel):
    avgmonthly: typing.Optional[LinkData] = None
    binperson: typing.Optional[LinkData] = None
    binphone: typing.Optional[LinkData] = None
    binweb: typing.Optional[LinkData] = None
    bsummary: typing.Optional[LinkData] = None
    highticketamt: typing.Optional[LinkData] = None
    mcc: typing.Optional[LinkData] = None
    ticketamt: typing.Optional[LinkData] = None
    when_charged: typing_extensions.Annotated[typing.Optional[LinkData], FieldMetadata(alias="whenCharged")] = None
    when_delivered: typing_extensions.Annotated[typing.Optional[LinkData], FieldMetadata(alias="whenDelivered")] = None
    when_provided: typing_extensions.Annotated[typing.Optional[LinkData], FieldMetadata(alias="whenProvided")] = None
    when_refunded: typing_extensions.Annotated[typing.Optional[LinkData], FieldMetadata(alias="whenRefunded")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
