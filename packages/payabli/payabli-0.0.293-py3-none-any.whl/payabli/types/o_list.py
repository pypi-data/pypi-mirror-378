# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .link_data import LinkData


class OList(UniversalBaseModel):
    oaddress: typing.Optional[LinkData] = None
    ocity: typing.Optional[LinkData] = None
    ocountry: typing.Optional[LinkData] = None
    odriverstate: typing.Optional[LinkData] = None
    ostate: typing.Optional[LinkData] = None
    ownerdob: typing.Optional[LinkData] = None
    ownerdriver: typing.Optional[LinkData] = None
    owneremail: typing.Optional[LinkData] = None
    ownername: typing.Optional[LinkData] = None
    ownerpercent: typing.Optional[LinkData] = None
    ownerphone_1: typing_extensions.Annotated[typing.Optional[LinkData], FieldMetadata(alias="ownerphone1")] = None
    ownerphone_2: typing_extensions.Annotated[typing.Optional[LinkData], FieldMetadata(alias="ownerphone2")] = None
    ownerssn: typing.Optional[LinkData] = None
    ownertitle: typing.Optional[LinkData] = None
    ozip: typing.Optional[LinkData] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
