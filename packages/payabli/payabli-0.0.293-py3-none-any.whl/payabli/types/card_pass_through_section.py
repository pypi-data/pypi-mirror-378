# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .card_type_pass import CardTypePass
from .visible import Visible


class CardPassThroughSection(UniversalBaseModel):
    multi_tier: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="multiTier")] = None
    tiers: typing.Optional[typing.List[CardTypePass]] = None
    visible: typing.Optional[Visible] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
