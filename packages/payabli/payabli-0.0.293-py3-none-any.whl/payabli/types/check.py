# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .ach_holder import AchHolder


class Check(UniversalBaseModel):
    ach_holder: typing_extensions.Annotated[AchHolder, FieldMetadata(alias="achHolder")] = pydantic.Field()
    """
    The checking accountholder's name.
    """

    method: typing.Literal["check"] = pydantic.Field(default="check")
    """
    Method to use for the transaction. Use `check` for a paper check transaction. When the method is `check`, then `paymentDetails.checkNumber` is required.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
