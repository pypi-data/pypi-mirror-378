# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .customer_query_records import CustomerQueryRecords
from .query_summary import QuerySummary


class QueryCustomerResponse(UniversalBaseModel):
    records: typing_extensions.Annotated[
        typing.Optional[typing.List[CustomerQueryRecords]], FieldMetadata(alias="Records")
    ] = None
    summary: typing_extensions.Annotated[typing.Optional[QuerySummary], FieldMetadata(alias="Summary")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
