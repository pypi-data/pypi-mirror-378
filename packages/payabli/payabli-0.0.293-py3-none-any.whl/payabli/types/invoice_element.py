# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .enabled import Enabled
from .label_element import LabelElement
from .order import Order


class InvoiceElement(UniversalBaseModel):
    enabled: typing.Optional[Enabled] = None
    invoice_link: typing_extensions.Annotated[typing.Optional[LabelElement], FieldMetadata(alias="invoiceLink")] = (
        pydantic.Field(default=None)
    )
    """
    Link to invoice
    """

    order: typing.Optional[Order] = None
    view_invoice_details: typing_extensions.Annotated[
        typing.Optional[LabelElement], FieldMetadata(alias="viewInvoiceDetails")
    ] = pydantic.Field(default=None)
    """
    Link to view invoice details
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
