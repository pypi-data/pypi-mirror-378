# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .authcode import Authcode
from .avsresponsetext import Avsresponsetext
from .customeridtrans import Customeridtrans
from .cvvresponsetext import Cvvresponsetext
from .method_reference_id import MethodReferenceId
from .referenceidtrans import Referenceidtrans
from .result_code import ResultCode
from .resulttext import Resulttext


class PayabliApiResponse0ResponseData(UniversalBaseModel):
    auth_code: typing_extensions.Annotated[typing.Optional[Authcode], FieldMetadata(alias="AuthCode")] = None
    avs_response_text: typing_extensions.Annotated[
        typing.Optional[Avsresponsetext], FieldMetadata(alias="avsResponseText")
    ] = None
    customer_id: typing_extensions.Annotated[typing.Optional[Customeridtrans], FieldMetadata(alias="CustomerId")] = None
    cvv_response_text: typing_extensions.Annotated[
        typing.Optional[Cvvresponsetext], FieldMetadata(alias="cvvResponseText")
    ] = None
    method_reference_id: typing_extensions.Annotated[
        typing.Optional[MethodReferenceId], FieldMetadata(alias="methodReferenceId")
    ] = None
    reference_id: typing_extensions.Annotated[typing.Optional[Referenceidtrans], FieldMetadata(alias="ReferenceId")] = (
        None
    )
    result_code: typing_extensions.Annotated[typing.Optional[ResultCode], FieldMetadata(alias="ResultCode")] = None
    result_text: typing_extensions.Annotated[typing.Optional[Resulttext], FieldMetadata(alias="ResultText")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
