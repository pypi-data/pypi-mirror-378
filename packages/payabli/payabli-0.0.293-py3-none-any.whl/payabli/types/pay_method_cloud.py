# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .device import Device
from .save_if_success import SaveIfSuccess


class PayMethodCloud(UniversalBaseModel):
    device: typing.Optional[Device] = None
    method: typing.Literal["cloud"] = pydantic.Field(default="cloud")
    """
    Method to use for the transaction. For cloud device transactions, the method is `cloud`.
    """

    save_if_success: typing_extensions.Annotated[
        typing.Optional[SaveIfSuccess], FieldMetadata(alias="saveIfSuccess")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
