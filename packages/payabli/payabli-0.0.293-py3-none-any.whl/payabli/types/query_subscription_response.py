# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .query_summary import QuerySummary
from .subscription_query_records import SubscriptionQueryRecords


class QuerySubscriptionResponse(UniversalBaseModel):
    """
    Subscription query response body.
    """

    records: typing_extensions.Annotated[typing.Optional[SubscriptionQueryRecords], FieldMetadata(alias="Records")] = (
        None
    )
    summary: typing_extensions.Annotated[typing.Optional[QuerySummary], FieldMetadata(alias="Summary")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
