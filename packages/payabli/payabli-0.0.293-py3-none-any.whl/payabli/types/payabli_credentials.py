# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class PayabliCredentials(UniversalBaseModel):
    account_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="accountId")] = None
    cfee_fix: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="cfeeFix")] = None
    cfee_float: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="cfeeFloat")] = None
    cfee_max: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="cfeeMax")] = None
    cfee_min: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="cfeeMin")] = None
    maxticket: typing.Optional[float] = None
    minticket: typing.Optional[float] = None
    mode: typing.Optional[int] = None
    reference_id: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="referenceId")] = None
    service: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
