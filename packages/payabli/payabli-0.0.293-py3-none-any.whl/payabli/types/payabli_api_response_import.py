# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .is_success import IsSuccess
from .page_identifier import PageIdentifier
from .payabli_api_response_import_response_data import PayabliApiResponseImportResponseData
from .response_text import ResponseText
from .responsecode import Responsecode


class PayabliApiResponseImport(UniversalBaseModel):
    is_success: typing_extensions.Annotated[typing.Optional[IsSuccess], FieldMetadata(alias="isSuccess")] = None
    page_identifier: typing_extensions.Annotated[
        typing.Optional[PageIdentifier], FieldMetadata(alias="pageIdentifier")
    ] = None
    response_code: typing_extensions.Annotated[typing.Optional[Responsecode], FieldMetadata(alias="responseCode")] = (
        None
    )
    response_data: typing_extensions.Annotated[
        typing.Optional[PayabliApiResponseImportResponseData], FieldMetadata(alias="responseData")
    ] = pydantic.Field(default=None)
    """
    The response data containing the result of the import operation.
    """

    response_text: typing_extensions.Annotated[ResponseText, FieldMetadata(alias="responseText")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
