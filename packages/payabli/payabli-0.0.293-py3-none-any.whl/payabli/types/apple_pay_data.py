# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .apple_pay_status_data import ApplePayStatusData
from .is_enabled import IsEnabled


class ApplePayData(UniversalBaseModel):
    """
    Details about the status of the Apple Pay service.
    """

    data: typing.Optional[ApplePayStatusData] = pydantic.Field(default=None)
    """
    This object is only returned when the domain verification check fails. If a domain has failed validation, this object contains information about the failure.
    """

    is_enabled: typing_extensions.Annotated[typing.Optional[IsEnabled], FieldMetadata(alias="isEnabled")] = (
        pydantic.Field(default=None)
    )
    """
    When `true`, Apple Pay is enabled.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
