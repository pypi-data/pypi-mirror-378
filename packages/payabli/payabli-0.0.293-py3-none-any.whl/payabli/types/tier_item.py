# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class TierItem(UniversalBaseModel):
    amountx_auth: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="amountxAuth")] = None
    high_pay_range: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="highPayRange")] = None
    low_pay_range: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="lowPayRange")] = None
    percentx_auth: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="percentxAuth")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
