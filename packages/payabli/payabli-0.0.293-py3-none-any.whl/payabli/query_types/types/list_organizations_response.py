# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from ...types.organization_query_record import OrganizationQueryRecord
from ...types.query_summary import QuerySummary


class ListOrganizationsResponse(UniversalBaseModel):
    records: typing_extensions.Annotated[typing.List[OrganizationQueryRecord], FieldMetadata(alias="Records")]
    summary: typing_extensions.Annotated[QuerySummary, FieldMetadata(alias="Summary")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
