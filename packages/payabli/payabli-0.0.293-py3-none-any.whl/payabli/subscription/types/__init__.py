# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .add_subscription_response import AddSubscriptionResponse
    from .remove_subscription_response import RemoveSubscriptionResponse
    from .request_schedule_payment_method import RequestSchedulePaymentMethod
    from .request_schedule_payment_method_initiator import RequestSchedulePaymentMethodInitiator
    from .set_pause import SetPause
    from .subscription_request_body import SubscriptionRequestBody
    from .update_subscription_response import UpdateSubscriptionResponse
_dynamic_imports: typing.Dict[str, str] = {
    "AddSubscriptionResponse": ".add_subscription_response",
    "RemoveSubscriptionResponse": ".remove_subscription_response",
    "RequestSchedulePaymentMethod": ".request_schedule_payment_method",
    "RequestSchedulePaymentMethodInitiator": ".request_schedule_payment_method_initiator",
    "SetPause": ".set_pause",
    "SubscriptionRequestBody": ".subscription_request_body",
    "UpdateSubscriptionResponse": ".update_subscription_response",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "AddSubscriptionResponse",
    "RemoveSubscriptionResponse",
    "RequestSchedulePaymentMethod",
    "RequestSchedulePaymentMethodInitiator",
    "SetPause",
    "SubscriptionRequestBody",
    "UpdateSubscriptionResponse",
]
