# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from ...types.entrypointfield import Entrypointfield
from .notification_request import NotificationRequest


class PaypointMoveRequest(UniversalBaseModel):
    entry_point: typing_extensions.Annotated[Entrypointfield, FieldMetadata(alias="entryPoint")]
    new_parent_organization_id: typing_extensions.Annotated[int, FieldMetadata(alias="newParentOrganizationId")] = (
        pydantic.Field()
    )
    """
    The ID for the paypoint's new parent organization.
    """

    notification_request: typing_extensions.Annotated[
        typing.Optional[NotificationRequest], FieldMetadata(alias="notificationRequest")
    ] = pydantic.Field(default=None)
    """
    Optional notification request object for a webhook
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
