# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .web_header_parameter import WebHeaderParameter


class NotificationRequest(UniversalBaseModel):
    notification_url: typing_extensions.Annotated[str, FieldMetadata(alias="notificationUrl")] = pydantic.Field()
    """
    Complete HTTP URL receiving the notification
    """

    web_header_parameters: typing_extensions.Annotated[
        typing.Optional[typing.List[WebHeaderParameter]], FieldMetadata(alias="webHeaderParameters")
    ] = pydantic.Field(default=None)
    """
    A dictionary of key-value pairs to be inserted in the header when the notification request is submitted
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
