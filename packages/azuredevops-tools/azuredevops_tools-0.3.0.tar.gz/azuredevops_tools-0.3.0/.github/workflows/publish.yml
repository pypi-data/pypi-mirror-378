name: Build and Publish to PyPI

on:
  # Trigger on new releases
  release:
    types: [published]
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI instead of PyPI'
        required: false
        default: false
        type: boolean

permissions:
  id-token: write  # For trusted publishing

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
    
    - name: Install dependencies
      run: |
        uv sync --all-extras
    
    - name: Run tests
      run: |
        uv run pytest tests/ || echo "No tests found, skipping..."
    
    - name: Run linting
      run: |
        uv run black --check src/ || echo "Black not configured, skipping..."
        uv run isort --check-only src/ || echo "isort not configured, skipping..."
        uv run flake8 src/ || echo "flake8 not configured, skipping..."

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: "3.13"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
    
    - name: Build package
      run: |
        uv build
    
    - name: Check package
      run: |
        uv venv
        uv pip install twine
        uv run twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  publish:
    needs: [test, build]
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.event.inputs.test_pypi == 'true' && 'testpypi' || 'pypi' }}
      url: ${{ github.event.inputs.test_pypi == 'true' && 'https://test.pypi.org/p/azuredevops-tools' || 'https://pypi.org/p/azuredevops-tools' }}
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v5
      with:
        name: dist
        path: dist/
    
    - name: Publish to Test PyPI
      if: github.event.inputs.test_pypi == 'true'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        verbose: true
    
    - name: Publish to PyPI
      if: github.event.inputs.test_pypi != 'true'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
