[build-system]
# A list of packages that are needed to build your package:
requires = ["setuptools", "wheel"]  # REQUIRED if [build-system] table is used
# The name of the Python object that frontends will use to perform the build:
build-backend = "setuptools.build_meta"  # If not defined, then legacy behavior can happen.


[project]
name = "vt-commons"
version = "0.0.1dev4"
description = "ðŸ”¥Reusable common utilities, interfaces and implementations for python projects."
readme = "README.md"
authors = [
    {name = "Suhas Krishna Srivastava", email = "suhas.srivastava@vaastav.tech"}
]
maintainers = [
    {name = "Suhas Krishna Srivastava", email = "suhas.srivastava@vaastav.tech"}
]
requires-python = ">=3.12"
# For a list of valid classifiers, see https://pypi.org/classifiers/
classifiers = [
  "Development Status :: 1 - Planning",

  "Intended Audience :: Developers",
  "Intended Audience :: Education",

  "Topic :: Education",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Utilities",

  # Specify the Python versions you support here. In particular, ensure
  # that you indicate you support Python 3. These classifiers are *not*
  # checked by "pip install". See instead "requires-python" key in this file.
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Programming Language :: Python :: 3.15",
  "Programming Language :: Python :: 3 :: Only",

  "Typing :: Typed"
]
license = "Apache-2.0"

[project.urls]
homepage = "https://github.com/Vaastav-Technologies/py-commons"
source = "https://github.com/Vaastav-Technologies/py-commons"
issues = "https://github.com/Vaastav-Technologies/py-commons/issues"


[dependency-groups]
dev = ["mypy", "ruff"]
doc = ['sphinx', 'sphinx-argparse']
test = ['pytest', 'pytest-cov']
multitest = ['tox']

[tool.setuptools.packages.find]
where = ["src"]
namespaces = true

[tool.tox]
legacy_tox_ini = """
    [tox]
    env_list =
        py312

    [testenv]
    deps =
      pytest
      sphinx
      sphinx-argparse
    commands =
      python -m pytest --doctest-glob=*.rst --doctest-modules .
      python -m doctest README.md
      sphinx-build -q -b doctest docs/source docs/build/doctest

    [testenv:docs]
    deps =
      sphinx
      sphinx-argparse
    commands =
      sphinx-build -q -b html docs/source docs/build/html
"""

[tool.pytest.ini_options]
addopts = ["--doctest-modules", # Test all the doctests
    "--doctest-glob=*.md"] # Test doctests included as examples in the md files.
