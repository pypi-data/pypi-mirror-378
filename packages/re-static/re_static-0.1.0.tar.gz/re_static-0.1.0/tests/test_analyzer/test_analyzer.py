from __future__ import annotations

from dataclasses import dataclass

from re_static.analyzer import Group, get_groups

# Generated by generate.py and manually reviewed


@dataclass(frozen=True)
class GroupDescription:
    name: str | None
    always_present: bool

    def with_index(self, index: int) -> Group:
        return Group(
            index=index,
            name=self.name,
            always_present=self.always_present,
        )


def always_present(name: str | None = None) -> GroupDescription:
    return GroupDescription(name=name, always_present=True)


def optional(name: str | None = None) -> GroupDescription:
    return GroupDescription(name=name, always_present=False)


def check(pattern: str, *want_groups: GroupDescription, flags: int = 0) -> None:
    got_groups = get_groups(pattern, flags=flags)
    _want_groups = [Group(index=0, name=None, always_present=True)] + [
        it.with_index(idx + 1) for idx, it in enumerate(want_groups)
    ]
    assert got_groups == _want_groups, pattern


async def test_get_groups_suite_1():
    # "[a-z](?P<digits>[0-9]+)(?P<letter>[a-z])?"

    check(
        "[a-z](?P<digits>[0-9]+)(?P<letter>[a-z])?",
        always_present("digits"),
        optional("letter"),
    )


async def test_get_groups_suite_2():
    # "(?P<foo_123>a)"

    check(
        "(?P<foo_123>a)",
        always_present("foo_123"),
    )


async def test_get_groups_suite_3():
    # "(?P<foo_123>a)(?P=foo_123)"

    check(
        "(?P<foo_123>a)(?P=foo_123)",
        always_present("foo_123"),
    )


async def test_get_groups_suite_4():
    # "[\\1]"

    check(
        "[\\1]",
    )


async def test_get_groups_suite_5():
    # "\\09"

    check(
        "\\09",
    )


async def test_get_groups_suite_6():
    # "\\141"

    check(
        "\\141",
    )


async def test_get_groups_suite_7():
    # "(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)\\119"

    check(
        "(?P<group0>a)(?P<group1>b)(c)(d)(e)(f)(g)(h)(?P<group2>i)(j)(?P<group3>k)(?P<group4>l)\\119",
        always_present("group0"),
        always_present("group1"),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present("group2"),
        always_present(),
        always_present("group3"),
        always_present("group4"),
    )

    check(
        "(a)(b)(?P<group0>c)(d)(e)(f)(?P<group1>g)(h)(i)(j)(k)(?P<group2>l)\\119",
        always_present(),
        always_present(),
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group1"),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present("group2"),
    )

    check(
        "(a)(?P<group0>b)(c)(d)(?P<group1>e)(?P<group2>f)(?P<group3>g)(h)(i)(j)(?P<group4>k)(?P<group5>l)\\119",
        always_present(),
        always_present("group0"),
        always_present(),
        always_present(),
        always_present("group1"),
        always_present("group2"),
        always_present("group3"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group4"),
        always_present("group5"),
    )

    check(
        "(?P<group0>a)(b)(c)(d)(?P<group1>e)(?P<group2>f)(g)(?P<group3>h)(i)(?P<group4>j)(k)(?P<group5>l)\\119",
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group1"),
        always_present("group2"),
        always_present(),
        always_present("group3"),
        always_present(),
        always_present("group4"),
        always_present(),
        always_present("group5"),
    )

    check(
        "(?P<group0>a)(b)(?P<group1>c)(?P<group2>d)(e)(?P<group3>f)(g)(h)(?P<group4>i)(j)(k)(?P<group5>l)\\119",
        always_present("group0"),
        always_present(),
        always_present("group1"),
        always_present("group2"),
        always_present(),
        always_present("group3"),
        always_present(),
        always_present(),
        always_present("group4"),
        always_present(),
        always_present(),
        always_present("group5"),
    )


async def test_get_groups_suite_8():
    # "\\0"

    check(
        "\\0",
    )


async def test_get_groups_suite_9():
    # "[\\0a]"

    check(
        "[\\0a]",
    )


async def test_get_groups_suite_10():
    # "[a\\0]"

    check(
        "[a\\0]",
    )


async def test_get_groups_suite_11():
    # "[^a\\0]"

    check(
        "[^a\\0]",
    )


async def test_get_groups_suite_12():
    # "\\a[\\b]\\f\\n\\r\\t\\v"

    check(
        "\\a[\\b]\\f\\n\\r\\t\\v",
    )


async def test_get_groups_suite_13():
    # "[\\a][\\b][\\f][\\n][\\r][\\t][\\v]"

    check(
        "[\\a][\\b][\\f][\\n][\\r][\\t][\\v]",
    )


async def test_get_groups_suite_14():
    # "\\x00ffffffffffffff"

    check(
        "\\x00ffffffffffffff",
    )


async def test_get_groups_suite_15():
    # "\\x00f"

    check(
        "\\x00f",
    )


async def test_get_groups_suite_16():
    # "\\x00fe"

    check(
        "\\x00fe",
    )


async def test_get_groups_suite_17():
    # "^\\w+=(\\\\[\\000-\\277]|[^\\n\\\\])*"

    check(
        "^\\w+=(\\\\[\\000-\\277]|[^\\n\\\\])*",
        optional(),
    )

    check(
        "^\\w+=(?P<group0>\\\\[\\000-\\277]|[^\\n\\\\])*",
        optional("group0"),
    )


async def test_get_groups_suite_18():
    # "a.b"

    check(
        "a.b",
    )


async def test_get_groups_suite_19():
    # "a.*b"

    check(
        "a.*b",
    )


async def test_get_groups_suite_20():
    # "a.{4,5}b"

    check(
        "a.{4,5}b",
    )


async def test_get_groups_suite_21():
    # "(?s)a.b"

    check(
        "(?s)a.b",
    )


async def test_get_groups_suite_22():
    # "(?s)a.*b"

    check(
        "(?s)a.*b",
    )


async def test_get_groups_suite_23():
    # "(?s)a.{4,5}b"

    check(
        "(?s)a.{4,5}b",
    )


async def test_get_groups_suite_24():
    # ""

    check(
        "",
    )


async def test_get_groups_suite_25():
    # "abc"

    check(
        "abc",
    )


async def test_get_groups_suite_26():
    # "ab*c"

    check(
        "ab*c",
    )


async def test_get_groups_suite_27():
    # "ab*bc"

    check(
        "ab*bc",
    )


async def test_get_groups_suite_28():
    # "ab+bc"

    check(
        "ab+bc",
    )


async def test_get_groups_suite_29():
    # "ab?bc"

    check(
        "ab?bc",
    )


async def test_get_groups_suite_30():
    # "ab?c"

    check(
        "ab?c",
    )


async def test_get_groups_suite_31():
    # "^abc$"

    check(
        "^abc$",
    )


async def test_get_groups_suite_32():
    # "^abc"

    check(
        "^abc",
    )


async def test_get_groups_suite_33():
    # "abc$"

    check(
        "abc$",
    )


async def test_get_groups_suite_34():
    # "^"

    check(
        "^",
    )


async def test_get_groups_suite_35():
    # "$"

    check(
        "$",
    )


async def test_get_groups_suite_36():
    # "a.c"

    check(
        "a.c",
    )


async def test_get_groups_suite_37():
    # "a.*c"

    check(
        "a.*c",
    )


async def test_get_groups_suite_38():
    # "a[bc]d"

    check(
        "a[bc]d",
    )


async def test_get_groups_suite_39():
    # "a[b-d]e"

    check(
        "a[b-d]e",
    )


async def test_get_groups_suite_40():
    # "a[b-d]"

    check(
        "a[b-d]",
    )


async def test_get_groups_suite_41():
    # "a[-b]"

    check(
        "a[-b]",
    )


async def test_get_groups_suite_42():
    # "a[\\-b]"

    check(
        "a[\\-b]",
    )


async def test_get_groups_suite_43():
    # "a]"

    check(
        "a]",
    )


async def test_get_groups_suite_44():
    # "a[]]b"

    check(
        "a[]]b",
    )


async def test_get_groups_suite_45():
    # "a[\\]]b"

    check(
        "a[\\]]b",
    )


async def test_get_groups_suite_46():
    # "a[^bc]d"

    check(
        "a[^bc]d",
    )


async def test_get_groups_suite_47():
    # "a[^-b]c"

    check(
        "a[^-b]c",
    )


async def test_get_groups_suite_48():
    # "a[^]b]c"

    check(
        "a[^]b]c",
    )


async def test_get_groups_suite_49():
    # "\\ba\\b"

    check(
        "\\ba\\b",
    )


async def test_get_groups_suite_50():
    # "\\by\\b"

    check(
        "\\by\\b",
    )


async def test_get_groups_suite_51():
    # "x\\b"

    check(
        "x\\b",
    )


async def test_get_groups_suite_52():
    # "x\\B"

    check(
        "x\\B",
    )


async def test_get_groups_suite_53():
    # "\\Bz"

    check(
        "\\Bz",
    )


async def test_get_groups_suite_54():
    # "z\\B"

    check(
        "z\\B",
    )


async def test_get_groups_suite_55():
    # "\\Bx"

    check(
        "\\Bx",
    )


async def test_get_groups_suite_56():
    # "\\Ba\\B"

    check(
        "\\Ba\\B",
    )


async def test_get_groups_suite_57():
    # "\\By\\B"

    check(
        "\\By\\B",
    )


async def test_get_groups_suite_58():
    # "\\By\\b"

    check(
        "\\By\\b",
    )


async def test_get_groups_suite_59():
    # "\\by\\B"

    check(
        "\\by\\B",
    )


async def test_get_groups_suite_60():
    # "ab|cd"

    check(
        "ab|cd",
    )


async def test_get_groups_suite_61():
    # "()ef"

    check(
        "()ef",
        always_present(),
    )

    check(
        "(?P<group0>)ef",
        always_present("group0"),
    )


async def test_get_groups_suite_62():
    # "$b"

    check(
        "$b",
    )


async def test_get_groups_suite_63():
    # "a\\(b"

    check(
        "a\\(b",
    )

    check(
        "a\\(?P<group0>b",
    )


async def test_get_groups_suite_64():
    # "a\\(*b"

    check(
        "a\\(*b",
    )

    check(
        "a\\(?P<group0>*b",
    )


async def test_get_groups_suite_65():
    # "a\\\\b"

    check(
        "a\\\\b",
    )


async def test_get_groups_suite_66():
    # "((a))"

    check(
        "((a))",
        always_present(),
        always_present(),
    )

    check(
        "(?P<group0>(a))",
        always_present("group0"),
        always_present(),
    )


async def test_get_groups_suite_67():
    # "(a)b(c)"

    check(
        "(a)b(c)",
        always_present(),
        always_present(),
    )

    check(
        "(?P<group0>a)b(c)",
        always_present("group0"),
        always_present(),
    )

    check(
        "(a)b(?P<group0>c)",
        always_present(),
        always_present("group0"),
    )

    check(
        "(?P<group0>a)b(?P<group1>c)",
        always_present("group0"),
        always_present("group1"),
    )


async def test_get_groups_suite_68():
    # "a+b+c"

    check(
        "a+b+c",
    )


async def test_get_groups_suite_69():
    # "(a+|b)*"

    check(
        "(a+|b)*",
        optional(),
    )

    check(
        "(?P<group0>a+|b)*",
        optional("group0"),
    )


async def test_get_groups_suite_70():
    # "(a+|b)+"

    check(
        "(a+|b)+",
        optional(),
    )

    check(
        "(?P<group0>a+|b)+",
        optional("group0"),
    )


async def test_get_groups_suite_71():
    # "(a+|b)?"

    check(
        "(a+|b)?",
        optional(),
    )

    check(
        "(?P<group0>a+|b)?",
        optional("group0"),
    )


async def test_get_groups_suite_72():
    # "[^ab]*"

    check(
        "[^ab]*",
    )


async def test_get_groups_suite_73():
    # "a*"

    check(
        "a*",
    )


async def test_get_groups_suite_74():
    # "a|b|c|d|e"

    check(
        "a|b|c|d|e",
    )


async def test_get_groups_suite_75():
    # "(a|b|c|d|e)f"

    check(
        "(a|b|c|d|e)f",
        always_present(),
    )

    check(
        "(?P<group0>a|b|c|d|e)f",
        always_present("group0"),
    )


async def test_get_groups_suite_76():
    # "abcd*efg"

    check(
        "abcd*efg",
    )


async def test_get_groups_suite_77():
    # "ab*"

    check(
        "ab*",
    )


async def test_get_groups_suite_78():
    # "(ab|cd)e"

    check(
        "(ab|cd)e",
        always_present(),
    )

    check(
        "(?P<group0>ab|cd)e",
        always_present("group0"),
    )


async def test_get_groups_suite_79():
    # "[abhgefdc]ij"

    check(
        "[abhgefdc]ij",
    )


async def test_get_groups_suite_80():
    # "^(ab|cd)e"

    check(
        "^(ab|cd)e",
        always_present(),
    )

    check(
        "^(?P<group0>ab|cd)e",
        always_present("group0"),
    )


async def test_get_groups_suite_81():
    # "(abc|)ef"

    check(
        "(abc|)ef",
        always_present(),
    )

    check(
        "(?P<group0>abc|)ef",
        always_present("group0"),
    )


async def test_get_groups_suite_82():
    # "(a|b)c*d"

    check(
        "(a|b)c*d",
        always_present(),
    )

    check(
        "(?P<group0>a|b)c*d",
        always_present("group0"),
    )


async def test_get_groups_suite_83():
    # "(ab|ab*)bc"

    check(
        "(ab|ab*)bc",
        always_present(),
    )

    check(
        "(?P<group0>ab|ab*)bc",
        always_present("group0"),
    )


async def test_get_groups_suite_84():
    # "a([bc]*)c*"

    check(
        "a([bc]*)c*",
        always_present(),
    )

    check(
        "a(?P<group0>[bc]*)c*",
        always_present("group0"),
    )


async def test_get_groups_suite_85():
    # "a([bc]*)(c*d)"

    check(
        "a([bc]*)(c*d)",
        always_present(),
        always_present(),
    )

    check(
        "a(?P<group0>[bc]*)(c*d)",
        always_present("group0"),
        always_present(),
    )

    check(
        "a([bc]*)(?P<group0>c*d)",
        always_present(),
        always_present("group0"),
    )

    check(
        "a(?P<group0>[bc]*)(?P<group1>c*d)",
        always_present("group0"),
        always_present("group1"),
    )


async def test_get_groups_suite_86():
    # "a([bc]+)(c*d)"

    check(
        "a([bc]+)(c*d)",
        always_present(),
        always_present(),
    )

    check(
        "a(?P<group0>[bc]+)(c*d)",
        always_present("group0"),
        always_present(),
    )

    check(
        "a([bc]+)(?P<group0>c*d)",
        always_present(),
        always_present("group0"),
    )

    check(
        "a(?P<group0>[bc]+)(?P<group1>c*d)",
        always_present("group0"),
        always_present("group1"),
    )


async def test_get_groups_suite_87():
    # "a([bc]*)(c+d)"

    check(
        "a([bc]*)(c+d)",
        always_present(),
        always_present(),
    )

    check(
        "a(?P<group0>[bc]*)(c+d)",
        always_present("group0"),
        always_present(),
    )

    check(
        "a([bc]*)(?P<group0>c+d)",
        always_present(),
        always_present("group0"),
    )

    check(
        "a(?P<group0>[bc]*)(?P<group1>c+d)",
        always_present("group0"),
        always_present("group1"),
    )


async def test_get_groups_suite_88():
    # "a[bcd]*dcdcde"

    check(
        "a[bcd]*dcdcde",
    )


async def test_get_groups_suite_89():
    # "a[bcd]+dcdcde"

    check(
        "a[bcd]+dcdcde",
    )


async def test_get_groups_suite_90():
    # "(ab|a)b*c"

    check(
        "(ab|a)b*c",
        always_present(),
    )

    check(
        "(?P<group0>ab|a)b*c",
        always_present("group0"),
    )


async def test_get_groups_suite_91():
    # "((a)(b)c)(d)"

    check(
        "(?P<group0>(a)(b)c)(d)",
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "((a)(b)c)(d)",
        always_present(),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?P<group0>(a)(b)c)(?P<group1>d)",
        always_present("group0"),
        always_present(),
        always_present(),
        always_present("group1"),
    )

    check(
        "((a)(?P<group0>b)c)(d)",
        always_present(),
        always_present(),
        always_present("group0"),
        always_present(),
    )

    check(
        "(?P<group0>(a)(?P<group1>b)c)(?P<group2>d)",
        always_present("group0"),
        always_present(),
        always_present("group1"),
        always_present("group2"),
    )


async def test_get_groups_suite_92():
    # "[a-zA-Z_][a-zA-Z0-9_]*"

    check(
        "[a-zA-Z_][a-zA-Z0-9_]*",
    )


async def test_get_groups_suite_93():
    # "^a(bc+|b[eh])g|.h$"

    check(
        "^a(bc+|b[eh])g|.h$",
        optional(),
    )

    check(
        "^a(?P<group0>bc+|b[eh])g|.h$",
        optional("group0"),
    )


async def test_get_groups_suite_94():
    # "(bc+d$|ef*g.|h?i(j|k))"

    check(
        "(bc+d$|ef*g.|h?i(j|k))",
        always_present(),
        optional(),
    )

    check(
        "(?P<group0>bc+d$|ef*g.|h?i(j|k))",
        always_present("group0"),
        optional(),
    )

    check(
        "(bc+d$|ef*g.|h?i(?P<group0>j|k))",
        always_present(),
        optional("group0"),
    )

    check(
        "(?P<group0>bc+d$|ef*g.|h?i(?P<group1>j|k))",
        always_present("group0"),
        optional("group1"),
    )


async def test_get_groups_suite_95():
    # "(((((((((a)))))))))"

    check(
        "(?P<group0>((((?P<group1>((((a)))))))))",
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group1"),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?P<group0>((((((((a)))))))))",
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?P<group0>((?P<group1>((((?P<group2>((a)))))))))",
        always_present("group0"),
        always_present(),
        always_present("group1"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group2"),
        always_present(),
        always_present(),
    )

    check(
        "(((((((?P<group0>((?P<group1>a)))))))))",
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present("group0"),
        always_present(),
        always_present("group1"),
    )

    check(
        "(((((?P<group0>((((?P<group1>a)))))))))",
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group1"),
    )


async def test_get_groups_suite_96():
    # "multiple words of text"

    check(
        "multiple words of text",
    )


async def test_get_groups_suite_97():
    # "multiple words"

    check(
        "multiple words",
    )


async def test_get_groups_suite_98():
    # "(.*)c(.*)"

    check(
        "(.*)c(.*)",
        always_present(),
        always_present(),
    )

    check(
        "(?P<group0>.*)c(.*)",
        always_present("group0"),
        always_present(),
    )

    check(
        "(.*)c(?P<group0>.*)",
        always_present(),
        always_present("group0"),
    )

    check(
        "(?P<group0>.*)c(?P<group1>.*)",
        always_present("group0"),
        always_present("group1"),
    )


async def test_get_groups_suite_99():
    # "\\((.*), (.*)\\)"

    check(
        "\\((.*), (.*)\\)",
        always_present(),
        always_present(),
    )

    check(
        "\\(?P<group0>(.*), (.*)\\)",
        always_present(),
        always_present(),
    )

    check(
        "\\((.*), (?P<group0>.*)\\)",
        always_present(),
        always_present("group0"),
    )

    check(
        "\\(?P<group0>(.*), (?P<group1>.*)\\)",
        always_present(),
        always_present("group1"),
    )


async def test_get_groups_suite_100():
    # "[k]"

    check(
        "[k]",
    )


async def test_get_groups_suite_101():
    # "a[-]?c"

    check(
        "a[-]?c",
    )


async def test_get_groups_suite_102():
    # "(abc)\\1"

    check(
        "(abc)\\1",
        always_present(),
    )

    check(
        "(?P<group0>abc)\\1",
        always_present("group0"),
    )


async def test_get_groups_suite_103():
    # "([a-c]*)\\1"

    check(
        "([a-c]*)\\1",
        always_present(),
    )

    check(
        "(?P<group0>[a-c]*)\\1",
        always_present("group0"),
    )


async def test_get_groups_suite_104():
    # "^(.+)?B"

    check(
        "^(.+)?B",
        optional(),
    )

    check(
        "^(?P<group0>.+)?B",
        optional("group0"),
    )


async def test_get_groups_suite_105():
    # "(a+).\\1$"

    check(
        "(a+).\\1$",
        always_present(),
    )

    check(
        "(?P<group0>a+).\\1$",
        always_present("group0"),
    )


async def test_get_groups_suite_106():
    # "^(a+).\\1$"

    check(
        "^(a+).\\1$",
        always_present(),
    )

    check(
        "^(?P<group0>a+).\\1$",
        always_present("group0"),
    )


async def test_get_groups_suite_107():
    # "([a-c]+)\\1"

    check(
        "([a-c]+)\\1",
        always_present(),
    )

    check(
        "(?P<group0>[a-c]+)\\1",
        always_present("group0"),
    )


async def test_get_groups_suite_108():
    # "(a)\\1"

    check(
        "(a)\\1",
        always_present(),
    )

    check(
        "(?P<group0>a)\\1",
        always_present("group0"),
    )


async def test_get_groups_suite_109():
    # "(a+)\\1"

    check(
        "(a+)\\1",
        always_present(),
    )

    check(
        "(?P<group0>a+)\\1",
        always_present("group0"),
    )


async def test_get_groups_suite_110():
    # "(a+)+\\1"

    check(
        "(a+)+\\1",
        optional(),
    )

    check(
        "(?P<group0>a+)+\\1",
        optional("group0"),
    )


async def test_get_groups_suite_111():
    # "(a).+\\1"

    check(
        "(a).+\\1",
        always_present(),
    )

    check(
        "(?P<group0>a).+\\1",
        always_present("group0"),
    )


async def test_get_groups_suite_112():
    # "(a)ba*\\1"

    check(
        "(a)ba*\\1",
        always_present(),
    )

    check(
        "(?P<group0>a)ba*\\1",
        always_present("group0"),
    )


async def test_get_groups_suite_113():
    # "(aa|a)a\\1$"

    check(
        "(aa|a)a\\1$",
        always_present(),
    )

    check(
        "(?P<group0>aa|a)a\\1$",
        always_present("group0"),
    )


async def test_get_groups_suite_114():
    # "(a|aa)a\\1$"

    check(
        "(a|aa)a\\1$",
        always_present(),
    )

    check(
        "(?P<group0>a|aa)a\\1$",
        always_present("group0"),
    )


async def test_get_groups_suite_115():
    # "(a+)a\\1$"

    check(
        "(a+)a\\1$",
        always_present(),
    )

    check(
        "(?P<group0>a+)a\\1$",
        always_present("group0"),
    )


async def test_get_groups_suite_116():
    # "([abc]*)\\1"

    check(
        "([abc]*)\\1",
        always_present(),
    )

    check(
        "(?P<group0>[abc]*)\\1",
        always_present("group0"),
    )


async def test_get_groups_suite_117():
    # "(a)(b)c|ab"

    check(
        "(a)(b)c|ab",
        optional(),
        optional(),
    )

    check(
        "(?P<group0>a)(b)c|ab",
        optional("group0"),
        optional(),
    )

    check(
        "(a)(?P<group0>b)c|ab",
        optional(),
        optional("group0"),
    )

    check(
        "(?P<group0>a)(?P<group1>b)c|ab",
        optional("group0"),
        optional("group1"),
    )


async def test_get_groups_suite_118():
    # "(a)+x"

    check(
        "(a)+x",
        optional(),
    )

    check(
        "(?P<group0>a)+x",
        optional("group0"),
    )


async def test_get_groups_suite_119():
    # "([ac])+x"

    check(
        "([ac])+x",
        optional(),
    )

    check(
        "(?P<group0>[ac])+x",
        optional("group0"),
    )


async def test_get_groups_suite_120():
    # "([^/]*/)*sub1/"

    check(
        "([^/]*/)*sub1/",
        optional(),
    )

    check(
        "(?P<group0>[^/]*/)*sub1/",
        optional("group0"),
    )


async def test_get_groups_suite_121():
    # "([^.]*)\\.([^:]*):[T ]+(.*)"

    check(
        "(?P<group0>[^.]*)\\.([^:]*):[T ]+(.*)",
        always_present("group0"),
        always_present(),
        always_present(),
    )

    check(
        "([^.]*)\\.([^:]*):[T ]+(.*)",
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?P<group0>[^.]*)\\.([^:]*):[T ]+(?P<group1>.*)",
        always_present("group0"),
        always_present(),
        always_present("group1"),
    )

    check(
        "([^.]*)\\.(?P<group0>[^:]*):[T ]+(.*)",
        always_present(),
        always_present("group0"),
        always_present(),
    )

    check(
        "(?P<group0>[^.]*)\\.(?P<group1>[^:]*):[T ]+(?P<group2>.*)",
        always_present("group0"),
        always_present("group1"),
        always_present("group2"),
    )


async def test_get_groups_suite_122():
    # "([^N]*N)+"

    check(
        "([^N]*N)+",
        optional(),
    )

    check(
        "(?P<group0>[^N]*N)+",
        optional("group0"),
    )


async def test_get_groups_suite_123():
    # "([abc]*)x"

    check(
        "([abc]*)x",
        always_present(),
    )

    check(
        "(?P<group0>[abc]*)x",
        always_present("group0"),
    )


async def test_get_groups_suite_124():
    # "([xyz]*)x"

    check(
        "([xyz]*)x",
        always_present(),
    )

    check(
        "(?P<group0>[xyz]*)x",
        always_present("group0"),
    )


async def test_get_groups_suite_125():
    # "(a)+b|aac"

    check(
        "(a)+b|aac",
        optional(),
    )

    check(
        "(?P<group0>a)+b|aac",
        optional("group0"),
    )


async def test_get_groups_suite_126():
    # "(?P<id>aaa)a"

    check(
        "(?P<id>aaa)a",
        always_present("id"),
    )


async def test_get_groups_suite_127():
    # "(?P<id>aa)(?P=id)"

    check(
        "(?P<id>aa)(?P=id)",
        always_present("id"),
    )


async def test_get_groups_suite_128():
    # "ab{0,}bc"

    check(
        "ab{0,}bc",
    )


async def test_get_groups_suite_129():
    # "ab{1,}bc"

    check(
        "ab{1,}bc",
    )


async def test_get_groups_suite_130():
    # "ab{1,3}bc"

    check(
        "ab{1,3}bc",
    )


async def test_get_groups_suite_131():
    # "ab{3,4}bc"

    check(
        "ab{3,4}bc",
    )


async def test_get_groups_suite_132():
    # "ab{4,5}bc"

    check(
        "ab{4,5}bc",
    )


async def test_get_groups_suite_133():
    # "ab{0,1}bc"

    check(
        "ab{0,1}bc",
    )


async def test_get_groups_suite_134():
    # "ab{0,1}c"

    check(
        "ab{0,1}c",
    )


async def test_get_groups_suite_135():
    # "a[b-]"

    check(
        "a[b-]",
    )


async def test_get_groups_suite_136():
    # "a{1,}b{1,}c"

    check(
        "a{1,}b{1,}c",
    )


async def test_get_groups_suite_137():
    # "a.+?c"

    check(
        "a.+?c",
    )


async def test_get_groups_suite_138():
    # "(a+|b){0,}"

    check(
        "(a+|b){0,}",
        optional(),
    )

    check(
        "(?P<group0>a+|b){0,}",
        optional("group0"),
    )


async def test_get_groups_suite_139():
    # "(a+|b){1,}"

    check(
        "(a+|b){1,}",
        optional(),
    )

    check(
        "(?P<group0>a+|b){1,}",
        optional("group0"),
    )


async def test_get_groups_suite_140():
    # "(a+|b){0,1}"

    check(
        "(a+|b){0,1}",
        optional(),
    )

    check(
        "(?P<group0>a+|b){0,1}",
        optional("group0"),
    )


async def test_get_groups_suite_141():
    # "([abc])*d"

    check(
        "([abc])*d",
        optional(),
    )

    check(
        "(?P<group0>[abc])*d",
        optional("group0"),
    )


async def test_get_groups_suite_142():
    # "([abc])*bcd"

    check(
        "([abc])*bcd",
        optional(),
    )

    check(
        "(?P<group0>[abc])*bcd",
        optional("group0"),
    )


async def test_get_groups_suite_143():
    # "((((((((((a))))))))))"

    check(
        "(?P<group0>((((?P<group1>(((((a))))))))))",
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group1"),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?P<group0>(((((((((a))))))))))",
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?P<group0>((?P<group1>((((?P<group2>(((a))))))))))",
        always_present("group0"),
        always_present(),
        always_present("group1"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group2"),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(((((((?P<group0>((?P<group1>(a))))))))))",
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present("group0"),
        always_present(),
        always_present("group1"),
        always_present(),
    )

    check(
        "(((((?P<group0>((((?P<group1>(a))))))))))",
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group1"),
        always_present(),
    )


async def test_get_groups_suite_144():
    # "((((((((((a))))))))))\\10"

    check(
        "(?P<group0>((((?P<group1>(((((a))))))))))\\10",
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group1"),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?P<group0>(((((((((a))))))))))\\10",
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?P<group0>((?P<group1>((((?P<group2>(((a))))))))))\\10",
        always_present("group0"),
        always_present(),
        always_present("group1"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group2"),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(((((((?P<group0>((?P<group1>(a))))))))))\\10",
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present("group0"),
        always_present(),
        always_present("group1"),
        always_present(),
    )

    check(
        "(((((?P<group0>((((?P<group1>(a))))))))))\\10",
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group1"),
        always_present(),
    )


async def test_get_groups_suite_145():
    # "(?i)abc"

    check(
        "(?i)abc",
    )


async def test_get_groups_suite_146():
    # "(?i)ab*c"

    check(
        "(?i)ab*c",
    )


async def test_get_groups_suite_147():
    # "(?i)ab*bc"

    check(
        "(?i)ab*bc",
    )


async def test_get_groups_suite_148():
    # "(?i)ab*?bc"

    check(
        "(?i)ab*?bc",
    )


async def test_get_groups_suite_149():
    # "(?i)ab{0,}?bc"

    check(
        "(?i)ab{0,}?bc",
    )


async def test_get_groups_suite_150():
    # "(?i)ab+?bc"

    check(
        "(?i)ab+?bc",
    )


async def test_get_groups_suite_151():
    # "(?i)ab+bc"

    check(
        "(?i)ab+bc",
    )


async def test_get_groups_suite_152():
    # "(?i)ab{1,}bc"

    check(
        "(?i)ab{1,}bc",
    )


async def test_get_groups_suite_153():
    # "(?i)ab{1,}?bc"

    check(
        "(?i)ab{1,}?bc",
    )


async def test_get_groups_suite_154():
    # "(?i)ab{1,3}?bc"

    check(
        "(?i)ab{1,3}?bc",
    )


async def test_get_groups_suite_155():
    # "(?i)ab{3,4}?bc"

    check(
        "(?i)ab{3,4}?bc",
    )


async def test_get_groups_suite_156():
    # "(?i)ab{4,5}?bc"

    check(
        "(?i)ab{4,5}?bc",
    )


async def test_get_groups_suite_157():
    # "(?i)ab??bc"

    check(
        "(?i)ab??bc",
    )


async def test_get_groups_suite_158():
    # "(?i)ab{0,1}?bc"

    check(
        "(?i)ab{0,1}?bc",
    )


async def test_get_groups_suite_159():
    # "(?i)ab??c"

    check(
        "(?i)ab??c",
    )


async def test_get_groups_suite_160():
    # "(?i)ab{0,1}?c"

    check(
        "(?i)ab{0,1}?c",
    )


async def test_get_groups_suite_161():
    # "(?i)^abc$"

    check(
        "(?i)^abc$",
    )


async def test_get_groups_suite_162():
    # "(?i)^abc"

    check(
        "(?i)^abc",
    )


async def test_get_groups_suite_163():
    # "(?i)abc$"

    check(
        "(?i)abc$",
    )


async def test_get_groups_suite_164():
    # "(?i)^"

    check(
        "(?i)^",
    )


async def test_get_groups_suite_165():
    # "(?i)$"

    check(
        "(?i)$",
    )


async def test_get_groups_suite_166():
    # "(?i)a.c"

    check(
        "(?i)a.c",
    )


async def test_get_groups_suite_167():
    # "(?i)a.*?c"

    check(
        "(?i)a.*?c",
    )


async def test_get_groups_suite_168():
    # "(?i)a.*c"

    check(
        "(?i)a.*c",
    )


async def test_get_groups_suite_169():
    # "(?i)a[bc]d"

    check(
        "(?i)a[bc]d",
    )


async def test_get_groups_suite_170():
    # "(?i)a[b-d]e"

    check(
        "(?i)a[b-d]e",
    )


async def test_get_groups_suite_171():
    # "(?i)a[b-d]"

    check(
        "(?i)a[b-d]",
    )


async def test_get_groups_suite_172():
    # "(?i)a[-b]"

    check(
        "(?i)a[-b]",
    )


async def test_get_groups_suite_173():
    # "(?i)a[b-]"

    check(
        "(?i)a[b-]",
    )


async def test_get_groups_suite_174():
    # "(?i)a]"

    check(
        "(?i)a]",
    )


async def test_get_groups_suite_175():
    # "(?i)a[]]b"

    check(
        "(?i)a[]]b",
    )


async def test_get_groups_suite_176():
    # "(?i)a[^bc]d"

    check(
        "(?i)a[^bc]d",
    )


async def test_get_groups_suite_177():
    # "(?i)a[^-b]c"

    check(
        "(?i)a[^-b]c",
    )


async def test_get_groups_suite_178():
    # "(?i)a[^]b]c"

    check(
        "(?i)a[^]b]c",
    )


async def test_get_groups_suite_179():
    # "(?i)ab|cd"

    check(
        "(?i)ab|cd",
    )


async def test_get_groups_suite_180():
    # "(?i)()ef"

    check(
        "(?i)()ef",
        always_present(),
    )

    check(
        "(?i)(?P<group0>)ef",
        always_present("group0"),
    )


async def test_get_groups_suite_181():
    # "(?i)$b"

    check(
        "(?i)$b",
    )


async def test_get_groups_suite_182():
    # "(?i)a\\(b"

    check(
        "(?i)a\\(b",
    )

    check(
        "(?i)a\\(?P<group0>b",
    )


async def test_get_groups_suite_183():
    # "(?i)a\\(*b"

    check(
        "(?i)a\\(*b",
    )

    check(
        "(?i)a\\(?P<group0>*b",
    )


async def test_get_groups_suite_184():
    # "(?i)a\\\\b"

    check(
        "(?i)a\\\\b",
    )


async def test_get_groups_suite_185():
    # "(?i)((a))"

    check(
        "(?i)((a))",
        always_present(),
        always_present(),
    )

    check(
        "(?i)(?P<group0>(a))",
        always_present("group0"),
        always_present(),
    )


async def test_get_groups_suite_186():
    # "(?i)(a)b(c)"

    check(
        "(?i)(a)b(c)",
        always_present(),
        always_present(),
    )

    check(
        "(?i)(?P<group0>a)b(c)",
        always_present("group0"),
        always_present(),
    )

    check(
        "(?i)(a)b(?P<group0>c)",
        always_present(),
        always_present("group0"),
    )

    check(
        "(?i)(?P<group0>a)b(?P<group1>c)",
        always_present("group0"),
        always_present("group1"),
    )


async def test_get_groups_suite_187():
    # "(?i)a+b+c"

    check(
        "(?i)a+b+c",
    )


async def test_get_groups_suite_188():
    # "(?i)a{1,}b{1,}c"

    check(
        "(?i)a{1,}b{1,}c",
    )


async def test_get_groups_suite_189():
    # "(?i)a.+?c"

    check(
        "(?i)a.+?c",
    )


async def test_get_groups_suite_190():
    # "(?i)a.{0,5}?c"

    check(
        "(?i)a.{0,5}?c",
    )


async def test_get_groups_suite_191():
    # "(?i)(a+|b)*"

    check(
        "(?i)(a+|b)*",
        optional(),
    )

    check(
        "(?i)(?P<group0>a+|b)*",
        optional("group0"),
    )


async def test_get_groups_suite_192():
    # "(?i)(a+|b){0,}"

    check(
        "(?i)(a+|b){0,}",
        optional(),
    )

    check(
        "(?i)(?P<group0>a+|b){0,}",
        optional("group0"),
    )


async def test_get_groups_suite_193():
    # "(?i)(a+|b)+"

    check(
        "(?i)(a+|b)+",
        optional(),
    )

    check(
        "(?i)(?P<group0>a+|b)+",
        optional("group0"),
    )


async def test_get_groups_suite_194():
    # "(?i)(a+|b){1,}"

    check(
        "(?i)(a+|b){1,}",
        optional(),
    )

    check(
        "(?i)(?P<group0>a+|b){1,}",
        optional("group0"),
    )


async def test_get_groups_suite_195():
    # "(?i)(a+|b)?"

    check(
        "(?i)(a+|b)?",
        optional(),
    )

    check(
        "(?i)(?P<group0>a+|b)?",
        optional("group0"),
    )


async def test_get_groups_suite_196():
    # "(?i)(a+|b){0,1}"

    check(
        "(?i)(a+|b){0,1}",
        optional(),
    )

    check(
        "(?i)(?P<group0>a+|b){0,1}",
        optional("group0"),
    )


async def test_get_groups_suite_197():
    # "(?i)(a+|b){0,1}?"

    check(
        "(?i)(a+|b){0,1}?",
        optional(),
    )

    check(
        "(?i)(?P<group0>a+|b){0,1}?",
        optional("group0"),
    )


async def test_get_groups_suite_198():
    # "(?i)[^ab]*"

    check(
        "(?i)[^ab]*",
    )


async def test_get_groups_suite_199():
    # "(?i)a*"

    check(
        "(?i)a*",
    )


async def test_get_groups_suite_200():
    # "(?i)([abc])*d"

    check(
        "(?i)([abc])*d",
        optional(),
    )

    check(
        "(?i)(?P<group0>[abc])*d",
        optional("group0"),
    )


async def test_get_groups_suite_201():
    # "(?i)([abc])*bcd"

    check(
        "(?i)([abc])*bcd",
        optional(),
    )

    check(
        "(?i)(?P<group0>[abc])*bcd",
        optional("group0"),
    )


async def test_get_groups_suite_202():
    # "(?i)a|b|c|d|e"

    check(
        "(?i)a|b|c|d|e",
    )


async def test_get_groups_suite_203():
    # "(?i)(a|b|c|d|e)f"

    check(
        "(?i)(a|b|c|d|e)f",
        always_present(),
    )

    check(
        "(?i)(?P<group0>a|b|c|d|e)f",
        always_present("group0"),
    )


async def test_get_groups_suite_204():
    # "(?i)abcd*efg"

    check(
        "(?i)abcd*efg",
    )


async def test_get_groups_suite_205():
    # "(?i)ab*"

    check(
        "(?i)ab*",
    )


async def test_get_groups_suite_206():
    # "(?i)(ab|cd)e"

    check(
        "(?i)(ab|cd)e",
        always_present(),
    )

    check(
        "(?i)(?P<group0>ab|cd)e",
        always_present("group0"),
    )


async def test_get_groups_suite_207():
    # "(?i)[abhgefdc]ij"

    check(
        "(?i)[abhgefdc]ij",
    )


async def test_get_groups_suite_208():
    # "(?i)^(ab|cd)e"

    check(
        "(?i)^(ab|cd)e",
        always_present(),
    )

    check(
        "(?i)^(?P<group0>ab|cd)e",
        always_present("group0"),
    )


async def test_get_groups_suite_209():
    # "(?i)(abc|)ef"

    check(
        "(?i)(abc|)ef",
        always_present(),
    )

    check(
        "(?i)(?P<group0>abc|)ef",
        always_present("group0"),
    )


async def test_get_groups_suite_210():
    # "(?i)(a|b)c*d"

    check(
        "(?i)(a|b)c*d",
        always_present(),
    )

    check(
        "(?i)(?P<group0>a|b)c*d",
        always_present("group0"),
    )


async def test_get_groups_suite_211():
    # "(?i)(ab|ab*)bc"

    check(
        "(?i)(ab|ab*)bc",
        always_present(),
    )

    check(
        "(?i)(?P<group0>ab|ab*)bc",
        always_present("group0"),
    )


async def test_get_groups_suite_212():
    # "(?i)a([bc]*)c*"

    check(
        "(?i)a([bc]*)c*",
        always_present(),
    )

    check(
        "(?i)a(?P<group0>[bc]*)c*",
        always_present("group0"),
    )


async def test_get_groups_suite_213():
    # "(?i)a([bc]*)(c*d)"

    check(
        "(?i)a([bc]*)(c*d)",
        always_present(),
        always_present(),
    )

    check(
        "(?i)a(?P<group0>[bc]*)(c*d)",
        always_present("group0"),
        always_present(),
    )

    check(
        "(?i)a([bc]*)(?P<group0>c*d)",
        always_present(),
        always_present("group0"),
    )

    check(
        "(?i)a(?P<group0>[bc]*)(?P<group1>c*d)",
        always_present("group0"),
        always_present("group1"),
    )


async def test_get_groups_suite_214():
    # "(?i)a([bc]+)(c*d)"

    check(
        "(?i)a([bc]+)(c*d)",
        always_present(),
        always_present(),
    )

    check(
        "(?i)a(?P<group0>[bc]+)(c*d)",
        always_present("group0"),
        always_present(),
    )

    check(
        "(?i)a([bc]+)(?P<group0>c*d)",
        always_present(),
        always_present("group0"),
    )

    check(
        "(?i)a(?P<group0>[bc]+)(?P<group1>c*d)",
        always_present("group0"),
        always_present("group1"),
    )


async def test_get_groups_suite_215():
    # "(?i)a([bc]*)(c+d)"

    check(
        "(?i)a([bc]*)(c+d)",
        always_present(),
        always_present(),
    )

    check(
        "(?i)a(?P<group0>[bc]*)(c+d)",
        always_present("group0"),
        always_present(),
    )

    check(
        "(?i)a([bc]*)(?P<group0>c+d)",
        always_present(),
        always_present("group0"),
    )

    check(
        "(?i)a(?P<group0>[bc]*)(?P<group1>c+d)",
        always_present("group0"),
        always_present("group1"),
    )


async def test_get_groups_suite_216():
    # "(?i)a[bcd]*dcdcde"

    check(
        "(?i)a[bcd]*dcdcde",
    )


async def test_get_groups_suite_217():
    # "(?i)a[bcd]+dcdcde"

    check(
        "(?i)a[bcd]+dcdcde",
    )


async def test_get_groups_suite_218():
    # "(?i)(ab|a)b*c"

    check(
        "(?i)(ab|a)b*c",
        always_present(),
    )

    check(
        "(?i)(?P<group0>ab|a)b*c",
        always_present("group0"),
    )


async def test_get_groups_suite_219():
    # "(?i)((a)(b)c)(d)"

    check(
        "(?i)(?P<group0>(a)(b)c)(d)",
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?i)((a)(b)c)(d)",
        always_present(),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?i)(?P<group0>(a)(b)c)(?P<group1>d)",
        always_present("group0"),
        always_present(),
        always_present(),
        always_present("group1"),
    )

    check(
        "(?i)((a)(?P<group0>b)c)(d)",
        always_present(),
        always_present(),
        always_present("group0"),
        always_present(),
    )

    check(
        "(?i)(?P<group0>(a)(?P<group1>b)c)(?P<group2>d)",
        always_present("group0"),
        always_present(),
        always_present("group1"),
        always_present("group2"),
    )


async def test_get_groups_suite_220():
    # "(?i)[a-zA-Z_][a-zA-Z0-9_]*"

    check(
        "(?i)[a-zA-Z_][a-zA-Z0-9_]*",
    )


async def test_get_groups_suite_221():
    # "(?i)^a(bc+|b[eh])g|.h$"

    check(
        "(?i)^a(bc+|b[eh])g|.h$",
        optional(),
    )

    check(
        "(?i)^a(?P<group0>bc+|b[eh])g|.h$",
        optional("group0"),
    )


async def test_get_groups_suite_222():
    # "(?i)(bc+d$|ef*g.|h?i(j|k))"

    check(
        "(?i)(bc+d$|ef*g.|h?i(j|k))",
        always_present(),
        optional(),
    )

    check(
        "(?i)(?P<group0>bc+d$|ef*g.|h?i(j|k))",
        always_present("group0"),
        optional(),
    )

    check(
        "(?i)(bc+d$|ef*g.|h?i(?P<group0>j|k))",
        always_present(),
        optional("group0"),
    )

    check(
        "(?i)(?P<group0>bc+d$|ef*g.|h?i(?P<group1>j|k))",
        always_present("group0"),
        optional("group1"),
    )


async def test_get_groups_suite_223():
    # "(?i)((((((((((a))))))))))"

    check(
        "(?i)(?P<group0>((((?P<group1>(((((a))))))))))",
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group1"),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?i)(?P<group0>(((((((((a))))))))))",
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?i)(?P<group0>((?P<group1>((((?P<group2>(((a))))))))))",
        always_present("group0"),
        always_present(),
        always_present("group1"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group2"),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?i)(((((((?P<group0>((?P<group1>(a))))))))))",
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present("group0"),
        always_present(),
        always_present("group1"),
        always_present(),
    )

    check(
        "(?i)(((((?P<group0>((((?P<group1>(a))))))))))",
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group1"),
        always_present(),
    )


async def test_get_groups_suite_224():
    # "(?i)((((((((((a))))))))))\\10"

    check(
        "(?i)(?P<group0>((((?P<group1>(((((a))))))))))\\10",
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group1"),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?i)(?P<group0>(((((((((a))))))))))\\10",
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?i)(?P<group0>((?P<group1>((((?P<group2>(((a))))))))))\\10",
        always_present("group0"),
        always_present(),
        always_present("group1"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group2"),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?i)(((((((?P<group0>((?P<group1>(a))))))))))\\10",
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present("group0"),
        always_present(),
        always_present("group1"),
        always_present(),
    )

    check(
        "(?i)(((((?P<group0>((((?P<group1>(a))))))))))\\10",
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group1"),
        always_present(),
    )


async def test_get_groups_suite_225():
    # "(?i)(((((((((a)))))))))"

    check(
        "(?i)(?P<group0>((((?P<group1>((((a)))))))))",
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group1"),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?i)(?P<group0>((((((((a)))))))))",
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?i)(?P<group0>((?P<group1>((((?P<group2>((a)))))))))",
        always_present("group0"),
        always_present(),
        always_present("group1"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group2"),
        always_present(),
        always_present(),
    )

    check(
        "(?i)(((((((?P<group0>((?P<group1>a)))))))))",
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present("group0"),
        always_present(),
        always_present("group1"),
    )

    check(
        "(?i)(((((?P<group0>((((?P<group1>a)))))))))",
        always_present(),
        always_present(),
        always_present(),
        always_present(),
        always_present("group0"),
        always_present(),
        always_present(),
        always_present(),
        always_present("group1"),
    )


async def test_get_groups_suite_226():
    # "(?i)(?:(?:(?:(?:(?:(?:(?:(?:(?:(a))))))))))"

    check(
        "(?i)(?:(?:(?:(?:(?:(?:(?:(?:(?:(a))))))))))",
        always_present(),
    )

    check(
        "(?i)(?:(?:(?:(?:(?:(?:(?:(?:(?:(?P<group0>a))))))))))",
        always_present("group0"),
    )


async def test_get_groups_suite_227():
    # "(?i)(?:(?:(?:(?:(?:(?:(?:(?:(?:(a|b|c))))))))))"

    check(
        "(?i)(?:(?:(?:(?:(?:(?:(?:(?:(?:(a|b|c))))))))))",
        always_present(),
    )

    check(
        "(?i)(?:(?:(?:(?:(?:(?:(?:(?:(?:(?P<group0>a|b|c))))))))))",
        always_present("group0"),
    )


async def test_get_groups_suite_228():
    # "(?i)multiple words of text"

    check(
        "(?i)multiple words of text",
    )


async def test_get_groups_suite_229():
    # "(?i)multiple words"

    check(
        "(?i)multiple words",
    )


async def test_get_groups_suite_230():
    # "(?i)(.*)c(.*)"

    check(
        "(?i)(.*)c(.*)",
        always_present(),
        always_present(),
    )

    check(
        "(?i)(?P<group0>.*)c(.*)",
        always_present("group0"),
        always_present(),
    )

    check(
        "(?i)(.*)c(?P<group0>.*)",
        always_present(),
        always_present("group0"),
    )

    check(
        "(?i)(?P<group0>.*)c(?P<group1>.*)",
        always_present("group0"),
        always_present("group1"),
    )


async def test_get_groups_suite_231():
    # "(?i)\\((.*), (.*)\\)"

    check(
        "(?i)\\((.*), (.*)\\)",
        always_present(),
        always_present(),
    )

    check(
        "(?i)\\(?P<group0>(.*), (.*)\\)",
        always_present(),
        always_present(),
    )

    check(
        "(?i)\\((.*), (?P<group0>.*)\\)",
        always_present(),
        always_present("group0"),
    )

    check(
        "(?i)\\(?P<group0>(.*), (?P<group1>.*)\\)",
        always_present(),
        always_present("group1"),
    )


async def test_get_groups_suite_232():
    # "(?i)[k]"

    check(
        "(?i)[k]",
    )


async def test_get_groups_suite_233():
    # "(?i)a[-]?c"

    check(
        "(?i)a[-]?c",
    )


async def test_get_groups_suite_234():
    # "(?i)(abc)\\1"

    check(
        "(?i)(abc)\\1",
        always_present(),
    )

    check(
        "(?i)(?P<group0>abc)\\1",
        always_present("group0"),
    )


async def test_get_groups_suite_235():
    # "(?i)([a-c]*)\\1"

    check(
        "(?i)([a-c]*)\\1",
        always_present(),
    )

    check(
        "(?i)(?P<group0>[a-c]*)\\1",
        always_present("group0"),
    )


async def test_get_groups_suite_236():
    # "a(?!b)."

    check(
        "a(?!b).",
    )


async def test_get_groups_suite_237():
    # "a(?=d)."

    check(
        "a(?=d).",
    )


async def test_get_groups_suite_238():
    # "a(?=c|d)."

    check(
        "a(?=c|d).",
    )


async def test_get_groups_suite_239():
    # "a(?:b|c|d)(.)"

    check(
        "a(?:b|c|d)(.)",
        always_present(),
    )

    check(
        "a(?:b|c|d)(?P<group0>.)",
        always_present("group0"),
    )


async def test_get_groups_suite_240():
    # "a(?:b|c|d)*(.)"

    check(
        "a(?:b|c|d)*(.)",
        always_present(),
    )

    check(
        "a(?:b|c|d)*(?P<group0>.)",
        always_present("group0"),
    )


async def test_get_groups_suite_241():
    # "a(?:b|c|d)+?(.)"

    check(
        "a(?:b|c|d)+?(.)",
        always_present(),
    )

    check(
        "a(?:b|c|d)+?(?P<group0>.)",
        always_present("group0"),
    )


async def test_get_groups_suite_242():
    # "a(?:b|(c|e){1,2}?|d)+?(.)"

    check(
        "a(?:b|(c|e){1,2}?|d)+?(.)",
        optional(),
        always_present(),
    )

    check(
        "a(?:b|(?P<group0>c|e){1,2}?|d)+?(.)",
        optional("group0"),
        always_present(),
    )

    check(
        "a(?:b|(c|e){1,2}?|d)+?(?P<group0>.)",
        optional(),
        always_present("group0"),
    )

    check(
        "a(?:b|(?P<group0>c|e){1,2}?|d)+?(?P<group1>.)",
        optional("group0"),
        always_present("group1"),
    )


async def test_get_groups_suite_243():
    # "(?<!-):(.*?)(?<!-):"

    check(
        "(?<!-):(.*?)(?<!-):",
        always_present(),
    )

    check(
        "(?<!-):(?P<group0>.*?)(?<!-):",
        always_present("group0"),
    )


async def test_get_groups_suite_244():
    # "(?<!\\\\):(.*?)(?<!\\\\):"

    check(
        "(?<!\\\\):(.*?)(?<!\\\\):",
        always_present(),
    )

    check(
        "(?<!\\\\):(?P<group0>.*?)(?<!\\\\):",
        always_present("group0"),
    )


async def test_get_groups_suite_245():
    # "(?<!\\?)'(.*?)(?<!\\?)'"

    check(
        "(?<!\\?)'(.*?)(?<!\\?)'",
        always_present(),
    )

    check(
        "(?<!\\?)'(?P<group0>.*?)(?<!\\?)'",
        always_present("group0"),
    )


async def test_get_groups_suite_246():
    # "w(?# comment 1)xy(?# comment 2)z"

    check(
        "w(?# comment 1)xy(?# comment 2)z",
    )


async def test_get_groups_suite_247():
    # "(?i)w"

    check(
        "(?i)w",
    )


async def test_get_groups_suite_248():
    # "(?x)w# comment 1\n        x y\n        # comment 2\n        z"

    check(
        "(?x)w# comment 1\n        x y\n        # comment 2\n        z",
    )


async def test_get_groups_suite_249():
    # "(?m)^abc"

    check(
        "(?m)^abc",
    )


async def test_get_groups_suite_250():
    # "(?m)abc$"

    check(
        "(?m)abc$",
    )


async def test_get_groups_suite_251():
    # "\\w+"

    check(
        "\\w+",
    )


async def test_get_groups_suite_252():
    # "[\\w]+"

    check(
        "[\\w]+",
    )


async def test_get_groups_suite_253():
    # "\\D+"

    check(
        "\\D+",
    )


async def test_get_groups_suite_254():
    # "[\\D]+"

    check(
        "[\\D]+",
    )


async def test_get_groups_suite_255():
    # "[\\da-fA-F]+"

    check(
        "[\\da-fA-F]+",
    )


async def test_get_groups_suite_256():
    # "([\\s]*)([\\S]*)([\\s]*)"

    check(
        "(?P<group0>[\\s]*)([\\S]*)([\\s]*)",
        always_present("group0"),
        always_present(),
        always_present(),
    )

    check(
        "([\\s]*)([\\S]*)([\\s]*)",
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?P<group0>[\\s]*)([\\S]*)(?P<group1>[\\s]*)",
        always_present("group0"),
        always_present(),
        always_present("group1"),
    )

    check(
        "([\\s]*)(?P<group0>[\\S]*)([\\s]*)",
        always_present(),
        always_present("group0"),
        always_present(),
    )

    check(
        "(?P<group0>[\\s]*)(?P<group1>[\\S]*)(?P<group2>[\\s]*)",
        always_present("group0"),
        always_present("group1"),
        always_present("group2"),
    )


async def test_get_groups_suite_257():
    # "(\\s*)(\\S*)(\\s*)"

    check(
        "(?P<group0>\\s*)(\\S*)(\\s*)",
        always_present("group0"),
        always_present(),
        always_present(),
    )

    check(
        "(\\s*)(\\S*)(\\s*)",
        always_present(),
        always_present(),
        always_present(),
    )

    check(
        "(?P<group0>\\s*)(\\S*)(?P<group1>\\s*)",
        always_present("group0"),
        always_present(),
        always_present("group1"),
    )

    check(
        "(\\s*)(?P<group0>\\S*)(\\s*)",
        always_present(),
        always_present("group0"),
        always_present(),
    )

    check(
        "(?P<group0>\\s*)(?P<group1>\\S*)(?P<group2>\\s*)",
        always_present("group0"),
        always_present("group1"),
        always_present("group2"),
    )


async def test_get_groups_suite_258():
    # "\\xff"

    check(
        "\\xff",
    )


async def test_get_groups_suite_259():
    # "\\x00ff"

    check(
        "\\x00ff",
    )


async def test_get_groups_suite_260():
    # "\\t\\n\\v\\r\\f\\a"

    check(
        "\\t\\n\\v\\r\\f\\a",
    )


async def test_get_groups_suite_261():
    # "\t\n\u000b\r\f\u0007"

    check(
        "\t\n\u000b\r\f\u0007",
    )


async def test_get_groups_suite_262():
    # "[\\t][\\n][\\v][\\r][\\f][\\b]"

    check(
        "[\\t][\\n][\\v][\\r][\\f][\\b]",
    )


async def test_get_groups_suite_263():
    # "(([a-z]+):)?([a-z]+)$"

    check(
        "(([a-z]+):)?([a-z]+)$",
        optional(),
        optional(),
        always_present(),
    )

    check(
        "(?P<group0>([a-z]+):)?([a-z]+)$",
        optional("group0"),
        optional(),
        always_present(),
    )

    check(
        "(([a-z]+):)?(?P<group0>[a-z]+)$",
        optional(),
        optional(),
        always_present("group0"),
    )

    check(
        "(?P<group0>([a-z]+):)?(?P<group1>[a-z]+)$",
        optional("group0"),
        optional(),
        always_present("group1"),
    )


async def test_get_groups_suite_264():
    # ".*d"

    check(
        ".*d",
    )


async def test_get_groups_suite_265():
    # "[\\41]"

    check(
        "[\\41]",
    )


async def test_get_groups_suite_266():
    # "(x?)?"

    check(
        "(x?)?",
        optional(),
    )

    check(
        "(?P<group0>x?)?",
        optional("group0"),
    )


async def test_get_groups_suite_267():
    # "(?x) foo "

    check(
        "(?x) foo ",
    )


async def test_get_groups_suite_268():
    # "(?<!abc)(d.f)"

    check(
        "(?<!abc)(d.f)",
        always_present(),
    )

    check(
        "(?<!abc)(?P<group0>d.f)",
        always_present("group0"),
    )


async def test_get_groups_suite_269():
    # "[\\w-]+"

    check(
        "[\\w-]+",
    )


async def test_get_groups_suite_270():
    # ".*?\\S *:"

    check(
        ".*?\\S *:",
    )


async def test_get_groups_suite_271():
    # "a[ ]*?\\ (\\d+).*"

    check(
        "a[ ]*?\\ (\\d+).*",
        always_present(),
    )

    check(
        "a[ ]*?\\ (?P<group0>\\d+).*",
        always_present("group0"),
    )


async def test_get_groups_suite_272():
    # "(?ms).*?x\\s*\\Z(.*)"

    check(
        "(?ms).*?x\\s*\\Z(.*)",
        always_present(),
    )

    check(
        "(?ms).*?x\\s*\\Z(?P<group0>.*)",
        always_present("group0"),
    )


async def test_get_groups_suite_273():
    # "(?i)M+"

    check(
        "(?i)M+",
    )


async def test_get_groups_suite_274():
    # "(?i)m+"

    check(
        "(?i)m+",
    )


async def test_get_groups_suite_275():
    # "(?i)[M]+"

    check(
        "(?i)[M]+",
    )


async def test_get_groups_suite_276():
    # "(?i)[m]+"

    check(
        "(?i)[m]+",
    )


async def test_get_groups_suite_277():
    # "'(?:\\\\'|[^'])*?'"

    check(
        "'(?:\\\\'|[^'])*?'",
    )


async def test_get_groups_suite_278():
    # "^.*?$"

    check(
        "^.*?$",
    )


async def test_get_groups_suite_279():
    # "a[^>]*?b"

    check(
        "a[^>]*?b",
    )


async def test_get_groups_suite_280():
    # "^a*?$"

    check(
        "^a*?$",
    )


async def test_get_groups_suite_281():
    # "^((a)c)?(ab)$"

    check(
        "^((a)c)?(ab)$",
        optional(),
        optional(),
        always_present(),
    )

    check(
        "^(?P<group0>(a)c)?(ab)$",
        optional("group0"),
        optional(),
        always_present(),
    )

    check(
        "^((a)c)?(?P<group0>ab)$",
        optional(),
        optional(),
        always_present("group0"),
    )

    check(
        "^(?P<group0>(a)c)?(?P<group1>ab)$",
        optional("group0"),
        optional(),
        always_present("group1"),
    )


async def test_get_groups_suite_282():
    # "^([ab]*?)(?=(b)?)c"

    check(
        "^([ab]*?)(?=(b)?)c",
        always_present(),
        optional(),
    )

    check(
        "^(?P<group0>[ab]*?)(?=(b)?)c",
        always_present("group0"),
        optional(),
    )

    check(
        "^([ab]*?)(?=(?P<group0>b)?)c",
        always_present(),
        optional("group0"),
    )

    check(
        "^(?P<group0>[ab]*?)(?=(?P<group1>b)?)c",
        always_present("group0"),
        optional("group1"),
    )


async def test_get_groups_suite_283():
    # "^([ab]*?)(?!(b))c"

    check(
        "^([ab]*?)(?!(b))c",
        always_present(),
        optional(),
    )

    check(
        "^(?P<group0>[ab]*?)(?!(b))c",
        always_present("group0"),
        optional(),
    )

    check(
        "^([ab]*?)(?!(?P<group0>b))c",
        always_present(),
        optional("group0"),
    )

    check(
        "^(?P<group0>[ab]*?)(?!(?P<group1>b))c",
        always_present("group0"),
        optional("group1"),
    )


async def test_get_groups_suite_284():
    # "^([ab]*?)(?<!(a))c"

    check(
        "^([ab]*?)(?<!(a))c",
        always_present(),
        optional(),
    )

    check(
        "^(?P<group0>[ab]*?)(?<!(a))c",
        always_present("group0"),
        optional(),
    )

    check(
        "^([ab]*?)(?<!(?P<group0>a))c",
        always_present(),
        optional("group0"),
    )

    check(
        "^(?P<group0>[ab]*?)(?<!(?P<group1>a))c",
        always_present("group0"),
        optional("group1"),
    )


async def test_get_groups_suite_285():
    # "\\b.\\b"

    check(
        "\\b.\\b",
    )


async def test_get_groups_suite_286():
    # "(?u)\\b.\\b"

    check(
        "(?u)\\b.\\b",
    )


async def test_get_groups_suite_287():
    # "(?u)\\w"

    check(
        "(?u)\\w",
    )
