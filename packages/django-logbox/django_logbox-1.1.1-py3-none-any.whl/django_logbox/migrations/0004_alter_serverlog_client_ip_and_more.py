# Generated by Django 5.1.1 on 2024-10-27 07:59

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("django_logbox", "0003_rename_exception_serverlog_exception_type_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="serverlog",
            name="client_ip",
            field=models.GenericIPAddressField(
                help_text="IP address of the client making the request.",
                verbose_name="client_ip",
            ),
        ),
        migrations.AlterField(
            model_name="serverlog",
            name="exception_message",
            field=models.TextField(
                help_text="Detailed message provided by the exception.",
                null=True,
                verbose_name="exception_message",
            ),
        ),
        migrations.AlterField(
            model_name="serverlog",
            name="exception_type",
            field=models.CharField(
                help_text="Class name or type of the exception, if any occurred.",
                max_length=255,
                null=True,
                verbose_name="exception_type",
            ),
        ),
        migrations.AlterField(
            model_name="serverlog",
            name="method",
            field=models.CharField(
                help_text="HTTP method used for the request, e.g., 'GET', 'POST', 'PUT'.",
                max_length=10,
                verbose_name="method",
            ),
        ),
        migrations.AlterField(
            model_name="serverlog",
            name="path",
            field=models.CharField(
                help_text="The endpoint path requested, excluding the domain, e.g., '/api/v1/users/'.",
                max_length=255,
                verbose_name="path",
            ),
        ),
        migrations.AlterField(
            model_name="serverlog",
            name="querystring",
            field=models.TextField(
                help_text="Query parameters of the request as a URL-encoded string, e.g., 'param1=value1&param2=value2'.",
                null=True,
                verbose_name="querystring",
            ),
        ),
        migrations.AlterField(
            model_name="serverlog",
            name="request_body",
            field=models.TextField(
                help_text="Body content of the request, usually JSON or form data. Null if no body was sent.",
                null=True,
                verbose_name="request_body",
            ),
        ),
        migrations.AlterField(
            model_name="serverlog",
            name="server_ip",
            field=models.GenericIPAddressField(
                help_text="IP address of the server handling the request.",
                verbose_name="server_ip",
            ),
        ),
        migrations.AlterField(
            model_name="serverlog",
            name="status_code",
            field=models.IntegerField(
                help_text="HTTP status code of the response, e.g., 200, 404, 500.",
                verbose_name="status_code",
            ),
        ),
        migrations.AlterField(
            model_name="serverlog",
            name="timestamp",
            field=models.DateTimeField(
                help_text="Date and time when this log entry was created.",
                verbose_name="timestamp",
            ),
        ),
        migrations.AlterField(
            model_name="serverlog",
            name="traceback",
            field=models.TextField(
                help_text="Full traceback of the exception for debugging purposes.",
                null=True,
                verbose_name="traceback",
            ),
        ),
        migrations.AlterField(
            model_name="serverlog",
            name="user_agent",
            field=models.TextField(
                help_text="User agent string from the client's request header, providing browser and OS details.",
                max_length=255,
                null=True,
                verbose_name="user_agent",
            ),
        ),
    ]
