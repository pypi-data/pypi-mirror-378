{"src/lib/components/DraggableDiv.react.js":{"description":"","displayName":"DraggableDiv","methods":[{"name":"onDragStart","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null}],"props":{"id":{"type":{"name":"custom","raw":"PropTypes.string"},"required":false,"description":"The ID of this component, used to identify dash components in callbacks"},"children":{"type":{"name":"custom","raw":"PropTypes.node"},"required":false,"description":"The children of this component"},"style":{"type":{"name":"custom","raw":"PropTypes.object"},"required":false,"description":"The style of this component"},"setProps":{"type":{"name":"custom","raw":"PropTypes.func"},"required":false,"description":"Dash-assigned callback that gets fired when the input changes.\r\nThis callback will have the new value."}}},"src/lib/components/Grid.react.js":{"description":"","displayName":"Grid","methods":[{"name":"generateDOM","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"onLayoutChange","docblock":null,"modifiers":[],"params":[{"name":"layout","type":null}],"returns":null},{"name":"onDrop","docblock":null,"modifiers":[],"params":[{"name":"layout","type":null},{"name":"layoutItem","type":null},{"name":"_event","type":null}],"returns":null}],"props":{"id":{"type":{"name":"string"},"required":false,"description":"The ID used to identify this component in Dash callbacks"},"width":{"type":{"name":"number"},"required":false,"description":"Initial width of the grid"},"autoSize":{"type":{"name":"bool"},"required":false,"description":"If true, container size swells to fit contents","defaultValue":{"value":"true","computed":false}},"cols":{"type":{"name":"number"},"required":false,"description":"The number of columns in the grid","defaultValue":{"value":"12","computed":false}},"draggableCancel":{"type":{"name":"string"},"required":false,"description":"A CSS selector for tags that will not be draggable\r\nUse this to so that some elements like buttons register clicks as expected"},"draggableHandle":{"type":{"name":"string"},"required":false,"description":"A CSS selector for tags that will act as the draggable handle"},"compactType":{"type":{"name":"enum","value":[{"value":"'vertical'","computed":false},{"value":"'horizontal'","computed":false},{"value":"null","computed":false}]},"required":false,"description":"Compaction type","defaultValue":{"value":"null","computed":false}},"layout":{"type":{"name":"arrayOf","value":{"name":"object"}},"required":false,"description":"The layout of the grid","defaultValue":{"value":"[]","computed":false}},"margin":{"type":{"name":"arrayOf","value":{"name":"number"}},"required":false,"description":"Margin between items [x, y] in px","defaultValue":{"value":"[10, 10]","computed":false}},"containerPadding":{"type":{"name":"arrayOf","value":{"name":"number"}},"required":false,"description":"Padding inside the container [x, y] in px","defaultValue":{"value":"[10, 10]","computed":false}},"rowHeight":{"type":{"name":"number"},"required":false,"description":"The row height of the grid. Default is 150.","defaultValue":{"value":"150","computed":false}},"isDraggable":{"type":{"name":"bool"},"required":false,"description":"Whether the grid items are draggable","defaultValue":{"value":"true","computed":false}},"isResizable":{"type":{"name":"bool"},"required":false,"description":"Whether the grid items are resizable","defaultValue":{"value":"true","computed":false}},"isBounded":{"type":{"name":"bool"},"required":false,"description":"Is bounded","defaultValue":{"value":"false","computed":false}},"useCSSTransforms":{"type":{"name":"bool"},"required":false,"description":"Uses CSS3 `translate()` instead of position top/left.\r\nThis makes about 6x faster paint performance","defaultValue":{"value":"true","computed":false}},"transformScale":{"type":{"name":"number"},"required":false,"description":"If parent DOM node of ResponsiveReactGridLayout or ReactGridLayout has \"transform: scale(n)\" css property,\r\nwe should set scale coefficient to avoid render artefacts while dragging.","defaultValue":{"value":"1","computed":false}},"allowOverlap":{"type":{"name":"bool"},"required":false,"description":"allow overlapping in the grid","defaultValue":{"value":"false","computed":false}},"preventCollision":{"type":{"name":"bool"},"required":false,"description":"If true, grid items wont change position when being dragged over","defaultValue":{"value":"false","computed":false}},"isDroppable":{"type":{"name":"bool"},"required":false,"description":"if true, droppable elements (with draggable=true) can be dropped on the grid\r\ndroppedItem is the layout information of the dropped element","defaultValue":{"value":"false","computed":false}},"droppedItem":{"type":{"name":"object"},"required":false,"description":"ID of the dropped element"},"resizeHandles":{"type":{"name":"arrayOf","value":{"name":"string"}},"required":false,"description":"Which resize handles to display\r\ns, e, w, n, se, ne, sw, nw","defaultValue":{"value":"['se']","computed":false}},"children":{"type":{"name":"node"},"required":false,"description":"The children of the grid"},"setProps":{"type":{"name":"func"},"required":false,"description":"Dash-assigned callback that should be called whenever any of the\r\nproperties change"}}},"src/lib/components/ResponsiveGrid.react.js":{"description":"","displayName":"Grid","methods":[{"name":"calculateInitialBreakpoint","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"generateDOM","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"onLayoutChange","docblock":null,"modifiers":[],"params":[{"name":"currentLayout","type":null},{"name":"allLayouts","type":null}],"returns":null},{"name":"onDrop","docblock":null,"modifiers":[],"params":[{"name":"layout","type":null},{"name":"layoutItem","type":null},{"name":"_event","type":null}],"returns":null},{"name":"onBreakpointChange","docblock":null,"modifiers":[],"params":[{"name":"breakpoint","type":null},{"name":"cols","type":null}],"returns":null}],"props":{"id":{"type":{"name":"string"},"required":false,"description":"The ID used to identify this component in Dash callbacks"},"width":{"type":{"name":"number"},"required":false,"description":"Initial width of the grid"},"autoSize":{"type":{"name":"bool"},"required":false,"description":"If true, container size swells to fit contents","defaultValue":{"value":"true","computed":false}},"cols":{"type":{"name":"object"},"required":false,"description":"The number of columns in the grid. This is an object with keys lg, md, sm, xs, xxs","defaultValue":{"value":"{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }","computed":false}},"col":{"type":{"name":"number"},"required":false,"description":"The current column count"},"draggableCancel":{"type":{"name":"string"},"required":false,"description":"A CSS selector for tags that will not be draggable\r\nUse this to so that some elements like buttons register clicks as expected"},"draggableHandle":{"type":{"name":"string"},"required":false,"description":"A CSS selector for tags that will act as the draggable handle"},"compactType":{"type":{"name":"enum","value":[{"value":"'vertical'","computed":false},{"value":"'horizontal'","computed":false},{"value":"null","computed":false}]},"required":false,"description":"Compaction type","defaultValue":{"value":"null","computed":false}},"layout":{"type":{"name":"arrayOf","value":{"name":"object"}},"required":false,"description":"The layout of the grid, Readonly."},"layouts":{"type":{"name":"object"},"required":false,"description":"The layouts of the grid"},"margin":{"type":{"name":"custom","raw":"PropTypes.arrayOf(PropTypes.number) || PropTypes.object"},"required":false,"description":"Margin between items [x, y] in px. Can be an object with keys lg, md, sm, xs, xxs\r\nand values [x, y]","defaultValue":{"value":"[10, 10]","computed":false}},"containerPadding":{"type":{"name":"custom","raw":"PropTypes.arrayOf(PropTypes.number) || PropTypes.object"},"required":false,"description":"Padding inside the container [x, y] in px. Can be an object with keys lg, md, sm, xs, xxs\r\nand values [x, y]","defaultValue":{"value":"[10, 10]","computed":false}},"rowHeight":{"type":{"name":"number"},"required":false,"description":"The row height of the grid. Default is 150.","defaultValue":{"value":"150","computed":false}},"isDraggable":{"type":{"name":"bool"},"required":false,"description":"Whether the grid items are draggable","defaultValue":{"value":"true","computed":false}},"isResizable":{"type":{"name":"bool"},"required":false,"description":"Whether the grid items are resizable","defaultValue":{"value":"true","computed":false}},"isBounded":{"type":{"name":"bool"},"required":false,"description":"Is bounded","defaultValue":{"value":"false","computed":false}},"useCSSTransforms":{"type":{"name":"bool"},"required":false,"description":"Uses CSS3 `translate()` instead of position top/left.\r\nThis makes about 6x faster paint performance","defaultValue":{"value":"true","computed":false}},"transformScale":{"type":{"name":"number"},"required":false,"description":"If parent DOM node of ResponsiveReactGridLayout or ReactGridLayout has \"transform: scale(n)\" css property,\r\nwe should set scale coefficient to avoid render artefacts while dragging.","defaultValue":{"value":"1","computed":false}},"allowOverlap":{"type":{"name":"bool"},"required":false,"description":"allow overlapping in the grid","defaultValue":{"value":"false","computed":false}},"preventCollision":{"type":{"name":"bool"},"required":false,"description":"If true, grid items wont change position when being dragged over","defaultValue":{"value":"false","computed":false}},"isDroppable":{"type":{"name":"bool"},"required":false,"description":"if true, droppable elements (with draggable=true) can be dropped on the grid\r\ndroppedItem is the layout information of the dropped element","defaultValue":{"value":"false","computed":false}},"droppedItem":{"type":{"name":"object"},"required":false,"description":"ID of the dropped element"},"resizeHandles":{"type":{"name":"arrayOf","value":{"name":"string"}},"required":false,"description":"Which resize handles to display\r\ns, e, w, n, se, ne, sw, nw","defaultValue":{"value":"['se']","computed":false}},"breakpoints":{"type":{"name":"object"},"required":false,"description":"breakpoints for responsive design","defaultValue":{"value":"{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }","computed":false}},"breakpoint":{"type":{"name":"string"},"required":false,"description":"The current breakpoint"},"children":{"type":{"name":"node"},"required":false,"description":"The children of the grid"},"setProps":{"type":{"name":"func"},"required":false,"description":"Dash-assigned callback that should be called whenever any of the\r\nproperties change"}}}}