name: CI

"on":
  merge_group: {}
  pull_request: {}
  push:
    branches-ignore:
      # These should always correspond to pull requests, so ignore them for
      # the push trigger and let them be triggered by the pull_request
      # trigger, avoiding running the workflow twice.  This is a minor
      # optimization so there's no need to ensure this is comprehensive.
      - "dependabot/**"
      - "gh-readonly-queue/**"
      - "renovate/**"
      - "tickets/**"
      - "u/**"
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # full history for setuptools_scm

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/setup-node@v5
        name: Use Node.js
        with:
          node-version-file: ".nvmrc"

      - name: NPM install
        run: |
          npm install -g gulp-cli
          npm install

      - name: What pandoc
        run: which pandoc | true

      - name: Python install
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
          pip install tox

      - name: What pandoc
        run: which pandoc | true

      - name: Build assets
        run: gulp assets --env=deploy

      - name: Download Pandoc
        run: |
          downloadUrl="https://github.com/jgm/pandoc/releases/download/2.19.2/pandoc-2.19.2-1-amd64.deb"
          wget --no-verbose "$downloadUrl"
          sudo dpkg -i "${downloadUrl##*/}"
          pandoc --version

      - name: Run tests
        run: tox -e py,lint # ,typing

      - name: What pandoc
        run: which pandoc | true

  test-packaging:
    name: Test packaging
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [test]

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # full history for setuptools_scm

      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: NPM install
        run: |
          npm install -g gulp-cli
          npm install

      - name: Build assets
        run: gulp assets

      - name: Build and publish
        uses: lsst-sqre/build-and-publish-to-pypi@v3
        with:
          upload: false

  pypi:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [test-packaging]
    environment:
      name: pypi
      url: https://pypi.org/p/lander
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # full history for setuptools_scm

      - uses: actions/setup-node@v5
        name: Use Node.js
        with:
          node-version-file: ".nvmrc"

      - name: NPM install
        run: |
          npm install -g gulp-cli
          npm install

      - name: Build assets
        run: gulp assets --env=deploy

      - name: Build and publish
        uses: lsst-sqre/build-and-publish-to-pypi@v3
