Metadata-Version: 2.4
Name: funtracks
Version: 1.3.0
Summary: Cell tracking data model
Author-email: Caroline Malin-Mayor <malinmayorc@janelia.hhmi.org>
License: BSD 3-Clause License
Project-URL: Bug Tracker, https://github.com/funkelab/funtracks/issues
Project-URL: Documentation, https://funkelab.github.io/funtracks/
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Scientific/Engineering :: Image Processing
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: pydantic
Requires-Dist: networkx
Requires-Dist: psygnal
Requires-Dist: scikit-image
Requires-Dist: geff
Requires-Dist: dask
Provides-Extra: testing
Requires-Dist: pytest; extra == "testing"
Requires-Dist: pytest-cov; extra == "testing"
Provides-Extra: docs
Requires-Dist: mkdocs-material; extra == "docs"
Requires-Dist: mike; extra == "docs"
Requires-Dist: mkdocstrings[python]; extra == "docs"
Requires-Dist: mkdocs-api-autonav; extra == "docs"
Provides-Extra: dev
Requires-Dist: ruff; extra == "dev"
Requires-Dist: pre-commit; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Provides-Extra: all
Requires-Dist: funtracks[dev,docs,testing]; extra == "all"
Dynamic: license-file

# Funtracks
A data model for cell tracking with actions, undo history, persistence, and more!

[![tests](https://github.com/funkelab/funtracks/workflows/tests/badge.svg)](https://github.com/funkelab/funtracks/actions)
[![codecov](https://codecov.io/gh/funkelab/funtracks/branch/main/graph/badge.svg)](https://codecov.io/gh/funkelab/funtracks)

The full documentation can be found [here](https://funkelab.github.io/funtracks/).

----------------------------------

## Installation

pip install funtracks (soon)

Alternatively, you can use pixi to install and run funtracks code. For example, to run the tests,
you can call `pixi run test` to run our pre-configured pixi task in the testing environment.

## Issues

If you encounter any problems, please
[file an issue](https://github.com/funkelab/funtracks/issues)
along with a detailed description.


# Updating documentation
We are using mkdocs-material and mike to get versioned documentation. Mike will
push changes to the gh-pages branch, which we can serve from the Github Pages settings. This should happen automatically from the github action upon push to 'main' (with alias 'dev') and newly tagged version (with alias 'latest'), but we are documenting it here in case we need to do it manually at some point.

To publish a commit to the gh-pages branch manually:
```bash
pixi run -e docs mike deploy <version> <alias>
```

To preview pushed chnages locally:
```bash
pixi run -e docs mike serve
```
Remember not to push your local gh-pages branch on accident after previewing changes.
To reset your local branch to the remote gh-pages, you can run:
```bash
git fetch
git checkout gh-pages
git reset --hard origin/gh-pages
```
