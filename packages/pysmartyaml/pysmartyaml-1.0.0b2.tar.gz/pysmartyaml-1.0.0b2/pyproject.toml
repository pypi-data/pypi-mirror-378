[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pysmartyaml"
version = "1.0.0b2"
description = "Extended YAML format with custom directives for imports, environment variables, and more"
readme = {file = "README.md", content-type = "text/markdown"}
license = "MIT"
authors = [
    {name = "Albert Puigsech", email = "albert@puigsech.com"}
]
maintainers = [
    {name = "Albert Puigsech", email = "albert@puigsech.com"}
]
keywords = ["yaml", "configuration", "import", "environment", "template"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup",
]
requires-python = ">=3.9"
dependencies = [
    "PyYAML>=5.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "mypy>=1.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "pytest-xdist>=2.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
]

[project.urls]
"Homepage" = "https://github.com/apuigsech/smartyaml"
"Bug Reports" = "https://github.com/apuigsech/smartyaml/issues"
"Source" = "https://github.com/apuigsech/smartyaml"
"Documentation" = "https://github.com/apuigsech/smartyaml#readme"
"Changelog" = "https://github.com/apuigsech/smartyaml/blob/main/CHANGELOG.md"

# Tool configurations
[tool.setuptools]
packages = [
    "smartyaml",
    "smartyaml.config",
    "smartyaml.directives",
    "smartyaml.directives.handlers",
    "smartyaml.errors",
    "smartyaml.pipeline",
    "smartyaml.utils"
]

[tool.setuptools.package-data]
smartyaml = ["py.typed"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["smartyaml"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "yaml.*",
]
ignore_missing_imports = true

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["smartyaml"]
known_third_party = ["yaml", "pytest"]

[tool.flake8]
max-line-length = 100
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "build",
    "dist",
    "*.egg-info",
]
per-file-ignores = [
    "__init__.py:F401",  # Allow unused imports in __init__.py
]
