{"hexparse.cmd.unlocker.unlock.all": "Unlocked %s great patterns", "hexparse.cmd.unlocker.lock.all": "Locked %s great patterns", "hexparse.cmd.unlocker.unlock.one": "Unlocked %s", "hexparse.cmd.unlocker.lock.one": "Locked %s", "hexparse.cmd.read.display": "Result: %s", "hexparse.cmd.read.share": "%s shares: %s (%s)", "hexparse.cmd.macro.list.title": "%s %s(s) in total:", "hexparse.cmd.macro.list.title.macro": "macro", "hexparse.cmd.macro.list.title.dialect": "dialect", "hexparse.cmd.macro.list.kv": "%s = %s", "hexparse.cmd.macro.define": "Defined %s = %s.", "hexparse.cmd.macro.remove": "Removed %s.", "hexparse.cmd.conflict.list_all.title": "All pattern names with conflicts:", "hexparse.cmd.conflict.list_all.entry": "- \"%s\" (%d patterns)", "hexparse.cmd.conflict.list.title": "All conflicts under name \"%s\" (currently set to %s):", "hexparse.cmd.conflict.list.entry": "- \"%s\" (%s)", "hexparse.cmd.conflict.edited": "Set short name \"%s\" to pattern \"%s\" (%s).", "hexparse.cmd.conflict.error": "Error when setting short name \"%s\": %s", "hexparse.cmd.conflict.error.name": "Invalid short name", "hexparse.cmd.conflict.error.id": "Invalid pattern ID: %s", "hexparse.msg.parse_error": "Error when parsing: %s", "hexparse.msg.parse_error_node": "Error when parsing %s: %s", "hexparse.msg.error.bracket.closed": "too many closed bracket", "hexparse.msg.error.bracket.open": "too many open bracket", "hexparse.msg.error.unknown_symbol": "Unknown symbol: %s", "hexparse.msg.error.invalid_iota": "invalid iota: %s", "hexparse.msg.error.matrix.size": "invalid matrix size: %s", "hexparse.msg.error.matrix.value": "invalid matrix value: %s", "hexparse.msg.error.matrix.data_amount": "invalid matrix data size (%s < %s)", "hexparse.msg.error.illegal_pattern_angle": "illegal char '%s' in sequence \"%s\"", "hexparse.msg.error.code_too_long": "CODE TOO LONG (%s)", "hexparse.msg.error.used_macro": "Macro %s already used", "hexparse.msg.error.invalid_dialect_key": "Dialects can't start with '#' (%s)", "hexparse.msg.error.macro.too_many": "Macro/dialect count exceeded max; trimmed %s entries", "hexparse.msg.error.macro.too_many.single": "Macro/dialect count exceeded max; add failed", "hexparse.msg.error.macro.too_long": "Single macro too long; trimmed last %s characters", "hexparse.msg.error.macro.too_long.key": "Macro/dialect key too long; add failed", "hexcasting.action.hexparse:focus2code": "Encoding Gambit", "hexcasting.action.hexparse:code2focus": "Decoding Gambit", "hexcasting.action.hexparse:learn_patterns": "Learn Great Patterns", "hexcasting.action.hexparse:remove_comments": "No-Comment Purification", "hexcasting.action.hexparse:create_linebreak": "Line-Break Prfn.", "hexcasting.action.hexparse:compile": "Compile", "hexparse.book.entry": "HexParse Patterns", "book.descrip.hexparse:focus2code": "Reads data from the focus I'm holding, and prints parsed code into chat menu.$(br)Can only be casted by staff.", "book.descrip.hexparse:code2focus": "Reads code from my local clipboard, then parse it into the focus I'm holding.$(br)Can only be casted by staff.", "book.descrip.hexparse:learn_patterns": "Extract great patterns from handheld items (ancient scrolls, focuses, compiled casting items, etc.), and returns a list of newly learned ones by the parser.", "book.descrip.hexparse:remove_comments": "Clears all comment iotas in a list, returns processed list.", "book.descrip.hexparse:create_linebreak": "Adds a line-break comment iota with space-indents of given number to the stack.", "book.descrip.hexparse:compile": "Compiles accepted string iota into an iota list; has no effect if $(bold)$(thing)MoreIotas/$ not installed.", "text.autoconfig.hexparse.option.common.parseGreatSpells": "Parse Great Spells", "text.autoconfig.hexparse.option.common.commentParsingMode": "Comment parsing mode", "text.autoconfig.hexparse.option.common.indentParsingMode": "Indent parsing mode", "text.autoconfig.hexparse.option.common.parserBaseCost": "Base cost of parsing a pattern", "text.autoconfig.hexparse.option.common.showColorfulNested": "Colorful nested introspections", "text.autoconfig.hexparse.option.common.showUnknownNBT": "Display content of unsupported iotas"}