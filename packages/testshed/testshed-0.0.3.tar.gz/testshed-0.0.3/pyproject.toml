[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "testshed"
description = "🛠️ PyTest's tool shed: Docker up, Playwright on, cleanup done"
requires-python = ">=3.11"
authors = [{ name = "Dov Benyomin Sohacheski", email = "b@kloud.email" }]
license = { text = "MIT" }
keywords = ["pytest", "docker", "fixtures", "playwright", "testing"]
classifiers = [
  "Framework :: Pytest",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Typing :: Typed",
]
dependencies = [
  "playwright>=1.54.0,<2.0.0",
  "pytest>=8.4.1,<9.0.0",
  "python-on-whales>=0.78.0,<1.0.0",
  "PyYAML>=6.0.2,<7.0.0",
  "requests>=2.32.4,<3.0.0",
]
dynamic = ["readme", "version"]

[project.urls]
"Homepage" = "https://github.com/kloudkit/testshed"
"Bug Tracker" = "https://github.com/kloudkit/testshed/issues"
"Source Code" = "https://github.com/kloudkit/testshed"

[project.optional-dependencies]
dev = [
  "pre-commit>=4.2.0",
  "ruff>=0.12.0",
  "coverage>=7.10.6",
  "pytest-cov>=7.0.0",
]

[project.entry-points.pytest11]
testshed = "kloudkit.testshed.plugin"

[tool.setuptools.dynamic]
readme = { file = ["README.md"], content-type = "text/markdown" }
version = { attr = "kloudkit.testshed.__version__" }

[tool.coverage.run]
source = ["kloudkit.testshed"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "@(abc\\.)?abstractmethod",
    "# pragma: no cover",
    "if __name__ == .__main__.:",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]
show_missing = true
precision = 2
fail_under = 80

[tool.coverage.html]
directory = "htmlcov"
