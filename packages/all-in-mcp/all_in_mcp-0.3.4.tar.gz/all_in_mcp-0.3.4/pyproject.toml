[project]
name = "all-in-mcp"
version = "0.3.4"
description = "An MCP (Model Context Protocol) server providing daily-use utility functions and academic paper search capabilities"
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.10"
authors = [{ name = "isomo", email = "jiahaoxiang2000@gmail.com" }]
keywords = [
    "mcp",
    "model-context-protocol",
    "utilities",
    "academic",
    "papers",
    "iacr",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: General",
]
dependencies = [
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "pypdf>=4.0.0",
    "httpx>=0.24.0",
    "fastmcp>=2.11.3",
]

[project.urls]
Homepage = "https://github.com/jiahaoxiang2000/all-in-mcp"
Repository = "https://github.com/jiahaoxiang2000/all-in-mcp"
Documentation = "https://github.com/jiahaoxiang2000/all-in-mcp/tree/main/docs"
Issues = "https://github.com/jiahaoxiang2000/all-in-mcp/issues"

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "build>=1.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/all_in_mcp", "src/apaper"]

[tool.hatch.build.targets.sdist]
include = ["/src", "/README.md", "/pyproject.toml", "/docs"]

[project.scripts]
all-in-mcp = "all_in_mcp:main"
apaper = "apaper:main"

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",
    "F",
    "W",
    "I",
    "N",
    "UP",
    "B",
    "A",
    "C4",
    "ICN",
    "PIE",
    "PYI",
    "RSE",
    "RUF",
]
ignore = ["E501"] # Line too long (handled by formatter)

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Tests use unittest - run with: uv run python tests/test_*.py

# Coverage configuration removed - not using pytest-cov
