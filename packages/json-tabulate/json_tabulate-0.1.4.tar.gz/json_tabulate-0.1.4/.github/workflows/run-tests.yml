name: Run tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: { }
  # Allow this workflow to be called by other workflows.
  # Reference: https://docs.github.com/en/actions/using-workflows/reusing-workflows
  workflow_call: { }

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        # Note: Caching (of the packages that `uv` builds while resolving dependencies) is "enabled by default on GitHub-hosted runners."
        #       Reference: https://github.com/astral-sh/setup-uv/blob/main/README.md#enable-caching
        #       Here, we make it so the cache gets invalidated whenever the `uv.lock` file changes.
        #       Reference: https://github.com/astral-sh/setup-uv/blob/main/README.md#cache-dependency-glob
        cache-dependency-glob: "uv.lock"
    - name: Set up Python virtual environment
      run: uv sync
    # Note: `ruff format --diff` will return a non-zero exit code if it finds violations.
    #       That is based upon my observations of it while running it locally.
    # Docs: https://docs.astral.sh/ruff/formatter/#exit-codes
    - name: Check format
      run: uv run ruff format --diff
    # Note: `ruff check` will return a non-zero exit code if it finds violations.
    # Reference: https://docs.astral.sh/ruff/linter/#exit-codes
    - name: Lint code
      run: uv run ruff check
    - name: Run tests
      run: uv run pytest --cov
