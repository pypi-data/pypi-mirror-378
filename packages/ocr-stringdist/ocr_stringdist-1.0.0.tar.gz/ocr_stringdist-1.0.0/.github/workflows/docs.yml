name: Deploy Documentation to Pages

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering from the Actions tab

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Create virtual environment
        run: uv venv

      - name: Install dependencies
        run: uv sync --group docs

      - name: Build Sphinx documentation
        run: |
          uv run make -C docs html
          # Add a .nojekyll file to the build output directory to prevent
          # GitHub Pages from ignoring files that start with an underscore
          # (like Sphinx's _static and _images directories).
          touch docs/build/html/.nojekyll

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire directory. GitHub Pages expects index.html at the root.
          path: './docs/build/html'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        # This action automatically downloads the artifact uploaded by
        # upload-pages-artifact and deploys it to GitHub Pages.
