[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cloudvault4"
version = "1.0.1"
authors = [
    {name = "ibrahimsql", email = "ibrahimsql@proton.me"},
]
description = "Multi-cloud storage bucket discovery via certificate transparency monitoring"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Information Technology", 
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: System :: Systems Administration",
    "Topic :: Internet :: WWW/HTTP",
]
keywords = [
    "security", "cloud", "aws", "s3", "gcp", "azure", "blob-storage", 
    "bucket-discovery", "certificate-transparency", "reconnaissance"
]

dependencies = [
    "requests>=2.28.0",
    "pyyaml>=6.0",
    "termcolor>=2.0.0",
    "tldextract>=3.4.0",
    "websockets>=10.0",
    "fake-useragent>=1.4.0",
    "dnspython>=2.2.0",
    "pysocks>=1.7.1",
    "cryptography>=3.4.8",
    "python-magic>=0.4.27",
    "psycopg2-binary>=2.9.0",
    "pymongo>=4.0.0",
    "mysql-connector-python>=8.0.0",
    "slack-sdk>=3.19.0",
    "paramiko>=3.0.0",
    "pillow>=10.0.0",
    "pypdf2>=3.0.0",
    "python-nmap>=0.7.1",
    "numpy>=1.24.0",
    "colorama>=0.4.6",
    "urllib3>=2.0.0",
    "aiohttp>=3.8.0",
]

[project.optional-dependencies]
aws = ["boto3>=1.26.0", "botocore>=1.29.0"]
gcp = ["google-cloud-storage>=2.7.0"]
azure = ["azure-storage-blob>=12.14.0"]
all = [
    "boto3>=1.26.0", 
    "botocore>=1.29.0",
    "google-cloud-storage>=2.7.0", 
    "azure-storage-blob>=12.14.0"
]
stealth = [
    "fake-useragent>=1.4.0",
    "dnspython>=2.2.0",
    "pysocks>=1.7.1"
]
exploit = [
    "cryptography>=3.4.8",
    "python-magic>=0.4.27",
    "psycopg2-binary>=2.9.0",
    "pymongo>=4.0.0",
    "mysql-connector-python>=8.0.0",
    "slack-sdk>=3.19.0"
]
full = [
    "boto3>=1.26.0", 
    "botocore>=1.29.0",
    "google-cloud-storage>=2.7.0", 
    "azure-storage-blob>=12.14.0",
    "fake-useragent>=1.4.0",
    "dnspython>=2.2.0",
    "pysocks>=1.7.1",
    "cryptography>=3.4.8",
    "python-magic>=0.4.27",
    "psycopg2-binary>=2.9.0",
    "pymongo>=4.0.0",
    "mysql-connector-python>=8.0.0",
    "slack-sdk>=3.19.0"
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]

[project.urls]
"Homepage" = "https://github.com/ibrahmsql/CloudVault"
"Bug Reports" = "https://github.com/ibrahmsql/CloudVault/issues"
"Source" = "https://github.com/ibrahmsql/CloudVault"
"Documentation" = "https://github.com/ibrahmsql/CloudVault#readme"

[project.scripts]
cloudvault = "cloudvault_discovery.cli:main"

[tool.setuptools.packages.find]
include = ["cloudvault_discovery*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
cloudvault_discovery = ["*.txt", "*.yaml", "permutations/*.txt"]

[tool.black]
line-length = 100
target-version = ['py38']

[tool.mypy]
python_version = "1.0.1"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "1.0.1"
addopts = "-ra -q --strict-markers --cov=cloudvault_discovery"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]