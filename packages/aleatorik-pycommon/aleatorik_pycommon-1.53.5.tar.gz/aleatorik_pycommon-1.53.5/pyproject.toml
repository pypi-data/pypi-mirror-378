[project]
name = "aleatorik-pycommon"
version = "1.53.5"
description = "Aleatorik PyCommon - 구조화된 로깅 및 공통 유틸리티 라이브러리"
authors = [{name = "Aleatorik", email = "info@aleatorik.com"}]
readme = "README.md"
requires-python = ">=3.11,<4"
keywords = ["logging", "utilities", "aleatorik", "fastapi", "structured-logging"]
classifiers = [
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
]
license = {text = "MIT"}

dependencies = [
    "loguru>=0.7.3,<0.8.0",
    "pydantic-settings>=2.7.1,<3.0.0",
    "requests>=2.32.3,<3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.2",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
]

[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["pylogger*"]

# Ruff 설정
[tool.ruff]
line-length = 88
target-version = "py311"
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "*.egg-info",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort (import sorting)
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # flake8-bandit (security)
    "RUF", # ruff specific rules
]
ignore = [
    "E501",  # line too long (formatter가 처리)
    "S104",  # 모든 인터페이스 바인딩 허용 (개발 환경)
    "S608",  # SQL injection warning (parameterized query 사용 중)
    "B008",  # FastAPI Body() 호출 패턴 허용
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[dependency-groups]
dev = [
    "build>=1.3.0",
    "pre-commit>=4.2.0",
    "ruff>=0.12.4",
    "twine>=6.1.0",
]

[tool.ruff.lint.isort]
known-first-party = ["pycommon"]
force-single-line = false

[tool.uv]
# 프로젝트 내부에 가상환경 생성
managed = true
package = true

[tool.uv.sources]
# 로컬 패키지로 설정
