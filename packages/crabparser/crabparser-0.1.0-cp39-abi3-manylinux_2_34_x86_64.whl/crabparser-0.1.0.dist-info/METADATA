Metadata-Version: 2.4
Name: crabparser
Version: 0.1.0
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Rust
Classifier: Topic :: Text Processing
Classifier: Topic :: Text Processing :: General
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Operating System :: OS Independent
Summary: High-performance text parser with smart chunking and multiple file format support
Keywords: parser,text,chunk,rust,performance,pdf,docx,csv
Author-email: Joao Merlin <loldinis@gmail.com>
License: MIT
Requires-Python: >=3.9
Description-Content-Type: text/markdown; charset=UTF-8; variant=GFM

# CrabParser

A high-performance text parsing library written in Rust with Python bindings.

## Features

- Fast semantic text chunking
- Respects paragraph and sentence boundaries
- Configurable chunk sizes
- Written in Rust for optimal performance
- Easy-to-use Python API

## Installation

```bash
pip install crabparser
```

## Usage

```python
from crabparser import TextParser

# Create parser with custom settings
parser = TextParser(
    chunk_size=500,
    respect_paragraphs=True,
    respect_sentences=True
)

# Parse text
text = "Your long text here..."
chunks = parser.parse(text)

# Parse file
chunks = parser.parse_file("document.txt")

# Save chunks to files
parser.save_chunks(chunks, "output_dir", "base_name")
```
