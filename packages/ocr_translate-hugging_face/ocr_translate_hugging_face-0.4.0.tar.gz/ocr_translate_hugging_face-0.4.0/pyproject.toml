[build-system]
# build the package with [flit](https://flit.readthedocs.io)
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
# See https://www.python.org/dev/peps/pep-0621/
name = "ocr_translate-hugging_face"
dynamic = ["version"] # read from ocr_translate_hugging_face/__init__.py
description = "Plugins to enable usage of HuggingFace Models in ocr_translate"
authors = []
readme = "README.md"
license = { file = "LICENSE.txt" }
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
keywords = ["django", "translation"]
requires-python = ">=3.10"
dependencies = [
    "django-ocr_translate>=0.7.0,<1.0",

    "torch~=2.8.0",
    "torchvision~=0.23.0",

    "transformers~=4.56.1",
    "tokenizers~=0.22.0",

    # Not direct dependencies but needed for supported models:
    # - Helsinki-NLP/...:               sentencepiece, sacremoses
    # - microsoft/trocr-small-printed:  protobuf
    "protobuf~=6.32.0",
    "fugashi~=1.5.1",
    "unidic-lite~=1.0.8",
    "sacremoses~=0.1.1",
    "safetensors~=0.6.2",
    "sentencepiece~=0.2.1",
]

[project.urls]
Source = "https://github.com/Crivella/ocr_translate-hugging_face"

[project.optional-dependencies]
release = [
    "flit",
]
tests = [
    "pytest",
    "pytest-cov",
    "pytest-django",
]
pre-commit = [
    "pre-commit",
    "pylint",
    "pylint-pytest",
    "pylint-django",
]

[project.entry-points."ocr_translate.ocr_data"]
"ocr.hugginface.ved.khawhite" = "ocr_translate_hugging_face:khawhite_ocr_model_data"
"ocr.hugginface.ved.lucidsmall" = "ocr_translate_hugging_face:lucid_small_korean_ocr_model_data"
"ocr.hugginface.ved.microsoftprinted.small" = "ocr_translate_hugging_face:microsoft_small_trocr_printed_model_data"
"ocr.hugginface.ved.microsoftprinted.base" = "ocr_translate_hugging_face:microsoft_base_trocr_printed_model_data"
# "ocr.hugginface.ved.microsoftstage1.small" = "ocr_translate_hugging_face:microsoft_small_trocr_stage1_model_data"

[project.entry-points."ocr_translate.tsl_data"]
"tsl.hugginface.seq2seq.helsinki_zh_en" = "ocr_translate_hugging_face:helsinki_zh_en_tsl_model_data"
"tsl.hugginface.seq2seq.helsinki_ja_en" = "ocr_translate_hugging_face:helsinki_ja_en_tsl_model_data"
"tsl.hugginface.seq2seq.helsinki_ko_en" = "ocr_translate_hugging_face:helsinki_ko_en_tsl_model_data"

# "tsl.hugginface.seq2seq.staka_ja_en" = "ocr_translate_hugging_face:staka_fugumt_ja_en_tsl_model_data"
# "tsl.hugginface.seq2seq.mitsua_ja_en" = "ocr_translate_hugging_face:mitsua_ja_en_tsl_model_data"

"tsl.hugginface.seq2seq.fbm2m_418m" = "ocr_translate_hugging_face:facebook_m2m100_418m_tsl_model_data"
"tsl.hugginface.seq2seq.fbm2m_1_2b" = "ocr_translate_hugging_face:facebook_m2m100_1_2b_tsl_model_data"

"tsl.hugginface.seq2seq.fbnllb_600m" = "ocr_translate_hugging_face:facebook_nllb_600m_tsl_model_data"

"tsl.hugginface.seq2seq.small100" = "ocr_translate_hugging_face:small100_model_data"


[project.entry-points."ocr_translate.ocr_models"]
"hugginface.ved" = "ocr_translate_hugging_face.plugin:HugginfaceVEDModel"

[project.entry-points."ocr_translate.tsl_models"]
"hugginface.seq2seq" = "ocr_translate_hugging_face.plugin:HugginfaceSeq2SeqModel"

[tool.flit.module]
name = "ocr_translate_hugging_face"

[tool.flit.sdist]
exclude = [
    ".gitignore", ".github", ".pre-commit-config.yaml",
    "tests/", "tests/*",
    ]

[tool.pytest.ini_options]
testpaths = ["tests"]
DJANGO_SETTINGS_MODULE = "settings"
log_cli = true
pythonpath = ["./tests"]

[tool.pylint.main]
load-plugins = [
    "pylint_pytest"
]

[tool.pylint.messages_control]
disable = [
    "logging-fstring-interpolation",
    "global-statement",
    "broad-exception-caught",
    "too-few-public-methods",
    "duplicate-code"
]


[tool.pylint.format]
max-line-length = 120
good-names = [
    "_",
    "l", "r", "b", "t",
    "l1", "r1", "b1", "t1",
    "l2", "r2", "b2", "t2",
    "i", "j",
    "k", "v",
    "f",
]

[tool.pylint.design]
max-args = 10
max-locals = 20
max-attributes = 12
