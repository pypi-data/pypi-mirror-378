[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "hive-nectar"
version = "0.1.3"
description = "Hive Blockchain Python Library"
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE.txt" }
authors = [{ name = "Michael Garcia", email = "thecrazygm@gmail.com" }]
maintainers = [{ name = "Michael Garcia", email = "thecrazygm@gmail.com" }]
keywords = ["hive", "library", "api", "rpc"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Financial and Insurance Industry",
  "Topic :: Office/Business :: Financial",
]
dependencies = [
  "ecdsa",
  "requests",
  "appdirs",
  "scrypt",
  "pycryptodomex",
  "Click",
  "prettytable",
  "ruamel.yaml",
  "diff_match_patch",
  "asn1crypto",
  "types-requests",
  "cryptography",
]

[project.urls]
"Homepage" = "http://www.github.com/thecrazygm/hive-nectar"
"Download" = "https://github.com/thecrazygm/hive-nectar/tarball/0.1.0b"
"Bug Tracker" = "https://github.com/thecrazygm/hive-nectar/issues"

[project.scripts]
hive-nectar = "nectar.cli:cli"

[tool.hatch.build.targets.wheel]
packages = [
  "src/nectar",
  "src/nectarapi",
  "src/nectarbase",
  "src/nectargraphenebase",
  "src/nectargrapheneapi",
  "src/nectarstorage",
]

[tool.uv]
default-groups = []

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true


[tool.pytest]
testpaths = ["tests"]
python_files = "test_*.py"

[tool.ruff]
target-version = "py310"
line-length = 100

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.lint]
select = ["E", "F", "W", "I"]
ignore = ["E501"]
exclude = [
  ".tox",
  ".git",
  "__pycache__",
  "docs/source/conf.py",
  "build",
  "dist",
  "tests/fixtures/*",
  "*.pyc",
  "*.egg-info",
  ".cache",
  ".eggs",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]


[tool.mypy]
python_version = ">3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[dependency-groups]
dev = [
  "mock",
  "pytest",
  "pytest-mock",
  "pytest-cov",
  "parameterized",
  "coverage",
  "tox",
  "sphinx",
  "sphinx-rtd-theme",
  "doc8",
  "ruff",
  "readme_renderer",
  "sphinx-click",
  "codacy-coverage",
  "codecov",
  "build",
  "tomli",
]
