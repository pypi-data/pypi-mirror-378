groups:
- neurodata_type_def: ShanksElectrode
  neurodata_type_inc: NWBDataInterface
  doc: electrode in the probe
  attributes:
  - name: name
    dtype: text
    doc: name of the electrode
  - name: rel_x
    dtype: float
    doc: the rel_x value of the electrode
  - name: rel_y
    dtype: float
    doc: the rel_y value of the electrode
  - name: rel_z
    dtype: float
    doc: the rel_z value of the electrode
- neurodata_type_def: Shank
  neurodata_type_inc: NWBDataInterface
  doc: shank in the probe
  attributes:
  - name: name
    dtype: text
    doc: name of the shank
  groups:
  - neurodata_type_inc: ShanksElectrode
    doc: electrode in the probe
    quantity: '*'
- neurodata_type_def: Probe
  neurodata_type_inc: Device
  doc: A custom Probes interface
  attributes:
  - name: id
    dtype: int
    doc: unique id of the probe
  - name: probe_type
    dtype: text
    doc: type of the probe
  - name: units
    dtype: text
    doc: units in probe, acceptable values um or mm
  - name: probe_description
    dtype: text
    doc: description of the probe
  - name: contact_side_numbering
    dtype: bool
    doc: Whether the electrodes were numbered in a scheme wherein the contacts were
      electrodes facing up toward the viewer (true) or if the numbering was based
      on the electrodes facing down (false). This is relevant when the goal is to
      determine where in the tissue each electrode contact is located.
    required: false
  - name: contact_size
    dtype: float
    doc: value of contact size in float
  groups:
  - neurodata_type_inc: Shank
    doc: shank in the probe
    quantity: '*'
- neurodata_type_def: DataAcqDevice
  neurodata_type_inc: Device
  doc: A custom Device interface
  attributes:
  - name: system
    dtype: text
    doc: system of device
  - name: amplifier
    dtype: text
    doc: amplifier
    required: false
  - name: adc_circuit
    dtype: text
    doc: adc_circuit
    required: false
- neurodata_type_def: CameraDevice
  neurodata_type_inc: Device
  doc: A custom Device interface
  attributes:
  - name: meters_per_pixel
    dtype: float
    doc: meters per pixel
  - name: camera_name
    dtype: text
    doc: name of the camera
  - name: model
    dtype: text
    doc: model of this camera device
  - name: lens
    dtype: text
    doc: lens info
  - name: frame_rate
    dtype: float
    doc: Frame rate of the camera, in frames per second.
    required: false
- neurodata_type_def: HeaderDevice
  neurodata_type_inc: Device
  doc: metadata from global configuration from header
  attributes:
  - name: headstage_serial
    dtype: text
    doc: headstage_serial from global configuration
  - name: headstage_smart_ref_on
    dtype: text
    doc: headstage_smart_ref_on from global configuration
  - name: realtime_mode
    dtype: text
    doc: realtime_mode from global configuration
  - name: headstage_auto_settle_on
    dtype: text
    doc: headstage_auto_settle_on from global configuration
  - name: timestamp_at_creation
    dtype: text
    doc: timestamp_at_creation from global configuration
  - name: controller_firmware_version
    dtype: text
    doc: conntroller_firmware_version from global configuration
  - name: controller_serial
    dtype: text
    doc: controller_serial from global configuration
  - name: save_displayed_chan_only
    dtype: text
    doc: save_displayed_chan_only from global configuration
  - name: headstage_firmware_version
    dtype: text
    doc: headstage_firmware_version from global configuration
  - name: qt_version
    dtype: text
    doc: qt_version_version from global configuration
  - name: compile_date
    dtype: text
    doc: compile_date_version from global configuration
  - name: compile_time
    dtype: text
    doc: compile_time_version from global configuration
  - name: file_prefix
    dtype: text
    doc: file_prefix_version from global configuration
  - name: headstage_gyro_sensor_on
    dtype: text
    doc: headstage_gyro_sensor_on_version from global configuration
  - name: headstage_mag_sensor_on
    dtype: text
    doc: headstage_mag_sensor_on_version from global configuration
  - name: trodes_version
    dtype: text
    doc: trodes_versionversion from global configuration
  - name: headstage_accel_sensor_on
    dtype: text
    doc: headstage_accel_sensor_on from global configuration
  - name: commit_head
    dtype: text
    doc: commit_head from global configuration
  - name: system_time_at_creation
    dtype: text
    doc: system_time_at_creation from global configuration
  - name: file_path
    dtype: text
    doc: file_path from global configuration
- neurodata_type_def: AssociatedFiles
  neurodata_type_inc: NWBDataInterface
  doc: content of files linked with nwb
  attributes:
  - name: description
    dtype: text
    doc: description of file
  - name: content
    dtype: text
    doc: content of file
  - name: task_epochs
    dtype: text
    doc: epochs this task belongs to
- neurodata_type_def: NwbElectrodeGroup
  neurodata_type_inc: ElectrodeGroup
  doc: Custom nwb ElectrodeGroup
  attributes:
  - name: targeted_location
    dtype: text
    doc: predicted location
  - name: targeted_x
    dtype: float
    doc: predicted x coordinates
  - name: targeted_y
    dtype: float
    doc: predicted y coordinates
  - name: targeted_z
    dtype: float
    doc: predicted z coordinates
  - name: units
    dtype: text
    doc: 'units of fields, acceptable values: um or mm'
- neurodata_type_def: FrankLabOptogeneticEpochsTable
  neurodata_type_inc: OptogeneticEpochsTable
  doc: General metadata about the optogenetic stimulation that may change per epoch,
    with fields specific to Loren Frank Lab experiments. If the spatial filter is
    ON, then the experimenter can stimulate in either open (frequency-based) or closed
    loop (theta-based), only when animal is in a particular position. If the spatial
    filter is OFF, then ignore the position (this is not common / doesn't happen).
    If the spatial filter is ON and the experimenter is stimulating in open loop mode
    and the animal enters the spatial filter rectangle, then immediately apply one
    and only one stimulation bout. If stimulating in closed loop mode and the animal
    enters the rectangle, then every time the particular theta phase is detected,
    immediately apply one stimulation bout (accounting for the lockout period).
  datasets:
  - name: epoch_name
    neurodata_type_inc: VectorData
    dtype: text
    doc: Name of the epoch.
  - name: epoch_number
    neurodata_type_inc: VectorData
    dtype: int
    doc: 1-indexed number of the epoch.
  - name: convenience_code
    neurodata_type_inc: VectorData
    dtype: text
    doc: Convenience code of the epoch.
  - name: epoch_type
    neurodata_type_inc: VectorData
    dtype: text
    doc: Type of the epoch.
  - name: theta_filter_on
    neurodata_type_inc: VectorData
    dtype: bool
    doc: Whether the theta filter was on. A theta filter is closed-loop stimulation
      - read one tetrode and calculate the phase. Depending on the phase of theta,
      apply stimulation immediately. If this column is not present, then the theta
      filter was not used.
    quantity: '?'
  - name: theta_filter_lockout_period_in_samples
    neurodata_type_inc: VectorData
    dtype: int
    doc: If the theta filter was used, lockout period in the number of samples (based
      on the clock of the SpikeGadgets hardware) needed between stimulations, start
      to start. Use -1 if the theta filter was not used.
    quantity: '?'
  - name: theta_filter_phase_in_deg
    neurodata_type_inc: VectorData
    dtype: float
    doc: 'If the theta filter was used, phase in degrees during closed-loop theta
      phase-specific stimulation experiments. 0 is defined as the trough. 90 is ascending
      phase. Options are: 0, 90, 180, 270, 360, NaN. Use NaN if the theta filter was
      not used.'
    quantity: '?'
  - name: theta_filter_reference_ntrode
    neurodata_type_inc: VectorData
    dtype: int
    doc: If the theta filter was used, reference electrode that used used for theta
      phase-specific stimulation. ntrode is related to SpikeGadgets. ntrodes are specified
      in the electrode groups. (note that ntrodes are 1-indexed.) mapping from ntrode
      to electrode ID is in the electrode metadata files. Use -1 if the theta filter
      was not used.
    quantity: '?'
  - name: spatial_filter_on
    neurodata_type_inc: VectorData
    dtype: bool
    doc: Whether the spatial filter was on. Closed-loop stimulation based on whether
      the position of the animal is within a specified rectangular region of the video.
      If this column is not present, then the spatial filter was not used.
    quantity: '?'
  - name: spatial_filter_lockout_period_in_samples
    neurodata_type_inc: VectorData
    dtype: int
    doc: If the spatial filter was used, lockout period in the number of samples.
      Uses trodes time (samplecount). Use -1 if the spatial filter was not used.
    quantity: '?'
  - name: spatial_filter_region_node_coordinates_in_pixels
    neurodata_type_inc: VectorData
    dtype: int
    dims:
    - n_epochs
    - n_regions
    - n_nodes
    - x y
    shape:
    - null
    - null
    - null
    - 2
    doc: 'If the spatial filter was used, the (x, y) coordinate of each boundary-defining
      node for each region. NOTE: all regions must have the same number of nodes.
      For regions with fewer nodes, use (-1, -1) to fill the additional xy values.'
    quantity: '?'
  - name: spatial_filter_cameras_index
    neurodata_type_inc: VectorIndex
    doc: Index column for `spatial_filter_cameras` so that each epoch can have multiple
      cameras.
    quantity: '?'
  - name: spatial_filter_cameras
    neurodata_type_inc: VectorData
    dtype:
      target_type: CameraDevice
      reftype: object
    doc: References to camera objects used for the spatial filter.
    quantity: '?'
  - name: spatial_filter_cameras_cm_per_pixel_index
    neurodata_type_inc: VectorIndex
    doc: Index column for `spatial_filter_cameras_cm_per_pixel` so that each epoch
      can have multiple cameras.
    quantity: '?'
  - name: spatial_filter_cameras_cm_per_pixel
    neurodata_type_inc: VectorData
    dtype: float
    doc: The cm/pixel values for each spatial filter camera used in this epoch, in
      the same order as `spatial_filter_cameras`. Use this if the cm/pixel values
      change per epoch. Otherwise, use the `meters_per_pixel` attribute of `CameraDevice`.
    quantity: '?'
  - name: ripple_filter_on
    neurodata_type_inc: VectorData
    dtype: bool
    doc: Whether the ripple filter was on. Closed-loop stimulation based on whether
      a ripple was detected - whether N tetrodes have their signal cross the standard
      deviation threshold. If this column is not present, then the ripple filter was
      not used.
    quantity: '?'
  - name: ripple_filter_lockout_period_in_samples
    neurodata_type_inc: VectorData
    dtype: int
    doc: If the ripple filter was used, lockout period in the number of samples. Uses
      trodes time (samplecount).
    quantity: '?'
  - name: ripple_filter_threshold_sd
    neurodata_type_inc: VectorData
    dtype: float
    doc: If the ripple filter was used, the threshold for detecting a ripple, in number
      of standard deviations.
    quantity: '?'
  - name: ripple_filter_num_above_threshold
    neurodata_type_inc: VectorData
    dtype: int
    doc: If the ripple filter was used, the number of tetrodes that have their signal
      cross the standard deviation threshold.
    quantity: '?'
  - name: speed_filter_on
    neurodata_type_inc: VectorData
    dtype: bool
    doc: Whether the speed filter was on. Closed-loop stimulation based on whether
      the animal is moving fast/slow enough. If this column is not present, then the
      speed filter was not used.
    quantity: '?'
  - name: speed_filter_threshold_in_cm_per_s
    neurodata_type_inc: VectorData
    dtype: float
    doc: If the speed filter was used, the threshold for detecting a fast/slow animal,
      in cm/s.
    quantity: '?'
  - name: speed_filter_on_above_threshold
    neurodata_type_inc: VectorData
    dtype: bool
    doc: If the speed filter was used, True if active when speed above threshold.
    quantity: '?'
  - name: stimulus_signal
    neurodata_type_inc: VectorData
    dtype:
      target_type: TimeSeries
      reftype: object
    doc: Timeseries of the delivered stimulus. Can be continuous values or time of
      digital on/off events.
    quantity: '?'
