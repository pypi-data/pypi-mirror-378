// ================================================================================
//                         BUILDED_WINDOWEVENTS.cpp
//                    Биндинги для работы с событиями окон в PySGL
// ================================================================================
//
// Этот файл содержит C++ функции для работы с событиями SFML,
// которые экспортируются в Python через ctypes.
//
// Основные компоненты:
// - Создание и управление объектами событий
// - Получение информации о событиях клавиатуры
// - Обработка событий мыши (кнопки, координаты, колесо)
// - События изменения размера окна
// - Типизация и классификация событий
//
// ================================================================================

#ifndef SFML_GRAPHICS_HPP
#include "SFML/Graphics.hpp"
#endif
#ifndef SFML_WINDOW_HPP
#include "SFML/Window.hpp"
#endif

// ================================================================================
//                        УПРАВЛЕНИЕ ОБЪЕКТАМИ СОБЫТИЙ
// ================================================================================
// Функции для создания, удаления и базовой работы с событиями:
// - Создание новых объектов событий
// - Освобождение памяти
// - Получение типа события
// ================================================================================

extern "C" {
    // Создание нового объекта события для хранения данных
    __declspec(dllexport) sf::Event* _Events_Create() {
        return new sf::Event();
    }

    // Удаление объекта события и освобождение памяти
    __declspec(dllexport) void _Events_Destroy(sf::Event* event) {
        delete event;
    }

    // Получение типа текущего события (Closed, KeyPressed, MouseMoved и т.д.)
    __declspec(dllexport) int _Events_GetType(sf::Event* event) {
        return event->type;
    }

    // ================================================================================
    //                          СОБЫТИЯ КЛАВИАТУРЫ
    // ================================================================================
    // Функции для обработки событий клавиатуры
    
    // Получение кода нажатой/отпущенной клавиши
    __declspec(dllexport) int _Events_GetKey(sf::Event* event) {
        return event->key.code;
    }

    // ================================================================================
    //                            СОБЫТИЯ МЫШИ
    // ================================================================================
    // Функции для обработки всех типов событий мыши
    
    // Получение кода нажатой кнопки мыши (0-левая, 1-правая, 2-средняя)
    __declspec(dllexport) int _Events_GetMouseButton(sf::Event* event) {
        return event->mouseButton.button;
    }

    // Получение X-координаты курсора мыши в момент события
    __declspec(dllexport) int _Events_GetMouseX(sf::Event* event) {
        return event->mouseButton.x;
    }

    // Получение Y-координаты курсора мыши в момент события
    __declspec(dllexport) int _Events_GetMouseY(sf::Event* event) {
        return event->mouseButton.y;
    }

    // Получение значения прокрутки колеса мыши (положительное - вверх, отрицательное - вниз)
    __declspec(dllexport) int _Events_GetMouseWheel(sf::Event* event) {
        return event->mouseWheel.delta;
    }

    // ================================================================================
    //                      СОБЫТИЯ ИЗМЕНЕНИЯ РАЗМЕРА ОКНА
    // ================================================================================
    // Функции для получения новых размеров окна при событии Resized
    
    // Получение новой ширины окна после изменения размера (в пикселях)
    __declspec(dllexport) int _Events_GetSizeWidth(sf::Event* event) {
        return event->size.width;
    }

    // Получение новой высоты окна после изменения размера (в пикселях)
    __declspec(dllexport) int _Events_GetSizeHeight(sf::Event* event) {
        return event->size.height;
    }

}

// ================================================================================
//                              КОНЕЦ ФАЙЛА
// ================================================================================
// Все функции для работы с событиями PySGL определены.
// Они предоставляют полный интерфейс для обработки пользовательского ввода
// и системных событий в Python приложениях.
// ================================================================================
