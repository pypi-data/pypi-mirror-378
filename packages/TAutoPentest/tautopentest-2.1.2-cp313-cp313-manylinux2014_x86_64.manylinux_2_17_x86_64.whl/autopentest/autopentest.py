#!/usr/bin/env python3
"""
AI-Powered Auto-PenTester - Legacy Wrapper
==========================================

Copyright (c) 2025/1404 D3F417 - Iran
All rights reserved.

This software is proprietary and confidential.
Unauthorized copying, distribution, modification, or use is strictly prohibited.
For licensing inquiries, contact the author.

This is the original monolithic script, now updated to use the new modular structure.
For better organization and maintainability, use main.py instead.

The script has been restructured into multiple modules:
- main.py: Clean entry point with command-line interface
- autopentest_core.py: Core TAuto Pentest class
- config.py: Configuration settings
- utils.py: Utility functions and classes
- ai_analyzer.py: AI-powered vulnerability analysis

Usage:
    python autopentest.py          # Use this legacy script
    python main.py                 # Use the new modular entry point (recommended)

Author: D3F417
Version: 1.0 (Modular)
License: Proprietary - All Rights Reserved
"""

import sys
import os

# Add current directory to path for imports
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

try:
    # Import from the new modular structure
    from main import main as main_entry_point
    
    print("🔄 This script now uses the new modular structure.")
    print("💡 For better experience, use 'python main.py' directly.")
    print("📁 The functionality has been split into multiple files for better organization.")
    print()
    
    # Run the main entry point
    main_entry_point()
    
except ImportError as e:
    print(f"❌ Import Error: {e}")
    print()
    print("🔧 The script has been restructured into multiple modules.")
    print("📁 Make sure all these files are in the same directory:")
    print("   - main.py (new entry point)")
    print("   - autopentest_core.py (core functionality)")
    print("   - config.py (configuration)")
    print("   - utils.py (utilities)")
    print("   - ai_analyzer.py (AI analysis)")
    print()
    print("💡 Use 'python main.py' for the best experience.")
    sys.exit(1)
except Exception as e:
    print(f"❌ Error: {e}")
    sys.exit(1)