# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

import types

__config__ = pulumi.Config('kestra')


class _ExportableConfig(types.ModuleType):
    @property
    def api_token(self) -> Optional[str]:
        """
        The API token (EE)
        """
        return __config__.get('apiToken')

    @property
    def extra_headers(self) -> Optional[str]:
        """
        Extra headers to add to every request
        """
        return __config__.get('extraHeaders')

    @property
    def jwt(self) -> Optional[str]:
        """
        The JWT token (EE)
        """
        return __config__.get('jwt')

    @property
    def keep_original_source(self) -> Optional[bool]:
        """
        Keep original source code, keeping comment and indentation. Setting to false is now deprecated and will be removed in
        the future.
        """
        return __config__.get_bool('keepOriginalSource')

    @property
    def password(self) -> Optional[str]:
        """
        The BasicAuth password
        """
        return __config__.get('password')

    @property
    def tenant_id(self) -> Optional[str]:
        """
        The tenant id (EE)
        """
        return __config__.get('tenantId')

    @property
    def timeout(self) -> Optional[float]:
        """
        The timeout (in seconds) for http requests
        """
        return __config__.get_float('timeout')

    @property
    def url(self) -> Optional[str]:
        """
        The endpoint url
        """
        return __config__.get('url')

    @property
    def username(self) -> Optional[str]:
        """
        The BasicAuth username
        """
        return __config__.get('username')

