[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "compoconf"
version = "0.1.10"
description = "A compositional configuration library for Python"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    { name = "Korbinian PÃ¶ppel", email = "korbip@korbip.de" }
]
dependencies = [
    "typing-extensions>=4.0.0",
    "dataclasses; python_version<'3.10'"
]

[project.optional-dependencies]
omegaconf = ["omegaconf>=2.0.0"]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-sugar>=0.9.7",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.25.2",
]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "ruff>=0.12.7",
]

[tool.hatch.build.targets.wheel]
packages = ["src/compoconf"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=compoconf --cov-report=term-missing"
testpaths = [
    "tests",
]

[tool.coverage.run]
branch = true
source = ["compoconf"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true
omit = [
    "tests/*",
    "setup.py",
]

[tool.black]
line-length = 120
target-version = ["py310"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pylint]
max-line-length = 120

# ruff
[tool.ruff]
exclude = [
    ".eggs",
    ".git",
    ".ipynb_checkpoints",
    ".pytest_cache",
    ".ruff_cache",
    ".vscode",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "archive",
]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = ["I001", "E", "F"]

[tool.ruff.lint.mccabe]
max-complexity = 18

[tool.ruff.lint.isort]
combine-as-imports = true
section-order = ["future", "standard-library", "third-party", "first-party", "prenex", "local-folder"]

[tool.ruff.lint.isort.sections]
"prenex" = ["prenex"]

[tool.ruff.format]
quote-style = "double"