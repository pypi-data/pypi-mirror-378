"use strict";(globalThis.webpackChunksuperset=globalThis.webpackChunksuperset||[]).push([[7811],{47324:(t,e,n)=>{n.d(e,{A:()=>s});var r=n(2445),o=n(96540);function s(t,e){class n extends o.Component{constructor(t){super(t),this.container=void 0,this.setContainerRef=this.setContainerRef.bind(this)}componentDidMount(){this.execute()}componentDidUpdate(){this.execute()}componentWillUnmount(){this.container=void 0,null!=e&&e.componentWillUnmount&&e.componentWillUnmount.bind(this)()}setContainerRef(t){this.container=t}execute(){this.container&&t(this.container,this.props)}render(){const{id:t,className:e}=this.props;return(0,r.Y)("div",{ref:this.setContainerRef,id:t,className:e})}}const s=n;return t.displayName&&(s.displayName=t.displayName),t.propTypes&&(s.propTypes={...s.propTypes,...t.propTypes}),t.defaultProps&&(s.defaultProps=t.defaultProps),n}},87811:(t,e,n)=>{n.r(e),n.d(e,{default:()=>v});var r=n(47324),o=n(50290),s=n(24143),a=n.n(s),i=n(5556),c=n.n(i),l=n(61573),p=n(29898),u=n(96469),d=n(14503),h=n(59713);const m={data:c().arrayOf(c().shape({country_id:c().string,metric:c().number})),width:c().number,height:c().number,country:c().string,colorScheme:c().string,linearColorScheme:c().string,mapBaseUrl:c().string,numberFormat:c().string},g={};function y(t,e){const{data:n,width:r,height:o,country:s,linearColorScheme:i,numberFormat:c,colorScheme:m,sliceId:y}=e,f=t,x=(0,p.gV)(c),$=(0,u.A)().get(i).createLinearScale((0,l.A)(n,(t=>t.metric))),v=d.getScale(m),b={};n.forEach((t=>{b[t.country_id]=m?v(t.country_id,y):$(t.metric)}));const C=t=>b[t.properties.ISO]||"none",S=a().geo.path(),k=a().select(f);k.classed("superset-legacy-chart-country-map",!0),k.selectAll("*").remove(),f.style.height=`${o}px`,f.style.width=`${r}px`;const A=k.append("svg:svg").attr("width",r).attr("height",o).attr("preserveAspectRatio","xMidYMid meet"),N=A.append("rect").attr("class","background").attr("width",r).attr("height",o),T=A.append("g"),w=T.append("g").classed("map-layer",!0),_=T.append("g").classed("text-layer",!0).attr("transform",`translate(${r/2}, 45)`),z=_.append("text").classed("big-text",!0),M=_.append("text").classed("result-text",!0).attr("dy","1em");let B;const I=function(t){const e=t&&B!==t;let n,s,a;const i=r/2,c=o/2;if(e){const e=S.centroid(t);[n,s]=e,a=4,B=t}else n=i,s=c,a=1,B=null;T.transition().duration(750).attr("transform",`translate(${i},${c})scale(${a})translate(${-n},${-s})`),_.style("opacity",0).attr("transform",`translate(0,0)translate(${n},${e?s-5:45})`).transition().duration(750).style("opacity",1),z.transition().duration(750).style("font-size",e?6:16),M.transition().duration(750).style("font-size",e?16:24)};N.on("click",I);const R=function(t){let e=C(t);"none"!==e&&(e=a().rgb(e).darker().toString()),a().select(this).style("fill",e),function(t){let e="";t&&t.properties&&(e=t.properties.ID_2?t.properties.NAME_2:t.properties.NAME_1),z.text(e)}(t);const r=n.filter((e=>e.country_id===t.properties.ISO));var o;(o=r).length>0&&M.text(x(o[0].metric))},U=function(){a().select(this).style("fill",C),z.text(""),M.text("")};function W(t){const{features:e}=t,n=a().geo.centroid(t),s=a().geo.mercator().scale(100).center(n).translate([r/2,o/2]);S.projection(s);const i=S.bounds(t),c=100*r/(i[1][0]-i[0][0]),l=100*o/(i[1][1]-i[0][1]),p=c<l?c:l;s.scale(p);const u=S.bounds(t);s.translate([r-(u[0][0]+u[1][0])/2,o-(u[0][1]+u[1][1])/2]),w.selectAll("path").data(e).enter().append("path").attr("d",S).attr("class","region").attr("vector-effect","non-scaling-stroke").style("fill",C).on("mouseenter",R).on("mouseout",U).on("click",I)}const L=g[s];if(L)W(L);else{const e=h.Ay[s];a().json(e,((e,n)=>{if(e){var r;const e=(null==(r=h.JK.find((t=>t[0]===s)))?void 0:r[1])||s;a().select(t).html(`<div class="alert alert-danger">Could not load map data for ${e}</div>`)}else g[s]=n,W(n)}))}}y.displayName="CountryMap",y.propTypes=m;const f=y;var x=n(2445);const $=(0,r.A)(f),v=(0,o.I4)((({className:t,...e})=>(0,x.Y)("div",{className:t,children:(0,x.Y)($,{...e})})))`
  ${({theme:t})=>`\n    .superset-legacy-chart-country-map svg {\n      background-color: ${t.colorBgContainer};\n    }\n\n    .superset-legacy-chart-country-map {\n      position: relative;\n    }\n\n    .superset-legacy-chart-country-map .background {\n      fill: ${t.colorBgContainer};\n      pointer-events: all;\n    }\n\n    .superset-legacy-chart-country-map .map-layer {\n      fill: ${t.colorBgContainer};\n      stroke: ${t.colorBorderSecondary};\n    }\n\n    .superset-legacy-chart-country-map .effect-layer {\n      pointer-events: none;\n    }\n\n    .superset-legacy-chart-country-map .text-layer {\n      color: ${t.colorText};\n      text-anchor: middle;\n      pointer-events: none;\n    }\n\n    .superset-legacy-chart-country-map text.result-text {\n      fill: ${t.colorText};\n      font-weight: ${t.fontWeightLight};\n      font-size: ${t.fontSizeXL}px;\n    }\n\n    .superset-legacy-chart-country-map text.big-text {\n      fill: ${t.colorText};\n      font-weight: ${t.fontWeightStrong};\n      font-size: ${t.fontSizeLG}px;\n    }\n\n    .superset-legacy-chart-country-map path.region {\n      cursor: pointer;\n      stroke: ${t.colorSplit};\n    }\n  `}
`}}]);