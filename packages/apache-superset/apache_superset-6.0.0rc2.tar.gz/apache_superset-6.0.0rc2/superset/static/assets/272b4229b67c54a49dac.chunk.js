"use strict";(globalThis.webpackChunksuperset=globalThis.webpackChunksuperset||[]).push([[7506],{15653:(e,t,o)=>{o.d(t,{A:()=>de});var n=o(38706),i=o(89877),s=o(26630),r=o(59),a=o(23096),l=o(9226),g=o(23612),c=o(5855),u=o(53112);const d=.5,h=1/6,p={N:[0,d],E:[d,0],S:[0,-.5],W:[-.5,0],NE:[d,d],NW:[-.5,d],SE:[d,-.5],SW:[-.5,-.5]},S=[p.W,p.SW,p.S],f=[p.S,p.SE,p.E],m=[p.E,p.NE,p.N],y=[p.NW,p.W,p.N],W=[[-.5,h],[-.5,-h],[-h,-.5],[h,-.5]],N=[[-h,-.5],[h,-.5],[d,-h],[d,h]],E=[[d,-h],[d,h],[h,d],[-h,d]],C=[[-.5,h],[-.5,-h],[h,d],[-h,d]],b=[p.W,p.SW,p.SE,p.E],v=[p.S,p.SE,p.NE,p.N],A=[p.NW,p.W,p.E,p.NE],L=[p.NW,p.SW,p.S,p.N],P=[[-.5,h],[-.5,-h],[d,-h],[d,h]],w=[[-h,-.5],[h,-.5],[h,d],[-h,d]],x=[p.NW,p.SW,p.SE,p.NE],R=[p.NW,p.SW,p.SE,p.E,p.N],z=[p.W,p.SW,p.SE,p.NE,p.N],O=[p.NW,p.W,p.S,p.SE,p.NE],M=[p.NW,p.SW,p.S,p.E,p.NE],_=[p.NW,p.W,[d,-h],[d,h],p.N],I=[[-h,-.5],[h,-.5],p.E,p.NE,p.N],D=[[-.5,h],[-.5,-h],p.S,p.SE,p.E],F=[p.W,p.SW,p.S,[h,d],[-h,d]],V=[p.NW,p.W,[-h,-.5],[h,-.5],p.N],T=[[-.5,h],[-.5,-h],p.E,p.NE,p.N],k=[p.S,p.SE,p.E,[h,d],[-h,d]],U=[p.W,p.SW,p.S,[d,-h],[d,h]],j=[p.W,p.SW,p.SE,p.E,[h,d],[-h,d]],B=[[-.5,h],[-.5,-h],p.S,p.SE,p.NE,p.N],J=[p.NW,p.W,[-h,-.5],[h,-.5],p.E,p.NE],G=[p.NW,p.SW,p.S,[d,-h],[d,h],p.N],X=[p.W,p.SW,p.S,p.E,p.NE,p.N],Y=[p.NW,p.W,p.S,p.SE,p.E,p.N],q=[[-.5,h],[-.5,-h],[-h,-.5],[h,-.5],p.E,p.NE,p.N],H=[p.W,p.SW,p.S,[d,-h],[d,h],[h,d],[-h,d]],K=[p.NW,p.W,[-h,-.5],[h,-.5],[d,-h],[d,h],p.N],Q=[[-.5,h],[-.5,-h],p.S,p.SE,p.E,[h,d],[-h,d]],Z=[[-.5,h],[-.5,-h],[-h,-.5],[h,-.5],[d,-h],[d,h],[h,d],[-h,d]],$={0:[],1:[[p.W,p.S]],2:[[p.S,p.E]],3:[[p.W,p.E]],4:[[p.N,p.E]],5:{0:[[p.W,p.S],[p.N,p.E]],1:[[p.W,p.N],[p.S,p.E]]},6:[[p.N,p.S]],7:[[p.W,p.N]],8:[[p.W,p.N]],9:[[p.N,p.S]],10:{0:[[p.W,p.N],[p.S,p.E]],1:[[p.W,p.S],[p.N,p.E]]},11:[[p.N,p.E]],12:[[p.W,p.E]],13:[[p.S,p.E]],14:[[p.W,p.S]],15:[]};function ee(e){return parseInt(e,4)}const te={[ee("0000")]:[],[ee("2222")]:[],[ee("2221")]:[S],[ee("2212")]:[f],[ee("2122")]:[m],[ee("1222")]:[y],[ee("0001")]:[S],[ee("0010")]:[f],[ee("0100")]:[m],[ee("1000")]:[y],[ee("2220")]:[W],[ee("2202")]:[N],[ee("2022")]:[E],[ee("0222")]:[C],[ee("0002")]:[W],[ee("0020")]:[N],[ee("0200")]:[E],[ee("2000")]:[C],[ee("0011")]:[b],[ee("0110")]:[v],[ee("1100")]:[A],[ee("1001")]:[L],[ee("2211")]:[b],[ee("2112")]:[v],[ee("1122")]:[A],[ee("1221")]:[L],[ee("2200")]:[P],[ee("2002")]:[w],[ee("0022")]:[P],[ee("0220")]:[w],[ee("1111")]:[x],[ee("1211")]:[R],[ee("2111")]:[z],[ee("1112")]:[O],[ee("1121")]:[M],[ee("1011")]:[R],[ee("0111")]:[z],[ee("1110")]:[O],[ee("1101")]:[M],[ee("1200")]:[_],[ee("0120")]:[I],[ee("0012")]:[D],[ee("2001")]:[F],[ee("1022")]:[_],[ee("2102")]:[I],[ee("2210")]:[D],[ee("0221")]:[F],[ee("1002")]:[V],[ee("2100")]:[T],[ee("0210")]:[k],[ee("0021")]:[U],[ee("1220")]:[V],[ee("0122")]:[T],[ee("2012")]:[k],[ee("2201")]:[U],[ee("0211")]:[j],[ee("2110")]:[B],[ee("1102")]:[J],[ee("1021")]:[G],[ee("2011")]:[j],[ee("0112")]:[B],[ee("1120")]:[J],[ee("1201")]:[G],[ee("2101")]:[X],[ee("0121")]:[X],[ee("1012")]:[Y],[ee("1210")]:[Y],[ee("0101")]:{0:[S,m],1:[X],2:[X]},[ee("1010")]:{0:[y,f],1:[Y],2:[Y]},[ee("2121")]:{0:[X],1:[X],2:[S,m]},[ee("1212")]:{0:[Y],1:[Y],2:[y,f]},[ee("2120")]:{0:[q],1:[q],2:[W,m]},[ee("2021")]:{0:[H],1:[H],2:[S,E]},[ee("1202")]:{0:[K],1:[K],2:[y,N]},[ee("0212")]:{0:[Q],1:[Q],2:[f,C]},[ee("0102")]:{0:[W,m],1:[q],2:[q]},[ee("0201")]:{0:[S,E],1:[H],2:[H]},[ee("1020")]:{0:[y,N],1:[K],2:[K]},[ee("2010")]:{0:[f,C],1:[Q],2:[Q]},[ee("2020")]:{0:[C,N],1:[Z],2:[W,E]},[ee("0202")]:{0:[E,W],1:[Z],2:[C,N]}};function oe(e,t){return Number.isNaN(e)?0:Array.isArray(t)?e<t[0]?0:e<t[1]?1:2:e>=t?1:0}function ne(e){const{x:t,y:o,xRange:n,yRange:i,getValue:s,threshold:r}=e,a=t<n[0],l=t>=n[1]-1,g=o<i[0],c=o>=i[1]-1,u=a||l||g||c;let d,h,p,S,f=0;if(a||c)p=0;else{const e=s(t,o+1);p=oe(e,r),f+=e}if(l||c)S=0;else{const e=s(t+1,o+1);S=oe(e,r),f+=e}if(l||g)h=0;else{const e=s(t+1,o);h=oe(e,r),f+=e}if(a||g)d=0;else{const e=s(t,o);d=oe(e,r),f+=e}let m=-1;Number.isFinite(r)&&(m=p<<3|S<<2|h<<1|d),Array.isArray(r)&&(m=p<<6|S<<4|h<<2|d);let y=0;return u||(y=oe(f/4,r)),{code:m,meanCode:y}}function ie(e){const{x:t,y:o,z:n,code:i,meanCode:s}=e;let r=te[i];Array.isArray(r)||(r=r[s]);const a=t+1,l=o+1,g=[];return r.forEach((e=>{const t=[];e.forEach((e=>{const o=a+e[0],i=l+e[1];t.push([o,i,n])})),g.push(t)})),g}function se(e){const{x:t,y:o,z:n,code:i,meanCode:s}=e;let r=$[i];Array.isArray(r)||(r=r[s]);const a=t+1,l=o+1,g=[];return r.forEach((e=>{e.forEach((e=>{const t=a+e[0],o=l+e[1];g.push([t,o,n])}))})),g}function re(e){const{aggregator:t,binIdRange:o,channel:n}=e;if(t instanceof g.V){var i;const e=null==(i=t.getResult(n))?void 0:i.buffer;if(e)return function(e,t){const[[o,n],[i,s]]=t,r=n-o,a=s-i;return(t,n)=>(n-=i,(t-=o)<0||t>=r||n<0||n>=a?NaN:e[n*r+t])}(new Float32Array(e.readSyncWebGL().buffer),o)}if(t instanceof c.M){var s,r;const e=null==(s=t.getResult(n))?void 0:s.value,o=null==(r=t.getBins())?void 0:r.value;if(o&&e)return function(e,t,o){const n={};for(let i=0;i<o;i++){const o=t[2*i],s=t[2*i+1];n[o]=n[o]||{},n[o][s]=e[i]}return(e,t)=>{var o,i;return null!=(o=null==(i=n[e])?void 0:i[t])?o:NaN}}(e,o,t.binCount)}return null}var ae=o(4291),le=o(71944);const ge={name:"binOptions",vs:"uniform binOptionsUniforms {\n  vec2 cellOriginCommon;\n  vec2 cellSizeCommon;\n} binOptions;\n",uniformTypes:{cellOriginCommon:"vec2<f32>",cellSizeCommon:"vec2<f32>"}},ce=[255,255,255,255];class ue extends u.A{getAggregatorType(){return this.props.gpuAggregation&&g.V.isSupported(this.context.device)?"gpu":"cpu"}createAggregator(e){return"cpu"===e?new c.M({dimensions:2,getBin:{sources:["positions"],getValue:({positions:e},t,o)=>{const n=this.state.aggregatorViewport.projectPosition(e),{cellSizeCommon:i,cellOriginCommon:s}=o;return[Math.floor((n[0]-s[0])/i[0]),Math.floor((n[1]-s[1])/i[1])]}},getValue:[{sources:["counts"],getValue:({counts:e})=>e}],onUpdate:this._onAggregationUpdate.bind(this)}):new g.V(this.context.device,{dimensions:2,channelCount:1,bufferLayout:this.getAttributeManager().getBufferLayouts({isInstanced:!1}),...super.getShaders({modules:[n.A,ge],vs:"\n  in vec3 positions;\n  in vec3 positions64Low;\n  in float counts;\n\n  void getBin(out ivec2 binId) {\n    vec3 positionCommon = project_position(positions, positions64Low);\n    vec2 gridCoords = floor(positionCommon.xy / binOptions.cellSizeCommon);\n    binId = ivec2(gridCoords);\n  }\n  void getValue(out float value) {\n    value = counts;\n  }\n  "}),onUpdate:this._onAggregationUpdate.bind(this)})}initializeState(){super.initializeState(),this.getAttributeManager().add({positions:{size:3,accessor:"getPosition",type:"float64",fp64:this.use64bitPositions()},counts:{size:1,accessor:"getWeight"}})}updateState(e){const t=super.updateState(e),{props:o,oldProps:n,changeFlags:s}=e,{aggregator:r}=this.state;if(t||s.dataChanged||o.cellSize!==n.cellSize||!(0,i.b)(o.gridOrigin,n.gridOrigin,1)||o.aggregation!==n.aggregation){this._updateBinOptions();const{cellSizeCommon:e,cellOriginCommon:t,binIdRange:n}=this.state;r.setProps({binIdRange:n,pointCount:this.getNumInstances(),operations:[o.aggregation],binOptions:{cellSizeCommon:e,cellOriginCommon:t}})}return(0,i.b)(n.contours,o.contours,2)||this.setState({contourData:null}),t}_updateBinOptions(){const e=this.getBounds(),t=[1,1];let o=[0,0],n=[[0,1],[0,1]],i=this.context.viewport;if(e&&Number.isFinite(e[0][0])){let r=[(e[0][0]+e[1][0])/2,(e[0][1]+e[1][1])/2];const{cellSize:a,gridOrigin:l}=this.props,{unitsPerMeter:g}=i.getDistanceScales(r);t[0]=g[0]*a,t[1]=g[1]*a;const c=i.projectFlat(r);o=[Math.floor((c[0]-l[0])/t[0])*t[0]+l[0],Math.floor((c[1]-l[1])/t[1])*t[1]+l[1]],r=i.unprojectFlat(o);const u=i.constructor;i=i.isGeospatial?new u({longitude:r[0],latitude:r[1],zoom:12}):new s.A({position:[r[0],r[1],0],zoom:12}),o=[Math.fround(i.center[0]),Math.fround(i.center[1])],n=(0,ae.O)({dataBounds:e,getBinId:e=>{const n=i.projectFlat(e);return[Math.floor((n[0]-o[0])/t[0]),Math.floor((n[1]-o[1])/t[1])]}})}this.setState({cellSizeCommon:t,cellOriginCommon:o,binIdRange:n,aggregatorViewport:i})}draw(e){e.shaderModuleProps.project&&(e.shaderModuleProps.project.viewport=this.state.aggregatorViewport),super.draw(e)}_onAggregationUpdate(){const{aggregator:e,binIdRange:t}=this.state;this.setState({aggregatedValueReader:re({aggregator:e,binIdRange:t,channel:0}),contourData:null})}_getContours(){const{aggregatedValueReader:e}=this.state;if(!e)return null;if(!this.state.contourData){const{binIdRange:t}=this.state,{contours:o}=this.props,n=function({contours:e,getValue:t,xRange:o,yRange:n}){const i=[],s=[];let r=0,a=0;for(let g=0;g<e.length;g++){var l;const c=e[g],u=null!=(l=c.zIndex)?l:g,{threshold:d}=c;for(let e=o[0]-1;e<o[1];e++)for(let l=n[0]-1;l<n[1];l++){const{code:g,meanCode:h}=ne({getValue:t,threshold:d,x:e,y:l,xRange:o,yRange:n}),p={x:e,y:l,z:u,code:g,meanCode:h};if(Array.isArray(d)){const e=ie(p);for(const t of e)s[a++]={vertices:t,contour:c}}else{const e=se(p);e.length>0&&(i[r++]={vertices:e,contour:c})}}}return{lines:i,polygons:s}}({contours:o,getValue:e,xRange:t[0],yRange:t[1]});this.state.contourData=n}return this.state.contourData}onAttributeChange(e){const{aggregator:t}=this.state;switch(e){case"positions":t.setNeedsUpdate(),this._updateBinOptions();const{cellSizeCommon:e,cellOriginCommon:o,binIdRange:n}=this.state;t.setProps({binIdRange:n,binOptions:{cellSizeCommon:e,cellOriginCommon:o}});break;case"counts":t.setNeedsUpdate(0)}}renderLayers(){const e=this._getContours();if(!e)return null;const{lines:t,polygons:o}=e,{zOffset:n}=this.props,{cellOriginCommon:i,cellSizeCommon:s}=this.state,g=this.getSubLayerClass("lines",a.A),c=this.getSubLayerClass("bands",l.A),u=(new le.k).translate([i[0],i[1],0]).scale([s[0],s[1],n]);return[t&&t.length>0&&new g(this.getSubLayerProps({id:"lines"}),{data:t,coordinateSystem:r.rf.CARTESIAN,modelMatrix:u,getPath:e=>e.vertices,getColor:e=>{var t;return null!=(t=e.contour.color)?t:ce},getWidth:e=>{var t;return null!=(t=e.contour.strokeWidth)?t:1},widthUnits:"pixels"}),o&&o.length>0&&new c(this.getSubLayerProps({id:"bands"}),{data:o,coordinateSystem:r.rf.CARTESIAN,modelMatrix:u,getPolygon:e=>e.vertices,getFillColor:e=>{var t;return null!=(t=e.contour.color)?t:ce}})]}getPickingInfo(e){const t=e.info,{object:o}=t;return o&&(t.object={contour:o.contour}),t}}ue.layerName="ContourLayer",ue.defaultProps={cellSize:{type:"number",min:1,value:1e3},gridOrigin:{type:"array",compare:!0,value:[0,0]},getPosition:{type:"accessor",value:e=>e.position},getWeight:{type:"accessor",value:1},gpuAggregation:!0,aggregation:"SUM",contours:{type:"object",value:[{threshold:1}],optional:!0,compare:3},zOffset:.005};const de=ue},43850:(e,t,o)=>{o.d(t,{A:()=>h});var n=o(71677),i=o(48186),s=o(37604),r=o(9226),a=o(23096),l=o(33232),g=o(71704);const c=[0,0,0,255],u={stroked:!0,filled:!0,extruded:!1,elevationScale:1,wireframe:!1,_normalize:!0,_windingOrder:"CW",lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,lineJointRounded:!1,lineMiterLimit:4,getPolygon:{type:"accessor",value:e=>e.polygon},getFillColor:{type:"accessor",value:[0,0,0,255]},getLineColor:{type:"accessor",value:c},getLineWidth:{type:"accessor",value:1},getElevation:{type:"accessor",value:1e3},material:!0};class d extends n.A{initializeState(){this.state={paths:[],pathsDiff:null},this.props.getLineDashArray&&i.A.removed("getLineDashArray","PathStyleExtension")()}updateState({changeFlags:e}){const t=e.dataChanged||e.updateTriggersChanged&&(e.updateTriggersChanged.all||e.updateTriggersChanged.getPolygon);if(t&&Array.isArray(e.dataChanged)){const t=this.state.paths.slice(),o=e.dataChanged.map((e=>(0,g.J)({data:t,getIndex:e=>e.__source.index,dataRange:e,replace:this._getPaths(e)})));this.setState({paths:t,pathsDiff:o})}else t&&this.setState({paths:this._getPaths(),pathsDiff:null})}_getPaths(e={}){const{data:t,getPolygon:o,positionFormat:n,_normalize:i}=this.props,r=[],a="XY"===n?2:3,{startRow:g,endRow:c}=e,{iterable:u,objectInfo:d}=(0,s.X)(t,g,c);for(const e of u){d.index++;let t=o(e,d);i&&(t=l.S8(t,a));const{holeIndices:n}=t,s=t.positions||t;if(n)for(let t=0;t<=n.length;t++){const o=s.slice(n[t-1]||0,n[t]||s.length);r.push(this.getSubLayerRow({path:o},e,d.index))}else r.push(this.getSubLayerRow({path:s},e,d.index))}return r}renderLayers(){const{data:e,_dataDiff:t,stroked:o,filled:n,extruded:i,wireframe:s,_normalize:l,_windingOrder:g,elevationScale:u,transitions:d,positionFormat:h}=this.props,{lineWidthUnits:p,lineWidthScale:S,lineWidthMinPixels:f,lineWidthMaxPixels:m,lineJointRounded:y,lineMiterLimit:W,lineDashJustified:N}=this.props,{getFillColor:E,getLineColor:C,getLineWidth:b,getLineDashArray:v,getElevation:A,getPolygon:L,updateTriggers:P,material:w}=this.props,{paths:x,pathsDiff:R}=this.state,z=this.getSubLayerClass("fill",r.A),O=this.getSubLayerClass("stroke",a.A),M=this.shouldRenderSubLayer("fill",x)&&new z({_dataDiff:t,extruded:i,elevationScale:u,filled:n,wireframe:s,_normalize:l,_windingOrder:g,getElevation:A,getFillColor:E,getLineColor:i&&s?C:c,material:w,transitions:d},this.getSubLayerProps({id:"fill",updateTriggers:P&&{getPolygon:P.getPolygon,getElevation:P.getElevation,getFillColor:P.getFillColor,lineColors:i&&s,getLineColor:P.getLineColor}}),{data:e,positionFormat:h,getPolygon:L});return[!i&&M,!i&&o&&this.shouldRenderSubLayer("stroke",x)&&new O({_dataDiff:R&&(()=>R),widthUnits:p,widthScale:S,widthMinPixels:f,widthMaxPixels:m,jointRounded:y,miterLimit:W,dashJustified:N,_pathType:"loop",transitions:d&&{getWidth:d.getLineWidth,getColor:d.getLineColor,getPath:d.getPolygon},getColor:this.getSubLayerAccessor(C),getWidth:this.getSubLayerAccessor(b),getDashArray:this.getSubLayerAccessor(v)},this.getSubLayerProps({id:"stroke",updateTriggers:P&&{getWidth:P.getLineWidth,getColor:P.getLineColor,getDashArray:P.getLineDashArray}}),{data:x,positionFormat:h,getPath:e=>e.path}),i&&M]}}d.layerName="PolygonLayer",d.defaultProps=u;const h=d}}]);