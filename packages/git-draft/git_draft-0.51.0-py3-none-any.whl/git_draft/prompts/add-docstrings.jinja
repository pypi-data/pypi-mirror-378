{% extends prompt.docopt %}

{% block doc %}
Add docstrings to one or more public symbols

Usage:
  {{ program }} [--path PATH] [--symbol SYMBOL]

Options:
  --path PATH      Path to (Python) file where docstrings should be added. If
                   omitted, all source files in this repository will be used.
  --symbol SYMBOL  Name of symbol to be documented. If omitted, all symbols
                   will be considered.
{% endblock %}

{% block body %}
{% if opts.symbol and opts.path %}
Add a docstring to {{ opts.symbol }} defined in {{ opts.path }}.
{% elif opts.path %}
Add docstrings to all public functions and classes in {{ opts.path }}.
{% else %}
Add docstrings to all public functions and classes in this repository.
{% endif %}

Be concise and do not repeat yourself.

Focus on highlighting aspects which are not obvious from the name of the
symbols. Take time to look at the implementation to discover any behaviors
which could be surprising, and make sure to mention those in the docstring.

Docstrings should use the "Args" format for arguments. See the following
examples:


```python
def write_file(path: Path, contents: str) -> None:
    """Updates a file's contents

    Args:
        path: Path to the file to update.
        contents: New file contents.
    """
  ...

class Renderer:
    """A smart renderer"""

    ...
```

Additionally, the first paragraph of each docstring should fit in a single line
and not include a period at the end. It should be a brief summary of the
symbol's functionality.

{{ macros.file_list() }}
{% endblock %}
