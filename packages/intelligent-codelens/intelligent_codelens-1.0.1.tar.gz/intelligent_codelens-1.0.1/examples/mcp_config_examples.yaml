# MCP 配置示例文件
# 复制相应的配置到 config/mcp_config.yaml 中使用

# ============================================
# 示例1: 个人开发环境配置
# ============================================
personal_dev_config: |
  repository:
    path: "/Users/username/projects/my-project"
    supported_languages:
      - python
      - javascript
      - typescript
    ignore_patterns:
      - "*.pyc"
      - "__pycache__"
      - ".git"
      - "node_modules"
      - ".vscode"

  security:
    allowed_paths:
      - "/Users/username/projects/my-project"
      - "/Users/username/projects/my-project/src"
      - "/Users/username/projects/my-project/docs"
    forbidden_paths:
      - "/etc"
      - "/var"
      - "/usr"
      - "~/.ssh"
      - "~/.aws"

# ============================================
# 示例2: 团队共享项目配置
# ============================================
team_shared_config: |
  repository:
    path: "/shared/projects/team-project"
    supported_languages:
      - python
      - javascript
      - typescript
      - java
      - go
    ignore_patterns:
      - "*.pyc"
      - "__pycache__"
      - ".git"
      - "node_modules"
      - ".idea"
      - "*.log"
      - "dist"
      - "build"

  security:
    allowed_paths:
      - "/shared/projects/team-project"
      - "/shared/projects/team-project/src"
      - "/shared/projects/team-project/docs"
      - "/shared/projects/team-project/tests"
    forbidden_paths:
      - "/etc"
      - "/var"
      - "/usr"
      - "/root"
      - "~/.ssh"
      - "~/.aws"
      - "~/.config"

  performance:
    max_file_size: 2097152    # 2MB
    batch_size: 200
    cache_size: 2000

# ============================================
# 示例3: 开源项目分析配置
# ============================================
opensource_analysis_config: |
  repository:
    path: "/Users/username/opensource/target-project"
    supported_languages:
      - python
      - javascript
      - typescript
      - java
      - cpp
      - c
      - go
      - rust
    ignore_patterns:
      - "*.pyc"
      - "__pycache__"
      - ".git"
      - "node_modules"
      - ".vscode"
      - ".idea"
      - "*.log"
      - "*.tmp"
      - "dist"
      - "build"
      - ".DS_Store"
      - "*.min.js"
      - "*.min.css"
      - "coverage"
      - ".nyc_output"

  security:
    allowed_paths:
      - "/Users/username/opensource/target-project"
    forbidden_paths:
      - "/etc"
      - "/var"
      - "/usr"
      - "/bin"
      - "/sbin"
      - "/root"
      - "~/.ssh"
      - "~/.aws"
      - "~/.config"
      - "/System"
      - "/Library/System"

  performance:
    max_file_size: 1048576    # 1MB
    batch_size: 100
    timeout: 60               # 更长的超时时间
    cache_enabled: true
    cache_size: 5000          # 更大的缓存

# ============================================
# 示例4: 当前目录快速配置
# ============================================
current_directory_config: |
  repository:
    path: "."
    supported_languages:
      - python
      - javascript
      - typescript
    ignore_patterns:
      - "*.pyc"
      - "__pycache__"
      - ".git"
      - "node_modules"
      - ".vscode"

  security:
    allowed_paths:
      - "."
      - "./src"
      - "./examples"
      - "./docs"
    forbidden_paths:
      - "/etc"
      - "/var"
      - "/usr"
      - "~/.ssh"

  performance:
    max_file_size: 1048576
    batch_size: 100
    cache_size: 1000

# ============================================
# 示例5: 高性能配置（大型项目）
# ============================================
high_performance_config: |
  repository:
    path: "/path/to/large/project"
    supported_languages:
      - python
      - javascript
      - typescript
      - java
      - cpp
      - c
      - go
      - rust
      - php
      - ruby
    ignore_patterns:
      - "*.pyc"
      - "__pycache__"
      - ".git"
      - "node_modules"
      - ".vscode"
      - ".idea"
      - "*.log"
      - "*.tmp"
      - "dist"
      - "build"
      - ".DS_Store"
      - "*.min.js"
      - "*.min.css"
      - "coverage"
      - ".pytest_cache"
      - ".tox"
      - "venv"
      - "env"

  security:
    allowed_paths:
      - "/path/to/large/project"
      - "/path/to/large/project/src"
      - "/path/to/large/project/lib"
      - "/path/to/large/project/docs"
    forbidden_paths:
      - "/etc"
      - "/var"
      - "/usr"
      - "/bin"
      - "/sbin"
      - "/root"
      - "~/.ssh"
      - "~/.aws"
      - "~/.config"
      - "/System"
      - "/Library/System"
    max_file_read_size: 10485760  # 10MB

  performance:
    max_file_size: 5242880       # 5MB
    batch_size: 500              # 更大的批处理
    timeout: 120                 # 更长的超时
    cache_enabled: true
    cache_size: 10000            # 更大的缓存

  search:
    max_results: 100
    similarity_threshold: 0.6    # 更宽松的相似度
    cache_size: 5000

# ============================================
# 使用说明
# ============================================
usage_instructions: |
  1. 选择适合你使用场景的配置示例
  2. 复制相应的配置内容
  3. 修改路径为你的实际项目路径
  4. 粘贴到 config/mcp_config.yaml 文件中
  5. 根据需要调整其他参数
  6. 重启MCP服务器使配置生效

# ============================================
# 配置参数说明
# ============================================
parameter_explanations: |
  repository.path: 要搜索的代码目录路径
  repository.supported_languages: 支持的编程语言列表
  repository.ignore_patterns: 要忽略的文件和目录模式
  
  security.allowed_paths: 允许访问的路径列表
  security.forbidden_paths: 禁止访问的路径列表
  security.max_file_read_size: 单个文件最大读取大小
  
  performance.max_file_size: 处理的最大文件大小
  performance.batch_size: 批处理大小
  performance.timeout: 操作超时时间（秒）
  performance.cache_enabled: 是否启用缓存
  performance.cache_size: 缓存大小
  
  search.max_results: 最大搜索结果数
  search.similarity_threshold: 相似度阈值
  search.cache_size: 搜索缓存大小