version: '3.8'

services:
  postgres:
    image: postgres:13
    expose:
      - 5432
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: test
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "test"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always
    networks:
      - litellm

  redis:
    # Redis is limited to 7.2-bookworm due to licencing change
    # https://redis.io/blog/redis-adopts-dual-source-available-licensing/
    image: redis:7.2-bookworm
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 50
      start_period: 30s
    command:
      - sh
      - -c # this is to evaluate the $REDIS_PASSWORD from the env
      - redis-server --appendonly yes --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
    environment:
      REDIS_PASSWORD: SDsdgFsfm4lmf43lfnm34lkf
    restart: always
    networks:
      - litellm


  litellm:
    image: ghcr.io/berriai/litellm:v1.73.0-stable
    ports:
      - "${MY_LITELLM_PORT:-}:4000" # Map the container port to the host, change the host port if necessary
    environment:
      - DATABASE_URL=postgresql://test:test@postgres:5432/test
      - LITELLM_MASTER_KEY=${MY_LITELLM_MASTER_KEY:-}
      - SLACK_WEBHOOK_URL=${MY_LITELLM_SLACK_WEBHOOK:-}
      # - SERVER_ROOT_PATH="/api/v1"
      - SSL_KEYFILE_PATH=/app/ssl.key
      - SSL_CERTFILE_PATH=/app/ssl.crt
      - UI_USERNAME=${MY_LITELLM_USERNAME:-}   # username to sign in on UI
      - UI_PASSWORD=${MY_LITELLM_PASSWORD:-}        # password to sign in on UI      
      # - REDIS_HOST=redis
      # - REDIS_PORT=6379
      # - REDIS_PASSWORD=SDsdgFsfm4lmf43lfnm34lkf
    volumes:
      - ./litellm-config.yaml:/app/config.yaml # Mount the local configuration file
      - ./cert.pem:/app/ssl.crt 
      - ./key.pem:/app/ssl.key
    # You can change the port or number of workers as per your requirements or pass any new supported CLI augument. Make sure the port passed here matches with the container port defined above in `ports` value
    command: [ "--config", "/app/config.yaml", "--port", "4000", "--num_workers", "8" ]
    networks:
      - litellm
    depends_on:
      - redis
      - postgres

  ollama:
    image: ollama/ollama:0.9.4-rc0
    expose:
      - 11434
    volumes:
      - ./ollama/ollama:/root/.ollama
      - ./entrypoint.sh:/entrypoint.sh
    container_name: ollama 
    pull_policy: always
    tty: true
    restart: always
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      # - OLLAMA_HOST=0.0.0.0
    entrypoint: ["/usr/bin/bash", "/entrypoint.sh"]
    networks:
      - litellm

networks:
  litellm:
volumes:
  postgres-db-volume:
