# -*- coding: utf-8 -*-
#
# default_syns.py
#
# This file is part of NEST.
#
# Copyright (C) 2004 The NEST Initiative
#
# NEST is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# NEST is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NEST.  If not, see <http://www.gnu.org/licenses/>.

model default_syns:
    parameters:
        # synaptic parameters
        e_AMPA real = 0 mV            # Excitatory reversal Potential
        tau_r_AMPA real = 0.2 ms      # Synaptic Time Constant Excitatory Synapse
        tau_d_AMPA real = 3.0 ms      # Synaptic Time Constant Excitatory Synapse

        e_GABA real = -80. mV            # Inhibitory reversal Potential
        tau_r_GABA real = 0.2 ms      # Synaptic Time Constant Inhibitory Synapse
        tau_d_GABA real = 10.0 ms      # Synaptic Time Constant Inhibitory Synapse

        e_NMDA real = 0 mV            # NMDA reversal Potential
        tau_r_NMDA real = 0.2 ms      # Synaptic Time Constant NMDA Synapse
        tau_d_NMDA real = 43.0 ms      # Synaptic Time Constant NMDA Synapse

        e_AN_AMPA real = 0 mV            # Excitatory reversal Potential
        tau_r_AN_AMPA real = 0.2 ms      # Synaptic Time Constant Excitatory Synapse
        tau_d_AN_AMPA real = 3.0 ms      # Synaptic Time Constant Excitatory Synapse
        e_AN_NMDA real = 0 mV            # NMDA reversal Potential
        tau_r_AN_NMDA real = 0.2 ms      # Synaptic Time Constant NMDA Synapse
        tau_d_AN_NMDA real = 43.0 ms     # Synaptic Time Constant NMDA Synapse
        NMDA_ratio real = 2.0      # NMDA_ratio
        
        e_in real = 0 mV     # reversal of OU conductance


    state:
        v_comp real = 0.00000000

    equations:
        kernel g_AMPA = g_norm_AMPA * ( - exp(-t / tau_r_AMPA) + exp(-t / tau_d_AMPA) )
        inline i_AMPA real = convolve(g_AMPA, spikes_AMPA) * (e_AMPA - v_comp) @mechanism::receptor

        kernel g_GABA = g_norm_GABA * ( - exp(-t / tau_r_GABA) + exp(-t / tau_d_GABA) )
        inline i_GABA real = convolve(g_GABA, spikes_GABA) * (e_GABA - v_comp ) @mechanism::receptor

        kernel g_NMDA = g_norm_NMDA * ( - exp(-t / tau_r_NMDA) + exp(-t / tau_d_NMDA) )
        inline i_NMDA real = convolve(g_NMDA, spikes_NMDA) * (e_NMDA - v_comp ) / (1. + 0.3 * exp( -.1 * v_comp )) @mechanism::receptor

        kernel g_AN_AMPA = g_norm_AN_AMPA * ( - exp(-t / tau_r_AN_AMPA) + exp(-t / tau_d_AN_AMPA) )
        kernel g_AN_NMDA = g_norm_AN_NMDA * ( - exp(-t / tau_r_AN_NMDA) + exp(-t / tau_d_AN_NMDA) )
        inline i_AMPA_NMDA real = convolve(g_AN_AMPA, spikes_AN) * (e_AN_AMPA - v_comp) + NMDA_ratio * \
                                convolve(g_AN_NMDA, spikes_AN) * (e_AN_NMDA - v_comp) / (1. + 0.3 * exp( -.1 * v_comp )) @mechanism::receptor

        inline cond_in real = g_in * (e_in - v_comp) @mechanism::continuous_input
        inline curr_in real = i_in @mechanism::continuous_input


    internals:
        tp_AMPA real = (tau_r_AMPA * tau_d_AMPA) / (tau_d_AMPA - tau_r_AMPA) * ln( tau_d_AMPA / tau_r_AMPA )
        g_norm_AMPA real =  1. / ( -exp( -tp_AMPA / tau_r_AMPA ) + exp( -tp_AMPA / tau_d_AMPA ) )

        tp_GABA real = (tau_r_GABA * tau_d_GABA) / (tau_d_GABA - tau_r_GABA) * ln( tau_d_GABA / tau_r_GABA )
        g_norm_GABA real =  1. / ( -exp( -tp_GABA / tau_r_GABA ) + exp( -tp_GABA / tau_d_GABA ) )

        tp_NMDA real = (tau_r_NMDA * tau_d_NMDA) / (tau_d_NMDA - tau_r_NMDA) * ln( tau_d_NMDA / tau_r_NMDA )
        g_norm_NMDA real =  1. / ( -exp( -tp_NMDA / tau_r_NMDA ) + exp( -tp_NMDA / tau_d_NMDA ) )

        tp_AN_AMPA real = (tau_r_AN_AMPA * tau_d_AN_AMPA) / (tau_d_AN_AMPA - tau_r_AN_AMPA) * ln( tau_d_AN_AMPA / tau_r_AN_AMPA )
        g_norm_AN_AMPA real =  1. / ( -exp( -tp_AN_AMPA / tau_r_AN_AMPA ) + exp( -tp_AN_AMPA / tau_d_AN_AMPA ) )

        tp_AN_NMDA real = (tau_r_AN_NMDA * tau_d_AN_NMDA) / (tau_d_AN_NMDA - tau_r_AN_NMDA) * ln( tau_d_AN_NMDA / tau_r_AN_NMDA )
        g_norm_AN_NMDA real =  1. / ( -exp( -tp_AN_NMDA / tau_r_AN_NMDA ) + exp( -tp_AN_NMDA / tau_d_AN_NMDA ) )


    input:
        spikes_AMPA <- spike
        spikes_GABA <- spike
        spikes_NMDA <- spike
        spikes_AN <- spike

        g_in real <- continuous
        i_in real <- continuous

    output:
        spike