{
    "config": {
        "thread_id": "ff6884ed-c66d-4510-85eb-5ef3119b5b9c",
        "article_id": "05_workflow_patterns",
        "enable_human_review": null
    },
    "num_chars_article": 49425,
    "num_chars_conclusion": 1385,
    "num_chars_introduction": 1415,
    "num_sections": 7,
    "num_words_article": 6076,
    "num_words_conclusion": 202,
    "num_words_introduction": 223,
    "sections": {
        "The Challenge with Complex Single LLM Calls": {
            "num_chars": 5298,
            "num_words": 757
        },
        "The Power of Modularity: Why Chain LLM Calls?": {
            "num_chars": 3872,
            "num_words": 531
        },
        "Building a Sequential Workflow: FAQ Generation Pipeline": {
            "num_chars": 7487,
            "num_words": 934
        },
        "Optimizing Sequential Workflows With Parallel Processing": {
            "num_chars": 6264,
            "num_words": 756
        },
        "Introducing Dynamic Behavior: Routing and Conditional Logic": {
            "num_chars": 1976,
            "num_words": 247
        },
        "Building a Basic Routing Workflow": {
            "num_chars": 5395,
            "num_words": 693
        },
        "Orchestrator-Worker Pattern: Dynamic Task Decomposition": {
            "num_chars": 13295,
            "num_words": 1491
        }
    },
    "seo": {
        "title": "LLM Workflow Patterns for AI Apps",
        "description": "Master LLM workflows for AI apps! Learn sequential, parallel, routing, and orchestrator-worker patterns to build robust, scalable, and reliable AI systems. Optimize your LLM applications."
    }
}