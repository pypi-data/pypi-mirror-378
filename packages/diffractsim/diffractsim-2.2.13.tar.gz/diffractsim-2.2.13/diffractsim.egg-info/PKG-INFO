Metadata-Version: 2.4
Name: diffractsim
Version: 2.2.13
Summary: A flexible diffraction simulator for exploring and visualizing physical optics
Home-page: https://github.com/rafael-fuente/Diffraction-Simulations--Angular-Spectrum-Method
Download-URL: https://github.com/rafael-fuente/Diffraction-Simulations--Angular-Spectrum-Method/archive/main.zip
Author: Rafael de la Fuente
Author-email: rafael.fuente.herrezuelo@gmail.com
License: MPL 2.0
Keywords: diffraction,angular spectrum method,optics,physics simulation
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: scipy
Requires-Dist: Pillow
Requires-Dist: matplotlib
Requires-Dist: progressbar
Requires-Dist: jax
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: download-url
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: license-file
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary


# Diffractsim: A diffraction simulator for exploring and visualizing physical optics
Flexible, and easy-to-use Python diffraction simulator that focuses on visualizing physical optics phenomena.
The simulator uses mainly scalar diffraction techniques for light propagation, provides an interface for simulation set up, and includes several plotting options, counting with CIE Color matching functions for accurate color reproduction. 
The implemented methods are differentiable when using the JAX-backend, enabling optimization and design of the optical setups.


The basic use of this simulator using the angular spectrum method is described in this [article](https://rafael-fuente.github.io/simulating-diffraction-patterns-with-the-angular-spectrum-method-and-python.html).
Take a look to the [videos](https://www.youtube.com/watch?v=Ft8CMEooBAE&list=PLYkZehxPE_IhyO6wC21nFP0q1ZYGIW4l1&index=1) to see the animated simulations!
