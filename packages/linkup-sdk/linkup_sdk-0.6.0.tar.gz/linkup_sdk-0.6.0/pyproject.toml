[project]
authors = [{ email = "contact@linkup.so", name = "LINKUP TECHNOLOGIES" }]
description = "A Python Client SDK for the Linkup API"
keywords = ["api", "client", "linkup", "sdk", "search"]
license = "MIT"
name = "linkup-sdk"
readme = "README.md"
requires-python = ">=3.9"
version = "0.6.0"

classifiers = [
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = ["httpx>=0.23.0", "pydantic>=2.0.0"]

[project.optional-dependencies]
build = ["uv>=0.8.0,<0.9.0"] # For python-semantic-release build command, used in GitHub actions

[project.urls]
Documentation = "https://github.com/LinkupPlatform/linkup-python-sdk#readme"
Homepage = "https://github.com/LinkupPlatform/linkup-python-sdk"
Source = "https://github.com/LinkupPlatform/linkup-python-sdk"
Tracker = "https://github.com/LinkupPlatform/linkup-python-sdk/issues"

[dependency-groups]
dev = [
  "mypy>=1.16.1",
  "pre-commit>=4.2.0",
  "pytest-asyncio>=1.0.0",
  "pytest-cov>=6.2.1",
  "pytest-mock>=3.14.1",
  "pytest>=8.4.1",
  "python-dotenv>=1.1.1",
  "rich>=14.1.0",
]

[tool.mypy]
strict = true
warn_unreachable = true

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.report]
exclude_also = ["raise TypeError", "raise ValueError"]
show_missing = true
skip_covered = true

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "I", "S", "UP"]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*_test.py" = ["S101"]

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.hatch.build.targets.wheel]
packages = ["src/linkup"] # Because project and source code directory names differ

[tool.semantic_release]
allow_zero_version = true
build_command = """
    python -m pip install -e '.[build]'
    uv lock --upgrade-package "$PACKAGE_NAME"
    git add uv.lock
    uv build
"""
commit_message = "chore: release v{version}\n\nAutomatically generated by python-semantic-release\n\n[skip ci]" # [skip ci] is needed to recursively calling the release CI
major_on_zero = false
version_toml = ["pyproject.toml:project.version"]

[tool.semantic_release.commit_parser_options]
parse_squash_commits = false

[tool.uv]
required-version = ">=0.8.0,<0.9.0"
