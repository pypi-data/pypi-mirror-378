[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "django-dart-sass"
version = "0.1.0"
description = "Django integration for Python Dart Sass with django-compressor support"
readme = "README.md"
license = "MIT"
authors = [
    { name = "Harvey McQueen", email = "hmcqueen@gmail.com" },
]
maintainers = [
    { name = "Harvey McQueen", email = "hmcqueen@gmail.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Framework :: Django :: 5.2",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup",
]
keywords = ["django", "sass", "scss", "css", "compressor", "embedded"]
requires-python = ">=3.10"
dependencies = [
    "Django>=3.2,<6.0",
    "python-dart-sass>=0.1.0",
]

[project.optional-dependencies]
compressor = ["django-compressor>=4.0"]
dev = [
    "pytest>=7.0.0",
    "pytest-django>=4.5.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "ruff>=0.1.0",
    "django-compressor>=4.0",
]

[project.urls]
Homepage = "https://github.com/hmcqueen/django-dart-sass"
Documentation = "https://github.com/hmcqueen/django-dart-sass#readme"
Repository = "https://github.com/hmcqueen/django-dart-sass"
"Bug Tracker" = "https://github.com/hmcqueen/django-dart-sass/issues"
Changelog = "https://github.com/hmcqueen/django-dart-sass/blob/main/CHANGELOG.md"

[project.scripts]
django-dart-sass = "django_dart_sass.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/django_dart_sass"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
    "/CONTRIBUTING.md",
    "/CHANGELOG.md",
]

[tool.hatch.metadata]
allow-direct-references = true

# Black configuration
[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_django = "django"
known_first_party = "django_dart_sass"
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# Ruff configuration
[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

# Pytest configuration
[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=django_dart_sass",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
