[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pasvg"
version = "1.0.8"
description = "Project Artifact SVG - Revolutionary single-file project distribution system"
readme = "README.md"
license = "Apache-2.0"
requires-python = ">=3.8"
authors = [
    {name = "Tom Sapletta", email = "info@softreck.dev"},
]
keywords = [
    "svg", "project-artifact", "deployment", "automation", 
    "single-file", "container", "build-system"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Text Processing :: Markup :: XML",
]
dependencies = [
    "click>=8.0.0",
    "pyyaml>=6.0",
    "jinja2>=3.0.0",
    "pathlib-abc>=0.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/dynapsys/pasvg"
Documentation = "https://github.com/dynapsys/pasvg/tree/main/docs"
Repository = "https://github.com/dynapsys/pasvg"
Issues = "https://github.com/dynapsys/pasvg/issues"

[project.scripts]
pasvg = "pasvg.cli:main"
pasvg-generate = "pasvg.cli:generate"
pasvg-extract = "pasvg.cli:extract"
pasvg-validate = "pasvg.cli:validate"
pasvg-build = "pasvg.cli:build"
pasvg-bump = "scripts.version_bumper:main"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/docs",
    "/tests",
    "/examples",
]

[tool.hatch.build.targets.wheel]
packages = ["src/pasvg"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["pasvg"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=pasvg --cov-report=term-missing --cov-report=html"
