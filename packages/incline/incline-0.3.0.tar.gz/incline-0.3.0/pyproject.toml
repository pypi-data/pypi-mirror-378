[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "incline"
version = "0.3.0"
description = "Estimate Trend at a Particular Point in a Noisy Time Series"
authors = [
    {name = "Suriyan Laohaprapanon", email = "suriyant@gmail.com"},
    {name = "Gaurav Sood", email = "gsood07@gmail.com"}
]
readme = "README.rst"
license = "MIT"
requires-python = ">=3.10"
keywords = ["time-series", "derivative", "slope", "trend", "savitzky-golay", "spline"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities"
]
dependencies = [
    "pandas>=1.0.0",
    "numpy>=1.18.0",
    "scipy>=1.4.0"
]

[project.optional-dependencies]
dev = [
    "check-manifest",
    "sphinx>=4.0.0",
    "sphinx-rtd-theme",
    "myst-parser",
    "jupyter",
    "matplotlib"
]
test = [
    "pytest>=6.0",
    "pytest-cov",
    "coverage",
    "flake8"
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme",
    "myst-parser",
    "sphinx-autoapi"
]
advanced = [
    "statsmodels>=0.13.0",
    "scikit-learn>=1.0.0",
    "matplotlib>=3.5.0"
]
all = [
    "statsmodels>=0.13.0",
    "scikit-learn>=1.0.0", 
    "matplotlib>=3.5.0",
    "sphinx>=4.0.0",
    "sphinx-rtd-theme",
    "myst-parser",
    "pytest>=6.0",
    "pytest-cov",
    "coverage"
]

[project.urls]
Homepage = "https://github.com/finite-sample/incline"
Documentation = "https://finite-sample.github.io/incline/"
Repository = "https://github.com/finite-sample/incline"
Issues = "https://github.com/finite-sample/incline/issues"

[tool.setuptools]
packages = ["incline"]

[tool.setuptools.package-data]
incline = ["data/*.csv", "examples/*.ipynb"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v"

[tool.coverage.run]
source = ["incline"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "E501", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info"
]