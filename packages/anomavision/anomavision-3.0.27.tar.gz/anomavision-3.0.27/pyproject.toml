[tool.poetry]
name = "anomavision"
version = "3.0.27"
description = "Advanced Anomaly Detection Environment - Deep learning library for state-of-the-art anomaly detection algorithms"
authors = ["Deep Knowledge <Deepp.Knowledge@gmail.com>"]
readme = "README.md"

license = "MIT"
keywords = ["anomaly", "vision", "computer-vision", "anomaly-detection","PaDim"]
homepage = "https://github.com/DeepKnowledge1"
repository = "https://github.com/DeepKnowledge1/AnomaVision"
documentation = "https://github.com/DeepKnowledge1/AnomaVision/wiki"

packages = [
    {include = "anomavision"},
    {include = "anodet"},  # Backward compatibility layer
]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
matplotlib = "3.8.3"
numpy = "1.26.4"
openvino-dev = ">=2024.0"

easydict = "1.13"
onnx = "^1.15.0"
opencv-python = "^4.6.0"
scikit-learn = ">=1.2,<1.4"

scikit-image = "0.22.0"

# Default (CPU)
onnxruntime = ">=1.16.0,<1.18"

torch = ">=2.4.0"
torchvision = ">=0.19.0"
torchaudio = ">=2.4.0"

# GPU (optional, via extras)
onnxruntime-gpu = { version = ">=1.16.0", optional = true }
tqdm = "^4.67.1"

[tool.poetry.group.dev.dependencies]
pytest = "8.0.2"
black = "24.2.0"
flake8 = "7.0.0"
pre-commit = "3.6.2"

[tool.poetry.extras]
cpu   = ["torch", "torchvision", "torchaudio", "onnxruntime"]
cu118 = ["torch", "torchvision", "torchaudio", "onnxruntime-gpu"]
cu121 = ["torch", "torchvision", "torchaudio", "onnxruntime-gpu"]
cu124 = ["torch", "torchvision", "torchaudio", "onnxruntime-gpu"]

# Full install (all variants together)
full  = ["torch", "torchvision", "torchaudio", "onnxruntime", "onnxruntime-gpu"]

[[tool.poetry.source]]
name = "torch-cu118"
url = "https://download.pytorch.org/whl/cu118"
priority = "supplemental"

[[tool.poetry.source]]
name = "torch-cu121"
url = "https://download.pytorch.org/whl/cu121"
priority = "supplemental"

[[tool.poetry.source]]
name = "torch-cu124"
url = "https://download.pytorch.org/whl/cu124"
priority = "supplemental"

[[tool.poetry.source]]
name = "torch-cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "supplemental"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
