# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .single_action_check_response import SingleActionCheckResponse


class ActionCheckResponse(UniversalBaseModel):
    """
    Response schema for multiple action checks.
    """

    results: typing.Dict[str, SingleActionCheckResponse] = pydantic.Field()
    """
    Dictionary of action check results keyed by action type
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
