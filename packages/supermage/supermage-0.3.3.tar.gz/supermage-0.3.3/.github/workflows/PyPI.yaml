name: Upload Python Package to PyPI when a Release is Published

on:
  release:
    types: [published]

jobs:
  pypi-publish:
    name: Publish release to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/supermage
    permissions:
      id-token: write  # for PyPI Trusted Publishing

    steps:
      - name: Check out the release tag
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}   # e.g. v0.1.2
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Verify meta version == tag
        shell: bash
        run: |
          TAG="${{ github.event.release.tag_name }}"
          VER="${TAG#v}"  # strip leading 'v' if present
          META_VER=$(sed -nE "s/^[[:space:]]*version[[:space:]]*=[[:space:]]*['\"]([^'\"]+)['\"]/\\1/p" supermage/__meta__.py)
          echo "meta version: $META_VER"
          echo "tag  version: $VER"
          if [ -z "$META_VER" ]; then
            echo "ERROR: Could not find version= in supermage/__meta__.py"
            exit 1
          fi
          if [ "$META_VER" != "$VER" ]; then
            echo "ERROR: meta version ($META_VER) != tag ($VER)"
            exit 2
          fi

      - name: Clean old artifacts
        run: rm -rf dist/ build/

      - name: Build sdist and wheel
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
