[project]
name = "django-tools"
dynamic = ["version"]
description = "miscellaneous tools for Django based projects"
license = {text = "GPL-3.0-or-later"}
readme = "README.md"
authors = [
    {name = 'Jens Diemer', email = 'django-tools@jensdiemer.de'}
]
requires-python = ">=3.11"
dependencies = [
    "django",  # https://docs.djangoproject.com

    "colorlog",  # https://github.com/borntyping/python-colorlog
    "gunicorn",  # https://github.com/benoimyproject.wsgitc/gunicorn

    "icdiff",  # https://github.com/jeffkaufman/icdiff
    "pprintpp",  # https://github.com/wolever/pprintpp
    "bleach",

    "django-debug-toolbar",  # http://django-debug-toolbar.readthedocs.io/en/stable/changes.html
    "bx_py_utils",  # https://github.com/boxine/bx_py_utils
    "bx_django_utils",  # https://github.com/boxine/bx_django_utils
]
[dependency-groups]
dev = [
    "rich",  # https://github.com/Textualize/rich/
    "django-parler",
    "beautifulsoup4",
    "Pillow",  # https://github.com/python-pillow/Pillow/

    "django-debug-toolbar",  # http://django-debug-toolbar.readthedocs.io/en/stable/changes.html
    "manage_django_project>=0.10.0",  # https://github.com/jedie/manage_django_project
    "uv",  # https://github.com/astral-sh/uv
    "hatchling",  # https://github.com/pypa/hatch/tree/master/backend
    "playwright",  # https://github.com/microsoft/playwright-python
    "tblib",   # https://github.com/ionelmc/python-tblib
    "nox",  # https://github.com/wntrblm/nox
    "coverage",  # https://github.com/nedbat/coveragepy
    "ruff", # https://github.com/astral-sh/ruff
    "codespell",  # https://github.com/codespell-project/codespell
    "EditorConfig",  # https://github.com/editorconfig/editorconfig-core-py
    "pip-audit",  # https://github.com/pypa/pip-audit
    "mypy",  # https://github.com/python/mypy
    "twine",  # https://github.com/pypa/twine
    "pre-commit",  # https://github.com/pre-commit/pre-commit
    "typeguard",  # https://github.com/agronholm/typeguard/
    #
    "model_bakery",  # https://github.com/model-bakers/model_bakery
    "requests-mock",
    "django-override-storage",  # https://github.com/danifus/django-override-storage
]

[project.urls]
Documentation = "https://github.com/jedie/django-tools/"
Source = "https://github.com/jedie/django-tools/"


[project.scripts]
# Must be set in ./manage.py and PROJECT_SHELL_SCRIPT:
django_tools_project = "django_tools_project.__main__:main"

[manage_django_project]
module_name="django_tools_project"

# Django settings used for all commands except test/coverage/tox:
local_settings='django_tools_project.settings.local'

# Django settings used for test/coverage/tox commands:
test_settings='django_tools_project.settings.tests'


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["django_tools", "django_tools_project"]

[tool.hatch.version]
path = "django_tools/__init__.py"


[tool.cli_base]
version_module_name = "django_tools" # Used by "update-readme-history" pre-commit hook


[tool.cli_base.pip_audit]
requirements=["requirements.dev.txt"]
strict=true
require_hashes=true
ignore-vuln=[
#    "CVE-2019-8341", # Jinja2: Side Template Injection (SSTI)
]


[tool.ruff]
# https://docs.astral.sh/ruff/configuration/
line-length = 120
exclude = [
    ".*/",
    "*/migrations/*"
]

[tool.ruff.lint]
preview = true  # Needed for some of the rules
extend-select = [
    "E", # pycodestyle: https://docs.astral.sh/ruff/rules/#error-e
    "I", # isort: https://docs.astral.sh/ruff/rules/#isort-i
]
ignore = [
    "E402", # https://docs.astral.sh/ruff/rules/module-import-not-at-top-of-file/
    "E731", # https://docs.astral.sh/ruff/rules/lambda-assignment/
]

[tool.ruff.lint.isort]
# https://docs.astral.sh/ruff/settings/#lintisort
lines-after-imports = 2

[tool.ruff.format]
quote-style = "single"


[tool.coverage.run]  # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
parallel = true
concurrency = ["multiprocessing"]
source = ['.']
command_line = '-m django_tools_project test --shuffle --parallel --buffer'

[tool.coverage.report]
omit = ['.*', '*/tests/*', '*/migrations/*']
skip_empty = true
fail_under = 30
show_missing = true
exclude_lines = [
    'if self.debug:',
    'pragma: no cover',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
]

[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
allow_redefinition = true  # https://github.com/python/mypy/issues/7165
show_error_codes = true
plugins = []
exclude = ['.venv', 'tests', 'migrations']


[manageprojects] # https://github.com/jedie/manageprojects
initial_revision = "53a7e85"
initial_date = 2023-04-10T19:08:56+02:00
cookiecutter_template = "https://github.com/jedie/cookiecutter_templates/"
cookiecutter_directory = "managed-django-project"
applied_migrations = [
    "52669d0", # 2024-08-02T15:47:04+02:00
    "3084867", # 2024-08-25T14:35:25+02:00
    "ae399b9", # 2025-09-21T09:34:36+02:00
]

[manageprojects.cookiecutter_context.cookiecutter]
full_name = "Jens Diemer"
github_username = "jedie"
author_email = "django-tools@jensdiemer.de"
project_name = "django-tools"
package_name = "django_tools"
package_version = "0.55.0"
package_description = "miscellaneous tools for Django based projects"
package_url = "https://github.com/jedie/django-tools/"
license = "GPL-3.0-or-later"
_template = "https://github.com/jedie/cookiecutter_templates/"
