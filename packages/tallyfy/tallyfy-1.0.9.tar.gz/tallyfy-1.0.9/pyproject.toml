[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "tallyfy"
version = "1.0.9"
description = "A comprehensive Python SDK for interacting with the Tallyfy API"
readme = "README.md"
requires-python = ">=3.7"
license = {text = "MIT"}
authors = [
    {name = "Tallyfy", email = "support@tallyfy.com"},
]
maintainers = [
    {name = "Tallyfy", email = "support@tallyfy.com"},
]
keywords = ["tallyfy", "api", "sdk", "workflow", "automation", "task", "management"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
dependencies = [
    "requests>=2.25.0",
    "typing-extensions>=4.0.0; python_version<'3.8'",
    "email-validator==2.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
    "black>=21.0.1",
    "flake8>=3.8.0",
    "mypy>=0.800",
]

[project.urls]
Documentation = "https://tallyfy.com/products/"
Repository = "https://github.com/tallyfy/tallyfy-sdk"
"Bug Tracker" = "https://github.com/tallyfy/tallyfy-sdk/issues"
Changelog = "https://github.com/tallyfy/tallyfy-sdk/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
include = ["tallyfy*"]

[tool.setuptools.package-data]
tallyfy = ["*.md"]

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]