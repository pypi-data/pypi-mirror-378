name: Tests

on:
  pull_request:
    branches: [ master ]
  workflow_call:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Cache uv
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-python-${{ matrix.python-version }}-

    - name: make venv
      run: uv venv

    - name: Install dependencies
      run: PATH=".venv/bin:$PATH" uv sync --extra test
    
    - name: Run tests
      run: PATH=".venv/bin:$PATH" pytest -s

    - name: Run e2e test
      run: PATH=".venv/bin:$PATH" python -m hseb --config tests/ci.yml --out ci.json --warmup 100 --queries 100

    - name: Run linting
      run: PATH=".venv/bin:$PATH" ruff check
    
    - name: Check formatting
      run: PATH=".venv/bin:$PATH" ruff format --check
