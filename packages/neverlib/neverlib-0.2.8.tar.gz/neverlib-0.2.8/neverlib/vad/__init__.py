# This file is auto-generated. Do NOT edit manually.
# Generated by neverlib.QA.gen_init

from typing import TYPE_CHECKING, Any

if TYPE_CHECKING:
    # 仅在类型检查时导入，提供IDE补全支持
    from .PreProcess import NS, NS_test, pre_emphasis
    from .VAD_Energy import EnergyVad_C
    from .VAD_Silero import Silero_VAD_C
    from .VAD_WebRTC import WebRTC_VAD_C
    from .VAD_funasr import FunASR_VAD_C
    from .VAD_statistics import Statistics_VAD
    from .VAD_vadlib import Vadlib_C
    from .VAD_whisper import Whisper_VAD_C
    from .class_get_speech import getSpeech
    from .class_vad import VADClass
    from .utils import from_vadArray_to_vadEndpoint, vad2nad, vad_smooth

# 运行时使用懒加载
from lazy_loader import attach

__getattr__, __dir__, __all__ = attach(
    __name__,
    submodules=[
        "PreProcess",
        "VAD_Energy",
        "VAD_Silero",
        "VAD_WebRTC",
        "VAD_funasr",
        "VAD_statistics",
        "VAD_vadlib",
        "VAD_whisper",
        "class_get_speech",
        "class_vad",
        "utils",
    ],
    submod_attrs={
        "PreProcess": ['NS', 'NS_test', 'pre_emphasis'],
        "VAD_Energy": ['EnergyVad_C'],
        "VAD_Silero": ['Silero_VAD_C'],
        "VAD_WebRTC": ['WebRTC_VAD_C'],
        "VAD_funasr": ['FunASR_VAD_C'],
        "VAD_statistics": ['Statistics_VAD'],
        "VAD_vadlib": ['Vadlib_C'],
        "VAD_whisper": ['Whisper_VAD_C'],
        "class_get_speech": ['getSpeech'],
        "class_vad": ['VADClass'],
        "utils": ['from_vadArray_to_vadEndpoint', 'vad2nad', 'vad_smooth'],
    }
)

# 显式声明 __all__ 以便 IDE 识别
if TYPE_CHECKING:
    __all__ = [
        'NS',
        'NS_test',
        'pre_emphasis',
        'EnergyVad_C',
        'Silero_VAD_C',
        'WebRTC_VAD_C',
        'FunASR_VAD_C',
        'Statistics_VAD',
        'Vadlib_C',
        'Whisper_VAD_C',
        'getSpeech',
        'VADClass',
        'from_vadArray_to_vadEndpoint',
        'vad2nad',
        'vad_smooth',
    ]
