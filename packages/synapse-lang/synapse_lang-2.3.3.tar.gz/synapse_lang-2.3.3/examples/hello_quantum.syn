# Synapse Language - Quantum Hello World
# This example demonstrates quantum superposition and measurement

# Create a quantum circuit with 2 qubits
quantum circuit hello_quantum:
    qubits: 2
    
    # Put first qubit in superposition
    h 0
    
    # Create entanglement between qubits
    cx 0, 1
    
    # Measure both qubits
    measure all

# Run the circuit with multiple shots to see probability distribution
experiment quantum_hello:
    setup:
        shots = 1000
        backend = "simulator"
    
    run:
        results = hello_quantum.execute(shots)
        
    analyze:
        # Should see roughly 50% |00> and 50% |11> due to entanglement
        print("Quantum Hello World Results:")
        print(f"Measured states: {results.counts}")
        print(f"Most probable: {results.most_common()}")

# Parallel hypothesis testing with uncertainty
hypothesis quantum_advantage:
    parallel branches:
        branch classical:
            time = 100.0 ± 5.0  # Classical algorithm time
            accuracy = 0.95 ± 0.02
            
        branch quantum:
            time = 10.0 ± 2.0   # Quantum algorithm time  
            accuracy = 0.98 ± 0.01
    
    merge with comparison
    
    conclude:
        if quantum.time < classical.time * 0.5:
            print("Quantum advantage demonstrated!")
            print(f"Speedup: {classical.time / quantum.time}x")

# Main execution
parallel {
    branch A: quantum_hello.run()
    branch B: quantum_advantage.test()
}

print("Welcome to Synapse - where quantum meets classical!")