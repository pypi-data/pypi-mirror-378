# -*- coding: utf-8 -*-
# Generated by https://github.com/i2y/connecpy/v2/protoc-gen-connecpy.  DO NOT EDIT!
# source: metalstack/admin/v2/token.proto

from collections.abc import AsyncIterator, Iterable, Iterator, Mapping
from typing import Protocol

from connecpy.client import ConnecpyClient, ConnecpyClientSync
from connecpy.code import Code
from connecpy.exceptions import ConnecpyException
from connecpy.interceptor import Interceptor, InterceptorSync
from connecpy.method import IdempotencyLevel, MethodInfo
from connecpy.request import Headers, RequestContext
from connecpy.server import ConnecpyASGIApplication, ConnecpyWSGIApplication, Endpoint, EndpointSync
import metalstack.admin.v2.token_pb2 as metalstack_dot_admin_dot_v2_dot_token__pb2


class TokenService(Protocol):
    async def list(self, request: metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceListRequest, ctx: RequestContext) -> metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceListResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")

    async def revoke(self, request: metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceRevokeRequest, ctx: RequestContext) -> metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceRevokeResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")


class TokenServiceASGIApplication(ConnecpyASGIApplication):
    def __init__(self, service: TokenService, *, interceptors: Iterable[Interceptor]=(), read_max_bytes: int | None = None):
        super().__init__(
            endpoints={
                "/metalstack.admin.v2.TokenService/List": Endpoint.unary(
                    method=MethodInfo(
                        name="List",
                        service_name="metalstack.admin.v2.TokenService",
                        input=metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceListRequest,
                        output=metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceListResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list,
                ),
                "/metalstack.admin.v2.TokenService/Revoke": Endpoint.unary(
                    method=MethodInfo(
                        name="Revoke",
                        service_name="metalstack.admin.v2.TokenService",
                        input=metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceRevokeRequest,
                        output=metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceRevokeResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.revoke,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self):
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/metalstack.admin.v2.TokenService"


class TokenServiceClient(ConnecpyClient):
    async def list(
        self,
        request: metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceListRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceListResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="List",
                service_name="metalstack.admin.v2.TokenService",
                input=metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceListRequest,
                output=metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceListResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def revoke(
        self,
        request: metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceRevokeRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceRevokeResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Revoke",
                service_name="metalstack.admin.v2.TokenService",
                input=metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceRevokeRequest,
                output=metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceRevokeResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )


class TokenServiceSync(Protocol):
    def list(self, request: metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceListRequest, ctx: RequestContext) -> metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceListResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")
    def revoke(self, request: metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceRevokeRequest, ctx: RequestContext) -> metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceRevokeResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")


class TokenServiceWSGIApplication(ConnecpyWSGIApplication):
    def __init__(self, service: TokenServiceSync, interceptors: Iterable[InterceptorSync]=(), read_max_bytes: int | None = None):
        super().__init__(
            endpoints={
                "/metalstack.admin.v2.TokenService/List": EndpointSync.unary(
                    method=MethodInfo(
                        name="List",
                        service_name="metalstack.admin.v2.TokenService",
                        input=metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceListRequest,
                        output=metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceListResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list,
                ),
                "/metalstack.admin.v2.TokenService/Revoke": EndpointSync.unary(
                    method=MethodInfo(
                        name="Revoke",
                        service_name="metalstack.admin.v2.TokenService",
                        input=metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceRevokeRequest,
                        output=metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceRevokeResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.revoke,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self):
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/metalstack.admin.v2.TokenService"


class TokenServiceClientSync(ConnecpyClientSync):
    def list(
        self,
        request: metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceListRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceListResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="List",
                service_name="metalstack.admin.v2.TokenService",
                input=metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceListRequest,
                output=metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceListResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def revoke(
        self,
        request: metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceRevokeRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceRevokeResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Revoke",
                service_name="metalstack.admin.v2.TokenService",
                input=metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceRevokeRequest,
                output=metalstack_dot_admin_dot_v2_dot_token__pb2.TokenServiceRevokeResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )
