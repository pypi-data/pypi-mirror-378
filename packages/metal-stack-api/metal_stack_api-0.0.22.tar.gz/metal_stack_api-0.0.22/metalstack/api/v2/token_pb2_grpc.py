# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from metalstack.api.v2 import token_pb2 as metalstack_dot_api_dot_v2_dot_token__pb2


class TokenServiceStub(object):
    """TokenService serves token related functions
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/metalstack.api.v2.TokenService/Get',
                request_serializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceGetRequest.SerializeToString,
                response_deserializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceGetResponse.FromString,
                _registered_method=True)
        self.Create = channel.unary_unary(
                '/metalstack.api.v2.TokenService/Create',
                request_serializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceCreateRequest.SerializeToString,
                response_deserializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceCreateResponse.FromString,
                _registered_method=True)
        self.Update = channel.unary_unary(
                '/metalstack.api.v2.TokenService/Update',
                request_serializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceUpdateRequest.SerializeToString,
                response_deserializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceUpdateResponse.FromString,
                _registered_method=True)
        self.List = channel.unary_unary(
                '/metalstack.api.v2.TokenService/List',
                request_serializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceListRequest.SerializeToString,
                response_deserializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceListResponse.FromString,
                _registered_method=True)
        self.Revoke = channel.unary_unary(
                '/metalstack.api.v2.TokenService/Revoke',
                request_serializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceRevokeRequest.SerializeToString,
                response_deserializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceRevokeResponse.FromString,
                _registered_method=True)
        self.Refresh = channel.unary_unary(
                '/metalstack.api.v2.TokenService/Refresh',
                request_serializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceRefreshRequest.SerializeToString,
                response_deserializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceRefreshResponse.FromString,
                _registered_method=True)


class TokenServiceServicer(object):
    """TokenService serves token related functions
    """

    def Get(self, request, context):
        """Get a token
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """Create a token to authenticate against the platform, the secret will be only visible in the response
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Update a token
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """List all your tokens
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Revoke(self, request, context):
        """Revoke a token, no further usage is possible afterwards
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Refresh(self, request, context):
        """Refresh a token, this will create a new token with the exact same permissions as the calling token contains
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TokenServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceGetRequest.FromString,
                    response_serializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceGetResponse.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceCreateRequest.FromString,
                    response_serializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceCreateResponse.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceUpdateRequest.FromString,
                    response_serializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceUpdateResponse.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceListRequest.FromString,
                    response_serializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceListResponse.SerializeToString,
            ),
            'Revoke': grpc.unary_unary_rpc_method_handler(
                    servicer.Revoke,
                    request_deserializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceRevokeRequest.FromString,
                    response_serializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceRevokeResponse.SerializeToString,
            ),
            'Refresh': grpc.unary_unary_rpc_method_handler(
                    servicer.Refresh,
                    request_deserializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceRefreshRequest.FromString,
                    response_serializer=metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceRefreshResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'metalstack.api.v2.TokenService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('metalstack.api.v2.TokenService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TokenService(object):
    """TokenService serves token related functions
    """

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/metalstack.api.v2.TokenService/Get',
            metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceGetRequest.SerializeToString,
            metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceGetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/metalstack.api.v2.TokenService/Create',
            metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceCreateRequest.SerializeToString,
            metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceCreateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/metalstack.api.v2.TokenService/Update',
            metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceUpdateRequest.SerializeToString,
            metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/metalstack.api.v2.TokenService/List',
            metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceListRequest.SerializeToString,
            metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Revoke(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/metalstack.api.v2.TokenService/Revoke',
            metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceRevokeRequest.SerializeToString,
            metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceRevokeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Refresh(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/metalstack.api.v2.TokenService/Refresh',
            metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceRefreshRequest.SerializeToString,
            metalstack_dot_api_dot_v2_dot_token__pb2.TokenServiceRefreshResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
