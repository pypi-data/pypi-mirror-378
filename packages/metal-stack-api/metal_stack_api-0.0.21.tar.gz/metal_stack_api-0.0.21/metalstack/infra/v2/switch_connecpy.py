# -*- coding: utf-8 -*-
# Generated by https://github.com/i2y/connecpy/v2/protoc-gen-connecpy.  DO NOT EDIT!
# source: metalstack/infra/v2/switch.proto

from collections.abc import AsyncIterator, Iterable, Iterator, Mapping
from typing import Protocol

from connecpy.client import ConnecpyClient, ConnecpyClientSync
from connecpy.code import Code
from connecpy.exceptions import ConnecpyException
from connecpy.interceptor import Interceptor, InterceptorSync
from connecpy.method import IdempotencyLevel, MethodInfo
from connecpy.request import Headers, RequestContext
from connecpy.server import ConnecpyASGIApplication, ConnecpyWSGIApplication, Endpoint, EndpointSync
import metalstack.infra.v2.switch_pb2 as metalstack_dot_infra_dot_v2_dot_switch__pb2


class SwitchService(Protocol):
    async def register(self, request: metalstack_dot_infra_dot_v2_dot_switch__pb2.SwitchServiceRegisterRequest, ctx: RequestContext) -> metalstack_dot_infra_dot_v2_dot_switch__pb2.SwitchServiceRegisterResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")


class SwitchServiceASGIApplication(ConnecpyASGIApplication):
    def __init__(self, service: SwitchService, *, interceptors: Iterable[Interceptor]=(), read_max_bytes: int | None = None):
        super().__init__(
            endpoints={
                "/metalstack.infra.v2.SwitchService/Register": Endpoint.unary(
                    method=MethodInfo(
                        name="Register",
                        service_name="metalstack.infra.v2.SwitchService",
                        input=metalstack_dot_infra_dot_v2_dot_switch__pb2.SwitchServiceRegisterRequest,
                        output=metalstack_dot_infra_dot_v2_dot_switch__pb2.SwitchServiceRegisterResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.register,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self):
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/metalstack.infra.v2.SwitchService"


class SwitchServiceClient(ConnecpyClient):
    async def register(
        self,
        request: metalstack_dot_infra_dot_v2_dot_switch__pb2.SwitchServiceRegisterRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_infra_dot_v2_dot_switch__pb2.SwitchServiceRegisterResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Register",
                service_name="metalstack.infra.v2.SwitchService",
                input=metalstack_dot_infra_dot_v2_dot_switch__pb2.SwitchServiceRegisterRequest,
                output=metalstack_dot_infra_dot_v2_dot_switch__pb2.SwitchServiceRegisterResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )


class SwitchServiceSync(Protocol):
    def register(self, request: metalstack_dot_infra_dot_v2_dot_switch__pb2.SwitchServiceRegisterRequest, ctx: RequestContext) -> metalstack_dot_infra_dot_v2_dot_switch__pb2.SwitchServiceRegisterResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")


class SwitchServiceWSGIApplication(ConnecpyWSGIApplication):
    def __init__(self, service: SwitchServiceSync, interceptors: Iterable[InterceptorSync]=(), read_max_bytes: int | None = None):
        super().__init__(
            endpoints={
                "/metalstack.infra.v2.SwitchService/Register": EndpointSync.unary(
                    method=MethodInfo(
                        name="Register",
                        service_name="metalstack.infra.v2.SwitchService",
                        input=metalstack_dot_infra_dot_v2_dot_switch__pb2.SwitchServiceRegisterRequest,
                        output=metalstack_dot_infra_dot_v2_dot_switch__pb2.SwitchServiceRegisterResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.register,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self):
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/metalstack.infra.v2.SwitchService"


class SwitchServiceClientSync(ConnecpyClientSync):
    def register(
        self,
        request: metalstack_dot_infra_dot_v2_dot_switch__pb2.SwitchServiceRegisterRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_infra_dot_v2_dot_switch__pb2.SwitchServiceRegisterResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Register",
                service_name="metalstack.infra.v2.SwitchService",
                input=metalstack_dot_infra_dot_v2_dot_switch__pb2.SwitchServiceRegisterRequest,
                output=metalstack_dot_infra_dot_v2_dot_switch__pb2.SwitchServiceRegisterResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )
