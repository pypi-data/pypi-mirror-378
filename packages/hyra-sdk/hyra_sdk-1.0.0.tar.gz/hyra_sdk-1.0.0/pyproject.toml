[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hyra-sdk"
version = "1.0.0"
description = "A comprehensive Python SDK for the Hyra decentralized task marketplace"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Hyra Network", email = "dev@hyra.network"}
]
maintainers = [
    {name = "Hyra Network", email = "dev@hyra.network"}
]
keywords = ["hyra", "blockchain", "ai", "tasks", "marketplace", "zkp", "zero-knowledge-proof"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "web3>=7.0.0",
    "python-dotenv>=1.0.0",
    "zkp-rust-client",
    "requests>=2.28.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "black",
    "flake8",
    "mypy",
]

[project.urls]
Homepage = "https://github.com/hyra-network/hyra-python-sdk"
Documentation = "https://docs.hyra.network"
Repository = "https://github.com/hyra-network/hyra-python-sdk"
"Bug Tracker" = "https://github.com/hyra-network/hyra-python-sdk/issues"
Discord = "https://discord.gg/hyra"

[project.scripts]
hyra-cli = "hyra_sdk.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
hyra_sdk = ["abis/*.json"]

[tool.setuptools.exclude-package-data]
"*" = [
    "*.pyc",
    "*.pyo", 
    "*.pyd",
    "__pycache__",
    "*.so",
    ".git*",
    ".env*",
    "venv",
    ".venv",
    "build",
    "dist",
    "*.egg-info",
    ".pytest_cache",
    ".mypy_cache",
    "*.log",
    "example.py",
    "setup.py",
    "tests",
    "test_*",
    "*.test",
    "*.spec"
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"