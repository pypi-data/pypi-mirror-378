[build-system]
build-backend = "pdm.backend"
requires = [
    "pdm-backend",
]

[project]
authors = [
    { name = "Kuaishou SDK Team", email = "support@kwaixiaodian.com" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business",
]
dependencies = [
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "orjson>=3.8.0",
    "cryptography>=41.0.0",
    "pendulum>=3.0.0",
]
description = "快手小店开放平台Python SDK - 全功能异步客户端库"
keywords = [
    "kuaishou",
    "ecommerce",
    "api",
    "sdk",
    "快手小店",
]
name = "kwaixiaodian"
readme = "README.md"
requires-python = ">=3.8"
version = "1.0.2"

[project.license]
text = "MIT"

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "pyright>=1.1.0",
    "pre-commit>=3.0.0",
    "types-requests",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.23.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "respx>=0.20.0",
    "httpx>=0.25.0",
]

[project.urls]
"Bug Tracker" = "https://github.com/AndersonBY/kwaixiaodian-python-sdk/issues"
Changelog = "https://github.com/AndersonBY/kwaixiaodian-python-sdk/blob/main/CHANGELOG.md"
Documentation = "https://kwaixiaodian-python-sdk.readthedocs.io"
Homepage = "https://github.com/AndersonBY/kwaixiaodian-python-sdk"
Repository = "https://github.com/AndersonBY/kwaixiaodian-python-sdk"

[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
dev = [
    "ruff>=0.1.0",
    "pyright>=1.1.0",
    "pre-commit>=3.0.0",
    "types-requests",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.23.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "respx>=0.20.0",
]

[tool.pdm.scripts]
build-docs = "mkdocs build"
clean = "rm -rf dist/ build/ *.egg-info/ .coverage htmlcov/ .pytest_cache/ .mypy_cache/ __pycache__/"
docs = "mkdocs serve"
format = "ruff format src tests examples"
lint = "ruff check src tests examples"
pre-commit = "pre-commit run --all-files"
test = "pytest tests/ -v --cov=src/kwaixiaodian --cov-report=html --cov-report=term"
test-fast = "pytest tests/ -v -x"
typecheck = "pyright src"

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
ignore = [
    "E501",
    "B008",
    "C901",
]
select = [
    "E",
    "W",
    "F",
    "I",
    "B",
    "C4",
    "UP",
    "RUF100",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401",
]
"tests/**/*" = [
    "B018",
    "B011",
    "B015",
]

[tool.pyright]
exclude = [
    "**/__pycache__",
    "**/.*",
    "fix_pyright_symlinks.py",
]
include = [
    "src",
    "tests",
    "examples",
]
pythonPlatform = "Linux"
pythonVersion = "3.10"
venv = ".venv"
venvPath = "."
useLibraryCodeForTypes = true
reportAssignmentType = "none"
reportCallIssue = "none"
reportDuplicateImport = "error"
reportGeneralTypeIssues = "none"
reportImportCycles = "error"
reportInvalidStringEscapeSequence = "error"
reportMissingImports = "error"
reportMissingTypeStubs = "none"
reportUnknownArgumentType = "none"
reportUnknownMemberType = "none"
reportUnknownParameterType = "none"
reportUnknownVariableType = "none"
reportUnusedClass = "warning"
reportUnusedFunction = "warning"
reportUnusedImport = "warning"
reportUnusedVariable = "warning"
typeCheckingMode = "basic"

[[tool.pyright.executionEnvironments]]
root = "."
pythonVersion = "3.10"
pythonPlatform = "Linux"
extraPaths = [
    "src",
]

[tool.pytest.ini_options]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src/kwaixiaodian",
    "--cov-report=term-missing",
    "--cov-fail-under=90",
]
asyncio_mode = "auto"
markers = [
    "unit: marks tests as unit tests (fast)",
    "integration: marks tests as integration tests (slow)",
    "network: marks tests that require network access",
]
minversion = "7.0"
pythonpath = [
    "src",
]
testpaths = [
    "tests",
]

[tool.coverage.run]
omit = [
    "*/tests/*",
    "*/test_*",
    "src/kwaixiaodian/http/client.py",
    "src/kwaixiaodian/client/services/*",
    "src/kwaixiaodian/auth/oauth.py",
    "src/kwaixiaodian/models/virtual.py",
]
source = [
    "src/kwaixiaodian",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
precision = 2
show_missing = true
