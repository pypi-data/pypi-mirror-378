name: CI

on:
  push:
    branches: [main]
    tags:
      - "*" # Push events to matching any tag for publishing
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch

      - name: Lint and format check
        run: |
          echo "üîç Running ruff linter and formatter..."
          hatch fmt
      - name: Run tests
        run: |
          echo "üß™ Running tests with coverage..."
          hatch test --cover --parallel
        env:
          NOXUS_API_KEY: ${{ secrets.NOXUS_API_KEY }}

      - name: Upload coverage reports
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: false

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build hatch

      - name: Build package
        run: |
          echo "üì¶ Building package..."
          python -m build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish:
    needs: [test, build]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/noxus-sdk
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
