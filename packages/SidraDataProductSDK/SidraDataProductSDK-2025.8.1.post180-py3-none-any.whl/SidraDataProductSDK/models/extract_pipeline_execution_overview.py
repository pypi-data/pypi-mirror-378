# coding: utf-8

"""
    Sidra App SDK

    Sidra App SDK  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: info@sidra.dev
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ExtractPipelineExecutionOverview(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'pipeline_run_id': 'str',
        'pipeline_execution_date': 'datetime',
        'pipeline_execution_status': 'str',
        'execution_details': 'str',
        'pending_entities': 'str',
        'run_start': 'datetime',
        'run_end': 'datetime',
        'run_duration_seconds': 'float',
        'error_details': 'str',
        'run_link': 'str'
    }

    attribute_map = {
        'pipeline_run_id': 'pipelineRunId',
        'pipeline_execution_date': 'pipelineExecutionDate',
        'pipeline_execution_status': 'pipelineExecutionStatus',
        'execution_details': 'executionDetails',
        'pending_entities': 'pendingEntities',
        'run_start': 'runStart',
        'run_end': 'runEnd',
        'run_duration_seconds': 'runDurationSeconds',
        'error_details': 'errorDetails',
        'run_link': 'runLink'
    }

    def __init__(self, pipeline_run_id=None, pipeline_execution_date=None, pipeline_execution_status=None, execution_details=None, pending_entities=None, run_start=None, run_end=None, run_duration_seconds=None, error_details=None, run_link=None):  # noqa: E501
        """ExtractPipelineExecutionOverview - a model defined in Swagger"""  # noqa: E501
        self._pipeline_run_id = None
        self._pipeline_execution_date = None
        self._pipeline_execution_status = None
        self._execution_details = None
        self._pending_entities = None
        self._run_start = None
        self._run_end = None
        self._run_duration_seconds = None
        self._error_details = None
        self._run_link = None
        self.discriminator = None
        if pipeline_run_id is not None:
            self.pipeline_run_id = pipeline_run_id
        if pipeline_execution_date is not None:
            self.pipeline_execution_date = pipeline_execution_date
        if pipeline_execution_status is not None:
            self.pipeline_execution_status = pipeline_execution_status
        if execution_details is not None:
            self.execution_details = execution_details
        if pending_entities is not None:
            self.pending_entities = pending_entities
        if run_start is not None:
            self.run_start = run_start
        if run_end is not None:
            self.run_end = run_end
        if run_duration_seconds is not None:
            self.run_duration_seconds = run_duration_seconds
        if error_details is not None:
            self.error_details = error_details
        if run_link is not None:
            self.run_link = run_link

    @property
    def pipeline_run_id(self):
        """Gets the pipeline_run_id of this ExtractPipelineExecutionOverview.  # noqa: E501

        Pipeline run Id  # noqa: E501

        :return: The pipeline_run_id of this ExtractPipelineExecutionOverview.  # noqa: E501
        :rtype: str
        """
        return self._pipeline_run_id

    @pipeline_run_id.setter
    def pipeline_run_id(self, pipeline_run_id):
        """Sets the pipeline_run_id of this ExtractPipelineExecutionOverview.

        Pipeline run Id  # noqa: E501

        :param pipeline_run_id: The pipeline_run_id of this ExtractPipelineExecutionOverview.  # noqa: E501
        :type: str
        """

        self._pipeline_run_id = pipeline_run_id

    @property
    def pipeline_execution_date(self):
        """Gets the pipeline_execution_date of this ExtractPipelineExecutionOverview.  # noqa: E501

        Pipeline execution date (start time)  # noqa: E501

        :return: The pipeline_execution_date of this ExtractPipelineExecutionOverview.  # noqa: E501
        :rtype: datetime
        """
        return self._pipeline_execution_date

    @pipeline_execution_date.setter
    def pipeline_execution_date(self, pipeline_execution_date):
        """Sets the pipeline_execution_date of this ExtractPipelineExecutionOverview.

        Pipeline execution date (start time)  # noqa: E501

        :param pipeline_execution_date: The pipeline_execution_date of this ExtractPipelineExecutionOverview.  # noqa: E501
        :type: datetime
        """

        self._pipeline_execution_date = pipeline_execution_date

    @property
    def pipeline_execution_status(self):
        """Gets the pipeline_execution_status of this ExtractPipelineExecutionOverview.  # noqa: E501

        Pipeline execution status  # noqa: E501

        :return: The pipeline_execution_status of this ExtractPipelineExecutionOverview.  # noqa: E501
        :rtype: str
        """
        return self._pipeline_execution_status

    @pipeline_execution_status.setter
    def pipeline_execution_status(self, pipeline_execution_status):
        """Sets the pipeline_execution_status of this ExtractPipelineExecutionOverview.

        Pipeline execution status  # noqa: E501

        :param pipeline_execution_status: The pipeline_execution_status of this ExtractPipelineExecutionOverview.  # noqa: E501
        :type: str
        """

        self._pipeline_execution_status = pipeline_execution_status

    @property
    def execution_details(self):
        """Gets the execution_details of this ExtractPipelineExecutionOverview.  # noqa: E501

        Pipeline execution details  # noqa: E501

        :return: The execution_details of this ExtractPipelineExecutionOverview.  # noqa: E501
        :rtype: str
        """
        return self._execution_details

    @execution_details.setter
    def execution_details(self, execution_details):
        """Sets the execution_details of this ExtractPipelineExecutionOverview.

        Pipeline execution details  # noqa: E501

        :param execution_details: The execution_details of this ExtractPipelineExecutionOverview.  # noqa: E501
        :type: str
        """

        self._execution_details = execution_details

    @property
    def pending_entities(self):
        """Gets the pending_entities of this ExtractPipelineExecutionOverview.  # noqa: E501

        Entities not loaded yet  # noqa: E501

        :return: The pending_entities of this ExtractPipelineExecutionOverview.  # noqa: E501
        :rtype: str
        """
        return self._pending_entities

    @pending_entities.setter
    def pending_entities(self, pending_entities):
        """Sets the pending_entities of this ExtractPipelineExecutionOverview.

        Entities not loaded yet  # noqa: E501

        :param pending_entities: The pending_entities of this ExtractPipelineExecutionOverview.  # noqa: E501
        :type: str
        """

        self._pending_entities = pending_entities

    @property
    def run_start(self):
        """Gets the run_start of this ExtractPipelineExecutionOverview.  # noqa: E501

        Pipeline execution start time  # noqa: E501

        :return: The run_start of this ExtractPipelineExecutionOverview.  # noqa: E501
        :rtype: datetime
        """
        return self._run_start

    @run_start.setter
    def run_start(self, run_start):
        """Sets the run_start of this ExtractPipelineExecutionOverview.

        Pipeline execution start time  # noqa: E501

        :param run_start: The run_start of this ExtractPipelineExecutionOverview.  # noqa: E501
        :type: datetime
        """

        self._run_start = run_start

    @property
    def run_end(self):
        """Gets the run_end of this ExtractPipelineExecutionOverview.  # noqa: E501

        Pipeline execution finish time  # noqa: E501

        :return: The run_end of this ExtractPipelineExecutionOverview.  # noqa: E501
        :rtype: datetime
        """
        return self._run_end

    @run_end.setter
    def run_end(self, run_end):
        """Sets the run_end of this ExtractPipelineExecutionOverview.

        Pipeline execution finish time  # noqa: E501

        :param run_end: The run_end of this ExtractPipelineExecutionOverview.  # noqa: E501
        :type: datetime
        """

        self._run_end = run_end

    @property
    def run_duration_seconds(self):
        """Gets the run_duration_seconds of this ExtractPipelineExecutionOverview.  # noqa: E501

        Pipeline execution time in seconds  # noqa: E501

        :return: The run_duration_seconds of this ExtractPipelineExecutionOverview.  # noqa: E501
        :rtype: float
        """
        return self._run_duration_seconds

    @run_duration_seconds.setter
    def run_duration_seconds(self, run_duration_seconds):
        """Sets the run_duration_seconds of this ExtractPipelineExecutionOverview.

        Pipeline execution time in seconds  # noqa: E501

        :param run_duration_seconds: The run_duration_seconds of this ExtractPipelineExecutionOverview.  # noqa: E501
        :type: float
        """

        self._run_duration_seconds = run_duration_seconds

    @property
    def error_details(self):
        """Gets the error_details of this ExtractPipelineExecutionOverview.  # noqa: E501

        Pipeline execution error message  # noqa: E501

        :return: The error_details of this ExtractPipelineExecutionOverview.  # noqa: E501
        :rtype: str
        """
        return self._error_details

    @error_details.setter
    def error_details(self, error_details):
        """Sets the error_details of this ExtractPipelineExecutionOverview.

        Pipeline execution error message  # noqa: E501

        :param error_details: The error_details of this ExtractPipelineExecutionOverview.  # noqa: E501
        :type: str
        """

        self._error_details = error_details

    @property
    def run_link(self):
        """Gets the run_link of this ExtractPipelineExecutionOverview.  # noqa: E501

        Pipeline run execution link  # noqa: E501

        :return: The run_link of this ExtractPipelineExecutionOverview.  # noqa: E501
        :rtype: str
        """
        return self._run_link

    @run_link.setter
    def run_link(self, run_link):
        """Sets the run_link of this ExtractPipelineExecutionOverview.

        Pipeline run execution link  # noqa: E501

        :param run_link: The run_link of this ExtractPipelineExecutionOverview.  # noqa: E501
        :type: str
        """

        self._run_link = run_link

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ExtractPipelineExecutionOverview, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ExtractPipelineExecutionOverview):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
