# coding: utf-8

"""
    Sidra App SDK

    Sidra App SDK  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: info@sidra.dev
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class RelatedEntitiesOverview(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'provider_id': 'int',
        'provider_name': 'str',
        'entity_id': 'int',
        'entity_name': 'str',
        'dsu_name': 'str',
        'create_date': 'datetime',
        'last_load_date': 'datetime'
    }

    attribute_map = {
        'provider_id': 'providerId',
        'provider_name': 'providerName',
        'entity_id': 'entityId',
        'entity_name': 'entityName',
        'dsu_name': 'dsuName',
        'create_date': 'createDate',
        'last_load_date': 'lastLoadDate'
    }

    def __init__(self, provider_id=None, provider_name=None, entity_id=None, entity_name=None, dsu_name=None, create_date=None, last_load_date=None):  # noqa: E501
        """RelatedEntitiesOverview - a model defined in Swagger"""  # noqa: E501
        self._provider_id = None
        self._provider_name = None
        self._entity_id = None
        self._entity_name = None
        self._dsu_name = None
        self._create_date = None
        self._last_load_date = None
        self.discriminator = None
        if provider_id is not None:
            self.provider_id = provider_id
        if provider_name is not None:
            self.provider_name = provider_name
        if entity_id is not None:
            self.entity_id = entity_id
        if entity_name is not None:
            self.entity_name = entity_name
        if dsu_name is not None:
            self.dsu_name = dsu_name
        if create_date is not None:
            self.create_date = create_date
        if last_load_date is not None:
            self.last_load_date = last_load_date

    @property
    def provider_id(self):
        """Gets the provider_id of this RelatedEntitiesOverview.  # noqa: E501


        :return: The provider_id of this RelatedEntitiesOverview.  # noqa: E501
        :rtype: int
        """
        return self._provider_id

    @provider_id.setter
    def provider_id(self, provider_id):
        """Sets the provider_id of this RelatedEntitiesOverview.


        :param provider_id: The provider_id of this RelatedEntitiesOverview.  # noqa: E501
        :type: int
        """

        self._provider_id = provider_id

    @property
    def provider_name(self):
        """Gets the provider_name of this RelatedEntitiesOverview.  # noqa: E501


        :return: The provider_name of this RelatedEntitiesOverview.  # noqa: E501
        :rtype: str
        """
        return self._provider_name

    @provider_name.setter
    def provider_name(self, provider_name):
        """Sets the provider_name of this RelatedEntitiesOverview.


        :param provider_name: The provider_name of this RelatedEntitiesOverview.  # noqa: E501
        :type: str
        """

        self._provider_name = provider_name

    @property
    def entity_id(self):
        """Gets the entity_id of this RelatedEntitiesOverview.  # noqa: E501


        :return: The entity_id of this RelatedEntitiesOverview.  # noqa: E501
        :rtype: int
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this RelatedEntitiesOverview.


        :param entity_id: The entity_id of this RelatedEntitiesOverview.  # noqa: E501
        :type: int
        """

        self._entity_id = entity_id

    @property
    def entity_name(self):
        """Gets the entity_name of this RelatedEntitiesOverview.  # noqa: E501


        :return: The entity_name of this RelatedEntitiesOverview.  # noqa: E501
        :rtype: str
        """
        return self._entity_name

    @entity_name.setter
    def entity_name(self, entity_name):
        """Sets the entity_name of this RelatedEntitiesOverview.


        :param entity_name: The entity_name of this RelatedEntitiesOverview.  # noqa: E501
        :type: str
        """

        self._entity_name = entity_name

    @property
    def dsu_name(self):
        """Gets the dsu_name of this RelatedEntitiesOverview.  # noqa: E501


        :return: The dsu_name of this RelatedEntitiesOverview.  # noqa: E501
        :rtype: str
        """
        return self._dsu_name

    @dsu_name.setter
    def dsu_name(self, dsu_name):
        """Sets the dsu_name of this RelatedEntitiesOverview.


        :param dsu_name: The dsu_name of this RelatedEntitiesOverview.  # noqa: E501
        :type: str
        """

        self._dsu_name = dsu_name

    @property
    def create_date(self):
        """Gets the create_date of this RelatedEntitiesOverview.  # noqa: E501


        :return: The create_date of this RelatedEntitiesOverview.  # noqa: E501
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this RelatedEntitiesOverview.


        :param create_date: The create_date of this RelatedEntitiesOverview.  # noqa: E501
        :type: datetime
        """

        self._create_date = create_date

    @property
    def last_load_date(self):
        """Gets the last_load_date of this RelatedEntitiesOverview.  # noqa: E501


        :return: The last_load_date of this RelatedEntitiesOverview.  # noqa: E501
        :rtype: datetime
        """
        return self._last_load_date

    @last_load_date.setter
    def last_load_date(self, last_load_date):
        """Sets the last_load_date of this RelatedEntitiesOverview.


        :param last_load_date: The last_load_date of this RelatedEntitiesOverview.  # noqa: E501
        :type: datetime
        """

        self._last_load_date = last_load_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(RelatedEntitiesOverview, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RelatedEntitiesOverview):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
