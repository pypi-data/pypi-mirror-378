import{_ as o,l as e,K as s,d as p,L as m}from"./mermaid.core-DzthE35Y.js";import{p as n}from"./treemap-75Q7IDZK-CdwDwwsz.js";import"./index-C7CoaNFb.js";import"./transform-D9VCJYws.js";import"./timer-Bqd5yn_a.js";import"./step-BwsUM5iJ.js";import"./isEmpty-D-4c7sMv.js";import"./_baseEach-CvTX9w0Y.js";import"./_baseUniq-BKktIGQ1.js";import"./min-BBO3-1Hg.js";import"./_baseMap-CtlwA90f.js";import"./clone-BMP0PsTa.js";import"./_createAggregator-C5CVY-0t.js";var d={parse:o(async r=>{const t=await n("info",r);e.debug(t)},"parse")},g={version:m.version+""},v={parser:d,db:{getVersion:o(()=>g.version,"getVersion")},renderer:{draw:o((r,t,i)=>{e.debug(`rendering info diagram
`+r);const a=s(t);p(a,100,400,!0),a.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${i}`)},"draw")}};export{v as diagram};
