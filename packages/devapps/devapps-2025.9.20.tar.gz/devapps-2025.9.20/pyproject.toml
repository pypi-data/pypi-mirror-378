[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "devapps"
version = "2025.09.20"
description = "Apps - End to End."
authors = [{ name = "Gunther Klessinger", email = "g_kle_ss_ing_er@gmx.de" }]
license = { text = "BSD" }
readme = "README.md"
keywords = []
requires-python = ">=3.9,<4.0"
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

dependencies = [
  "toml",
  "absl-py",
  "jsondiff",
  "rich",
  "structlog>=24.1.0",
  "inflection",
  "requests",
  "pycond",
]

[dependency-groups]
dev = [
  "markdown-include>=0.8.1",
  "pytest",
  "pytest-cov",
  "mypy",
  "pyright",
  "docutools>=2025.08.03",
]

[project.urls]
Homepage = "https://axgkl.github.io/devapps"
Repository = "https://github.com/AXGKl/devapps"
packagehome = "https://pypi.com/"
discusshome = "https://join.skype.com/"

[project.scripts]
myapp = "devapp.tools.plugin:main"
ops = "devapp.tools.plugin:main"
app = "devapp.tools.plugin:main"
dev = "devapp.tools.plugin:main"
fui = "interactive.cli:main"

[tool.hatch.build.targets.wheel]
packages = [
  "src/ax",
  "src/devapp",
  "src/mdvl",
  "src/structlogging",
  "src/theming",
  "src/tree_builder",
]

[tool.pyright]
# thats where my dev version for dt is - should not interfere w/o that:
extraPaths = ["../docutools/src", "./src/devapp/plugins/"]

# Exclude problematic directories entirely
exclude = [
  "**/arch/**",
  "**/backup/**",
  "**/tests/**",
  "arch",
  "backup",
  ".venv/**",
  "**/.venv/**",
  "**/site-packages/**",
  "**/node_modules/**",
  "**/__pycache__/**",
  "**/.git/**",
  "**/ops_devapp/**",
  "**/camel_snake/**",
  "src/devapp/components/gitlab_runner.py",
  "src/interactive/old_pipeline.py",
  "src/devapp/utils/vault.py",
]

# Make pyright completely silent
typeCheckingMode = "off"
reportGeneralTypeIssues = "none"
reportPropertyTypeMismatch = "none"
reportFunctionMemberAccess = "none"
reportMissingImports = "none"
reportMissingModuleSource = "none"
reportMissingTypeStubs = "none"
reportImportCycles = "none"
reportUnusedImport = "none"
reportUnusedClass = "none"
reportUnusedFunction = "none"
reportUnusedVariable = "none"
reportDuplicateImport = "none"
reportOptionalSubscript = "none"
reportOptionalMemberAccess = "none"
reportOptionalCall = "none"
reportOptionalIterable = "none"
reportOptionalContextManager = "none"
reportOptionalOperand = "none"
reportUndefinedVariable = "warning"
reportTypedDictNotRequiredAccess = "none"
reportPrivateUsage = "none"
reportPrivateImportUsage = "none"
reportConstantRedefinition = "none"
reportIncompatibleMethodOverride = "none"
reportIncompatibleVariableOverride = "none"
reportOverlappingOverloads = "none"
reportUninitializedInstanceVariable = "none"
reportInvalidStringEscapeSequence = "none"
reportUnknownParameterType = "none"
reportUnknownArgumentType = "none"
reportUnknownLambdaType = "none"
reportUnknownVariableType = "none"
reportUnknownMemberType = "none"
reportMissingParameterType = "none"
reportMissingTypeArgument = "none"
reportInvalidTypeVarUse = "none"
reportCallInDefaultInitializer = "none"
reportUnnecessaryIsInstance = "none"
reportUnnecessaryCast = "none"
reportUnnecessaryComparison = "none"
reportUnnecessaryContains = "none"
reportAssertAlwaysTrue = "none"
reportSelfClsParameterName = false
reportImplicitStringConcatenation = "none"
reportInvalidStubStatement = "none"
reportIncompleteStub = "none"
reportUnsupportedDunderAll = "none"
reportUnusedCoroutine = "none"
reportInvalidTypeForm = "none"
reportAttributeAccessIssue = "none"
reportArgumentType = "none"
reportReturnType = "none"
reportAssignmentType = "none"
reportVariableUnused = "none"
reportFunctionNotUsed = "none"
reportClassNotUsed = "none"
strictListInference = false
strictDictionaryInference = false
strictSetInference = false
strictParameterNoneValue = false
enableTypeIgnoreComments = true
useLibraryCodeForTypes = false


[tool.isort]
line_length = 90
not_skip = "__init__.py"
multi_line_output = 3
force_single_line = false
balanced_wrapping = true
default_section = "THIRDPARTY"
known_first_party = "devapp"
include_trailing_comma = true

[tool.ruff]
# https://docs.astral.sh/ruff/rules/
line-length = 90

[tool.ruff.lint]
extend-select = ["Q"]
select = ["E", "F", "B"] # Enable flake8-bugbear (`B`) rules.
ignore = [
  "E501", # Never enforce `E501` (line length violations).
  "E741", # short var names
  "E731", # Do not assign a lambda expression, use a def
]
fixable = ["ALL"]
unfixable = [
  "B",    # Avoid trying to fix flake8-bugbear (`B`) violations.
  "F401", # Unused Import
  "F841", # variable assigned but not used 
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.ruff.format]
# Prefer single quotes over double quotes
quote-style = "single"

[tool.pytest.ini_options]
# Add any test paths
testpaths = ["tests"]
# Configure minimum version
minversion = "6.0"

# [tool.uv.sources]
# docutools = { path = "/Users/gk/repos/gh/Axiros/docutools", editable = true }
# [tool.uv.sources]
# docutools = { path = "../../Axiros/docutools/dist/docutools-2025.8.1.tar.gz" }

