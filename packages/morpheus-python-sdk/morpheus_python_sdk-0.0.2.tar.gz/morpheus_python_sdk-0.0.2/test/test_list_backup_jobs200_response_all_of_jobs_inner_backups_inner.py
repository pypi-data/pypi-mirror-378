# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.models.list_backup_jobs200_response_all_of_jobs_inner_backups_inner import ListBackupJobs200ResponseAllOfJobsInnerBackupsInner

class TestListBackupJobs200ResponseAllOfJobsInnerBackupsInner(unittest.TestCase):
    """ListBackupJobs200ResponseAllOfJobsInnerBackupsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListBackupJobs200ResponseAllOfJobsInnerBackupsInner:
        """Test ListBackupJobs200ResponseAllOfJobsInnerBackupsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListBackupJobs200ResponseAllOfJobsInnerBackupsInner`
        """
        model = ListBackupJobs200ResponseAllOfJobsInnerBackupsInner()
        if include_optional:
            return ListBackupJobs200ResponseAllOfJobsInnerBackupsInner(
                id = 56,
                name = ''
            )
        else:
            return ListBackupJobs200ResponseAllOfJobsInnerBackupsInner(
        )
        """

    def testListBackupJobs200ResponseAllOfJobsInnerBackupsInner(self):
        """Test ListBackupJobs200ResponseAllOfJobsInnerBackupsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
