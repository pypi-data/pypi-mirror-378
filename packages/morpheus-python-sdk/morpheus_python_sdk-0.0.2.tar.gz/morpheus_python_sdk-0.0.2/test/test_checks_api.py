# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.api.checks_api import ChecksApi


class TestChecksApi(unittest.TestCase):
    """ChecksApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ChecksApi()

    def tearDown(self) -> None:
        pass

    def test_add_check_apps(self) -> None:
        """Test case for add_check_apps

        Create a New Check App
        """
        pass

    def test_add_check_groups(self) -> None:
        """Test case for add_check_groups

        Create a New Check Group
        """
        pass

    def test_add_checks(self) -> None:
        """Test case for add_checks

        Create a New Check
        """
        pass

    def test_delete_check_apps(self) -> None:
        """Test case for delete_check_apps

        Delete a Specific Check App
        """
        pass

    def test_delete_check_groups(self) -> None:
        """Test case for delete_check_groups

        Delete a Specific Check Group
        """
        pass

    def test_delete_checks(self) -> None:
        """Test case for delete_checks

        Delete a Specific Check
        """
        pass

    def test_get_check_apps(self) -> None:
        """Test case for get_check_apps

        Get a Specific Check App
        """
        pass

    def test_get_check_groups(self) -> None:
        """Test case for get_check_groups

        Get a Specific Check Group
        """
        pass

    def test_get_check_types(self) -> None:
        """Test case for get_check_types

        Get a Specific Check Type
        """
        pass

    def test_get_checks(self) -> None:
        """Test case for get_checks

        Get a Specific Check
        """
        pass

    def test_list_check_apps(self) -> None:
        """Test case for list_check_apps

        List All Check Apps
        """
        pass

    def test_list_check_groups(self) -> None:
        """Test case for list_check_groups

        List All Check Groups
        """
        pass

    def test_list_check_types(self) -> None:
        """Test case for list_check_types

        List All Check Types
        """
        pass

    def test_list_checks(self) -> None:
        """Test case for list_checks

        List All Checks
        """
        pass

    def test_update_check_apps(self) -> None:
        """Test case for update_check_apps

        Update Check App
        """
        pass

    def test_update_check_groups(self) -> None:
        """Test case for update_check_groups

        Update Check Group
        """
        pass

    def test_update_checks(self) -> None:
        """Test case for update_checks

        Updates a Check
        """
        pass

    def test_update_mute_all_check_apps(self) -> None:
        """Test case for update_mute_all_check_apps

        Mute All Check Apps
        """
        pass

    def test_update_mute_all_check_groups(self) -> None:
        """Test case for update_mute_all_check_groups

        Mute All Check Groups
        """
        pass

    def test_update_mute_all_checks(self) -> None:
        """Test case for update_mute_all_checks

        Mute All Checks
        """
        pass

    def test_update_mute_check_apps(self) -> None:
        """Test case for update_mute_check_apps

        Mute Check App
        """
        pass

    def test_update_mute_check_groups(self) -> None:
        """Test case for update_mute_check_groups

        Mute Check Group
        """
        pass

    def test_update_mute_checks(self) -> None:
        """Test case for update_mute_checks

        Mute Check
        """
        pass


if __name__ == '__main__':
    unittest.main()
