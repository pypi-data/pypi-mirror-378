# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.models.snapshots_instance200_response_snapshots_inner_snapshot_files_inner import SnapshotsInstance200ResponseSnapshotsInnerSnapshotFilesInner

class TestSnapshotsInstance200ResponseSnapshotsInnerSnapshotFilesInner(unittest.TestCase):
    """SnapshotsInstance200ResponseSnapshotsInnerSnapshotFilesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SnapshotsInstance200ResponseSnapshotsInnerSnapshotFilesInner:
        """Test SnapshotsInstance200ResponseSnapshotsInnerSnapshotFilesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SnapshotsInstance200ResponseSnapshotsInnerSnapshotFilesInner`
        """
        model = SnapshotsInstance200ResponseSnapshotsInnerSnapshotFilesInner()
        if include_optional:
            return SnapshotsInstance200ResponseSnapshotsInnerSnapshotFilesInner(
                id = 56,
                name = '',
                type = '',
                external_id = '',
                path = '',
                export_path = '',
                volume = morpheus.models.snapshots_instance_200_response_snapshots_inner_snapshot_files_inner_volume.snapshotsInstance_200_response_snapshots_inner_snapshotFiles_inner_volume(
                    id = 56, ),
                disk_index = 56
            )
        else:
            return SnapshotsInstance200ResponseSnapshotsInnerSnapshotFilesInner(
        )
        """

    def testSnapshotsInstance200ResponseSnapshotsInnerSnapshotFilesInner(self):
        """Test SnapshotsInstance200ResponseSnapshotsInnerSnapshotFilesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
