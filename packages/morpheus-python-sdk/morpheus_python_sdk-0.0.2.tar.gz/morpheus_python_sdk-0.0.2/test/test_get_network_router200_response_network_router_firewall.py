# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.models.get_network_router200_response_network_router_firewall import GetNetworkRouter200ResponseNetworkRouterFirewall

class TestGetNetworkRouter200ResponseNetworkRouterFirewall(unittest.TestCase):
    """GetNetworkRouter200ResponseNetworkRouterFirewall unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetNetworkRouter200ResponseNetworkRouterFirewall:
        """Test GetNetworkRouter200ResponseNetworkRouterFirewall
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetNetworkRouter200ResponseNetworkRouterFirewall`
        """
        model = GetNetworkRouter200ResponseNetworkRouterFirewall()
        if include_optional:
            return GetNetworkRouter200ResponseNetworkRouterFirewall(
                enabled = True,
                version = '',
                default_policy = '',
                var_global = '',
                rule_groups = [
                    morpheus.models.get_network_router_200_response_network_router_firewall_rule_groups_inner.getNetworkRouter_200_response_networkRouter_firewall_ruleGroups_inner(
                        id = 56, 
                        name = '', 
                        description = '', 
                        external_id = '', 
                        iac_id = '', 
                        zone = '', 
                        zone_pool = '', 
                        status = '', 
                        priority = 56, 
                        group_layer = '', 
                        rules = [
                            morpheus.models.get_network_router_200_response_network_router_firewall_rule_groups_inner_rules_inner.getNetworkRouter_200_response_networkRouter_firewall_ruleGroups_inner_rules_inner(
                                id = 56, 
                                name = '', 
                                code = '', 
                                enabled = True, 
                                group_name = '', 
                                direction = '', 
                                rule_type = '', 
                                policy = '', 
                                source = [
                                    ''
                                    ], 
                                source_type = '', 
                                destination = [
                                    ''
                                    ], 
                                destination_type = '', 
                                profiles = [
                                    ''
                                    ], 
                                protocol = '', 
                                application = '', 
                                application_type = '', 
                                port_range = '', 
                                source_port_range = '', 
                                destination_port_range = '', 
                                source_group = '', 
                                source_tier = '', 
                                applications = [
                                    morpheus.models.get_alerts_200_response_all_of_check_groups_inner_instance.getAlerts_200_response_allOf_checkGroups_inner_instance(
                                        id = 56, 
                                        name = '', )
                                    ], )
                            ], )
                    ]
            )
        else:
            return GetNetworkRouter200ResponseNetworkRouterFirewall(
        )
        """

    def testGetNetworkRouter200ResponseNetworkRouterFirewall(self):
        """Test GetNetworkRouter200ResponseNetworkRouterFirewall"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
