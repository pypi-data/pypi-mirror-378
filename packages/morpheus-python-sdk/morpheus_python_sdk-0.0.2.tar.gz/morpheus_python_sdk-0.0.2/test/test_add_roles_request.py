# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.models.add_roles_request import AddRolesRequest

class TestAddRolesRequest(unittest.TestCase):
    """AddRolesRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddRolesRequest:
        """Test AddRolesRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddRolesRequest`
        """
        model = AddRolesRequest()
        if include_optional:
            return AddRolesRequest(
                role = morpheus.models.add_roles_request_role.addRoles_request_role(
                    authority = '', 
                    description = '', 
                    landing_url = '', 
                    role_type = 'user', 
                    base_role_id = 56, 
                    multitenant = True, 
                    multitenant_locked = True, 
                    default_persona = 'standard', 
                    feature_permissions = [
                        morpheus.models.add_roles_request_role_feature_permissions_inner.addRoles_request_role_featurePermissions_inner(
                            code = 'account-usage', 
                            access = 'full', )
                        ], 
                    global_site_access = 'default', 
                    sites = [
                        morpheus.models.add_roles_request_role_sites_inner.addRoles_request_role_sites_inner(
                            id = 56, 
                            access = 'default', )
                        ], 
                    global_zone_access = 'default', 
                    zones = [
                        morpheus.models.add_roles_request_role_zones_inner.addRoles_request_role_zones_inner(
                            id = 56, 
                            access = 'default', )
                        ], 
                    global_instance_type_access = 'full', 
                    instance_type_permissions = [
                        morpheus.models.add_roles_request_role_instance_type_permissions_inner.addRoles_request_role_instanceTypePermissions_inner(
                            id = 56, 
                            access = 'default', )
                        ], 
                    global_app_template_access = 'full', 
                    app_template_permissions = [
                        morpheus.models.add_roles_request_role_app_template_permissions_inner.addRoles_request_role_appTemplatePermissions_inner(
                            id = 56, 
                            access = 'default', )
                        ], 
                    global_catalog_item_type_access = 'full', 
                    catalog_item_type_permissions = [
                        morpheus.models.add_roles_request_role_catalog_item_type_permissions_inner.addRoles_request_role_catalogItemTypePermissions_inner(
                            id = 56, 
                            access = 'default', )
                        ], 
                    global_persona_access = 'full', 
                    persona_permissions = [
                        morpheus.models.add_roles_request_role_persona_permissions_inner.addRoles_request_role_personaPermissions_inner(
                            code = 'standard', 
                            access = 'default', )
                        ], 
                    global_vdi_pool_access = 'full', 
                    vdi_pool_permissions = [
                        morpheus.models.add_roles_request_role_vdi_pool_permissions_inner.addRoles_request_role_vdiPoolPermissions_inner(
                            id = 56, 
                            access = 'default', )
                        ], 
                    global_report_type_access = 'full', 
                    report_type_permissions = [
                        morpheus.models.add_roles_request_role_report_type_permissions_inner.addRoles_request_role_reportTypePermissions_inner(
                            code = '', 
                            access = 'default', )
                        ], 
                    global_task_access = 'full', 
                    task_permissions = [
                        morpheus.models.add_roles_request_role_task_permissions_inner.addRoles_request_role_taskPermissions_inner(
                            id = 56, 
                            access = 'default', )
                        ], 
                    global_task_set_access = 'full', 
                    task_set_permissions = [
                        morpheus.models.add_roles_request_role_task_set_permissions_inner.addRoles_request_role_taskSetPermissions_inner(
                            id = 56, 
                            access = 'default', )
                        ], 
                    owner = 56, )
            )
        else:
            return AddRolesRequest(
                role = morpheus.models.add_roles_request_role.addRoles_request_role(
                    authority = '', 
                    description = '', 
                    landing_url = '', 
                    role_type = 'user', 
                    base_role_id = 56, 
                    multitenant = True, 
                    multitenant_locked = True, 
                    default_persona = 'standard', 
                    feature_permissions = [
                        morpheus.models.add_roles_request_role_feature_permissions_inner.addRoles_request_role_featurePermissions_inner(
                            code = 'account-usage', 
                            access = 'full', )
                        ], 
                    global_site_access = 'default', 
                    sites = [
                        morpheus.models.add_roles_request_role_sites_inner.addRoles_request_role_sites_inner(
                            id = 56, 
                            access = 'default', )
                        ], 
                    global_zone_access = 'default', 
                    zones = [
                        morpheus.models.add_roles_request_role_zones_inner.addRoles_request_role_zones_inner(
                            id = 56, 
                            access = 'default', )
                        ], 
                    global_instance_type_access = 'full', 
                    instance_type_permissions = [
                        morpheus.models.add_roles_request_role_instance_type_permissions_inner.addRoles_request_role_instanceTypePermissions_inner(
                            id = 56, 
                            access = 'default', )
                        ], 
                    global_app_template_access = 'full', 
                    app_template_permissions = [
                        morpheus.models.add_roles_request_role_app_template_permissions_inner.addRoles_request_role_appTemplatePermissions_inner(
                            id = 56, 
                            access = 'default', )
                        ], 
                    global_catalog_item_type_access = 'full', 
                    catalog_item_type_permissions = [
                        morpheus.models.add_roles_request_role_catalog_item_type_permissions_inner.addRoles_request_role_catalogItemTypePermissions_inner(
                            id = 56, 
                            access = 'default', )
                        ], 
                    global_persona_access = 'full', 
                    persona_permissions = [
                        morpheus.models.add_roles_request_role_persona_permissions_inner.addRoles_request_role_personaPermissions_inner(
                            code = 'standard', 
                            access = 'default', )
                        ], 
                    global_vdi_pool_access = 'full', 
                    vdi_pool_permissions = [
                        morpheus.models.add_roles_request_role_vdi_pool_permissions_inner.addRoles_request_role_vdiPoolPermissions_inner(
                            id = 56, 
                            access = 'default', )
                        ], 
                    global_report_type_access = 'full', 
                    report_type_permissions = [
                        morpheus.models.add_roles_request_role_report_type_permissions_inner.addRoles_request_role_reportTypePermissions_inner(
                            code = '', 
                            access = 'default', )
                        ], 
                    global_task_access = 'full', 
                    task_permissions = [
                        morpheus.models.add_roles_request_role_task_permissions_inner.addRoles_request_role_taskPermissions_inner(
                            id = 56, 
                            access = 'default', )
                        ], 
                    global_task_set_access = 'full', 
                    task_set_permissions = [
                        morpheus.models.add_roles_request_role_task_set_permissions_inner.addRoles_request_role_taskSetPermissions_inner(
                            id = 56, 
                            access = 'default', )
                        ], 
                    owner = 56, ),
        )
        """

    def testAddRolesRequest(self):
        """Test AddRolesRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
