# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.models.list_clouds200_response_all_of_zones_inner_stats_server_counts import ListClouds200ResponseAllOfZonesInnerStatsServerCounts

class TestListClouds200ResponseAllOfZonesInnerStatsServerCounts(unittest.TestCase):
    """ListClouds200ResponseAllOfZonesInnerStatsServerCounts unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListClouds200ResponseAllOfZonesInnerStatsServerCounts:
        """Test ListClouds200ResponseAllOfZonesInnerStatsServerCounts
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListClouds200ResponseAllOfZonesInnerStatsServerCounts`
        """
        model = ListClouds200ResponseAllOfZonesInnerStatsServerCounts()
        if include_optional:
            return ListClouds200ResponseAllOfZonesInnerStatsServerCounts(
                all = 56,
                host = 56,
                hypervisor = 56,
                container_host = 56,
                vm = 56,
                baremetal = 56,
                unmanaged = 56
            )
        else:
            return ListClouds200ResponseAllOfZonesInnerStatsServerCounts(
        )
        """

    def testListClouds200ResponseAllOfZonesInnerStatsServerCounts(self):
        """Test ListClouds200ResponseAllOfZonesInnerStatsServerCounts"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
