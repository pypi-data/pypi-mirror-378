# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.models.list_clouds200_response_all_of_zones_inner_config_any_of3 import ListClouds200ResponseAllOfZonesInnerConfigAnyOf3

class TestListClouds200ResponseAllOfZonesInnerConfigAnyOf3(unittest.TestCase):
    """ListClouds200ResponseAllOfZonesInnerConfigAnyOf3 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListClouds200ResponseAllOfZonesInnerConfigAnyOf3:
        """Test ListClouds200ResponseAllOfZonesInnerConfigAnyOf3
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListClouds200ResponseAllOfZonesInnerConfigAnyOf3`
        """
        model = ListClouds200ResponseAllOfZonesInnerConfigAnyOf3()
        if include_optional:
            return ListClouds200ResponseAllOfZonesInnerConfigAnyOf3(
                private_key = '',
                client_email = '',
                project_id = '',
                google_region_id = '',
                import_existing = '',
                appliance_url = '',
                datacenter_name = '',
                network_server_id = '',
                network_server = morpheus.models.list_clouds_200_response_all_of_zones_inner_config_any_of_network_server.listClouds_200_response_allOf_zones_inner_config_anyOf_networkServer(
                    id = '', ),
                security_server = '',
                certificate_provider = '',
                backup_mode = '',
                replication_mode = '',
                dns_integration_id = '',
                service_registry_id = '',
                config_management_id = '',
                private_key_hash = ''
            )
        else:
            return ListClouds200ResponseAllOfZonesInnerConfigAnyOf3(
        )
        """

    def testListClouds200ResponseAllOfZonesInnerConfigAnyOf3(self):
        """Test ListClouds200ResponseAllOfZonesInnerConfigAnyOf3"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
