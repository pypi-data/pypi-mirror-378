# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.models.cluster_create import ClusterCreate

class TestClusterCreate(unittest.TestCase):
    """ClusterCreate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ClusterCreate:
        """Test ClusterCreate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ClusterCreate`
        """
        model = ClusterCreate()
        if include_optional:
            return ClusterCreate(
                type = None,
                name = '',
                description = '',
                labels = [
                    ''
                    ],
                group = morpheus.models.add_cluster_request_cluster_group.addCluster_request_cluster_group(
                    id = 56, ),
                cloud = morpheus.models.add_cluster_request_cluster_cloud.addCluster_request_cluster_cloud(
                    id = 56, ),
                layout = morpheus.models.add_cluster_request_cluster_layout.addCluster_request_cluster_layout(
                    id = 56, ),
                server = morpheus.models.add_cluster_request_cluster_server.addCluster_request_cluster_server(
                    config = morpheus.models.add_cluster_request_cluster_server_config.addCluster_request_cluster_server_config(
                        default_repo_account = 56, ), 
                    server_type = morpheus.models.add_cluster_request_cluster_server_server_type.addCluster_request_cluster_server_serverType(
                        id = 56, ), 
                    name = '', 
                    plan = morpheus.models.add_cluster_request_cluster_server_plan.addCluster_request_cluster_server_plan(
                        id = 56, 
                        code = '', ), 
                    service_plan_options = morpheus.models.add_catalog_item_type_request_catalog_item_type_one_of_config_service_plan_options.addCatalogItemType_request_catalogItemType_oneOf_config_servicePlanOptions(
                        max_cores = 2, 
                        cores_per_socket = 1, 
                        max_memory = 536870912, ), 
                    volumes = [
                        morpheus.models.add_cluster_request_cluster_server_volumes_inner.addCluster_request_cluster_server_volumes_inner(
                            id = 56, 
                            root_volume = True, 
                            name = 'root', 
                            size = 56, 
                            size_id = '', 
                            storage_type = 56, 
                            datastore_id = '', )
                        ], 
                    network_interfaces = [
                        morpheus.models.add_cluster_request_cluster_server_network_interfaces_inner.addCluster_request_cluster_server_networkInterfaces_inner(
                            network = morpheus.models.add_cluster_request_cluster_server_network_interfaces_inner_network.addCluster_request_cluster_server_networkInterfaces_inner_network(
                                id = null, ), 
                            network_interface_type_id = 56, 
                            ip_address = '', )
                        ], 
                    security_groups = [
                        ''
                        ], 
                    visibility = 'private', 
                    user_group = morpheus.models.add_cluster_request_cluster_server_user_group.addCluster_request_cluster_server_userGroup(), 
                    network_domain = '', 
                    hostname = '', 
                    node_count = 56, 
                    tags = [
                        morpheus.models.add_catalog_item_type_request_catalog_item_type_one_of_config_evars_inner.addCatalogItemType_request_catalogItemType_oneOf_config_evars_inner(
                            name = '', 
                            value = '', )
                        ], 
                    labels = [
                        ''
                        ], 
                    ssh_hosts = [
                        morpheus.models.add_cluster_request_cluster_server_ssh_hosts_inner.addCluster_request_cluster_server_sshHosts_inner(
                            ip = '', 
                            name = '', )
                        ], 
                    ssh_username = 'myuser', 
                    ssh_password = 'mypassword', 
                    ssh_key_pair = morpheus.models.add_cluster_request_cluster_server_ssh_key_pair.addCluster_request_cluster_server_sshKeyPair(), ),
                auto_recover_power_state = True,
                task_set_id = 56
            )
        else:
            return ClusterCreate(
                type = None,
                name = '',
                group = morpheus.models.add_cluster_request_cluster_group.addCluster_request_cluster_group(
                    id = 56, ),
                cloud = morpheus.models.add_cluster_request_cluster_cloud.addCluster_request_cluster_cloud(
                    id = 56, ),
                layout = morpheus.models.add_cluster_request_cluster_layout.addCluster_request_cluster_layout(
                    id = 56, ),
                server = morpheus.models.add_cluster_request_cluster_server.addCluster_request_cluster_server(
                    config = morpheus.models.add_cluster_request_cluster_server_config.addCluster_request_cluster_server_config(
                        default_repo_account = 56, ), 
                    server_type = morpheus.models.add_cluster_request_cluster_server_server_type.addCluster_request_cluster_server_serverType(
                        id = 56, ), 
                    name = '', 
                    plan = morpheus.models.add_cluster_request_cluster_server_plan.addCluster_request_cluster_server_plan(
                        id = 56, 
                        code = '', ), 
                    service_plan_options = morpheus.models.add_catalog_item_type_request_catalog_item_type_one_of_config_service_plan_options.addCatalogItemType_request_catalogItemType_oneOf_config_servicePlanOptions(
                        max_cores = 2, 
                        cores_per_socket = 1, 
                        max_memory = 536870912, ), 
                    volumes = [
                        morpheus.models.add_cluster_request_cluster_server_volumes_inner.addCluster_request_cluster_server_volumes_inner(
                            id = 56, 
                            root_volume = True, 
                            name = 'root', 
                            size = 56, 
                            size_id = '', 
                            storage_type = 56, 
                            datastore_id = '', )
                        ], 
                    network_interfaces = [
                        morpheus.models.add_cluster_request_cluster_server_network_interfaces_inner.addCluster_request_cluster_server_networkInterfaces_inner(
                            network = morpheus.models.add_cluster_request_cluster_server_network_interfaces_inner_network.addCluster_request_cluster_server_networkInterfaces_inner_network(
                                id = null, ), 
                            network_interface_type_id = 56, 
                            ip_address = '', )
                        ], 
                    security_groups = [
                        ''
                        ], 
                    visibility = 'private', 
                    user_group = morpheus.models.add_cluster_request_cluster_server_user_group.addCluster_request_cluster_server_userGroup(), 
                    network_domain = '', 
                    hostname = '', 
                    node_count = 56, 
                    tags = [
                        morpheus.models.add_catalog_item_type_request_catalog_item_type_one_of_config_evars_inner.addCatalogItemType_request_catalogItemType_oneOf_config_evars_inner(
                            name = '', 
                            value = '', )
                        ], 
                    labels = [
                        ''
                        ], 
                    ssh_hosts = [
                        morpheus.models.add_cluster_request_cluster_server_ssh_hosts_inner.addCluster_request_cluster_server_sshHosts_inner(
                            ip = '', 
                            name = '', )
                        ], 
                    ssh_username = 'myuser', 
                    ssh_password = 'mypassword', 
                    ssh_key_pair = morpheus.models.add_cluster_request_cluster_server_ssh_key_pair.addCluster_request_cluster_server_sshKeyPair(), ),
        )
        """

    def testClusterCreate(self):
        """Test ClusterCreate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
