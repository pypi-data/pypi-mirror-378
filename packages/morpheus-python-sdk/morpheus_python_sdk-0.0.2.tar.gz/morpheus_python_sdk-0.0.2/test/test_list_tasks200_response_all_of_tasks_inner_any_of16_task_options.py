# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.models.list_tasks200_response_all_of_tasks_inner_any_of16_task_options import ListTasks200ResponseAllOfTasksInnerAnyOf16TaskOptions

class TestListTasks200ResponseAllOfTasksInnerAnyOf16TaskOptions(unittest.TestCase):
    """ListTasks200ResponseAllOfTasksInnerAnyOf16TaskOptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListTasks200ResponseAllOfTasksInnerAnyOf16TaskOptions:
        """Test ListTasks200ResponseAllOfTasksInnerAnyOf16TaskOptions
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListTasks200ResponseAllOfTasksInnerAnyOf16TaskOptions`
        """
        model = ListTasks200ResponseAllOfTasksInnerAnyOf16TaskOptions()
        if include_optional:
            return ListTasks200ResponseAllOfTasksInnerAnyOf16TaskOptions(
                host = '',
                ssh_key = '',
                local_script_git_ref = '',
                port = '',
                local_script_git_id = '',
                password = '',
                password_hash = '',
                write_attributes_attributes = '',
                username = ''
            )
        else:
            return ListTasks200ResponseAllOfTasksInnerAnyOf16TaskOptions(
        )
        """

    def testListTasks200ResponseAllOfTasksInnerAnyOf16TaskOptions(self):
        """Test ListTasks200ResponseAllOfTasksInnerAnyOf16TaskOptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
