# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.models.list_hosts200_response_all_of_servers_inner import ListHosts200ResponseAllOfServersInner

class TestListHosts200ResponseAllOfServersInner(unittest.TestCase):
    """ListHosts200ResponseAllOfServersInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListHosts200ResponseAllOfServersInner:
        """Test ListHosts200ResponseAllOfServersInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListHosts200ResponseAllOfServersInner`
        """
        model = ListHosts200ResponseAllOfServersInner()
        if include_optional:
            return ListHosts200ResponseAllOfServersInner(
                id = 56,
                uuid = '',
                external_id = '',
                internal_id = '',
                external_unique_id = '',
                name = '',
                external_name = '',
                hostname = '',
                parent_server = morpheus.models.get_alerts_200_response_all_of_check_groups_inner_instance.getAlerts_200_response_allOf_checkGroups_inner_instance(
                    id = 56, 
                    name = '', ),
                account_id = 56,
                account = morpheus.models.get_alerts_200_response_all_of_check_groups_inner_instance.getAlerts_200_response_allOf_checkGroups_inner_instance(
                    id = 56, 
                    name = '', ),
                owner = morpheus.models.list_activity_200_response_all_of_activity_inner_activity_inner_user.listActivity_200_response_allOf_activity_inner_activity_inner_user(
                    id = 56, 
                    username = '', ),
                zone = morpheus.models.get_alerts_200_response_all_of_check_groups_inner_instance.getAlerts_200_response_allOf_checkGroups_inner_instance(
                    id = 56, 
                    name = '', ),
                plan = morpheus.models.list_hosts_200_response_all_of_servers_inner_plan.listHosts_200_response_allOf_servers_inner_plan(
                    id = 56, 
                    code = '', 
                    name = '', ),
                compute_server_type = morpheus.models.list_cluster_layouts_200_response_all_of_layouts_inner_compute_servers_inner_compute_server_type.listClusterLayouts_200_response_allOf_layouts_inner_computeServers_inner_computeServerType(
                    id = 56, 
                    code = '', 
                    name = '', 
                    managed = True, 
                    external_delete = True, ),
                visibility = '',
                description = '',
                zone_id = 56,
                site_id = 56,
                resource_pool_id = 56,
                folder_id = 56,
                ssh_host = '',
                ssh_port = 56,
                external_ip = '',
                internal_ip = '',
                volume_id = '',
                platform = '',
                platform_version = '',
                ssh_username = '',
                ssh_password = '',
                ssh_password_hash = '',
                ssh_key_pair = morpheus.models.get_alerts_200_response_all_of_checks_inner_account.getAlerts_200_response_allOf_checks_inner_account(
                    id = 56, ),
                os_device = '',
                os_type = '',
                data_device = '',
                lvm_enabled = True,
                api_key = '',
                software_raid = True,
                date_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                stats = morpheus.models.list_hosts_200_response_all_of_servers_inner_stats.listHosts_200_response_allOf_servers_inner_stats(
                    ts = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    free_swap = 56, 
                    used_swap = 56, 
                    cpu_idle_time = 56, 
                    cpu_system_time = 56, 
                    cpu_user_time = 56, 
                    cpu_total_time = 56, 
                    max_memory = 56, 
                    used_memory = 56, 
                    max_storage = 56, 
                    used_storage = 56, 
                    reserved_storage = 56, 
                    cpu_usage = 1.337, 
                    free_memory = 56, 
                    net_tx_usage = 56, 
                    net_rx_usage = 56, 
                    network_bandwidth = 56, ),
                status = '',
                status_message = '',
                error_message = '',
                status_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                status_percent = '',
                status_eta = '',
                power_state = '',
                agent_installed = True,
                last_agent_update = '',
                agent_version = '',
                max_cores = 56,
                cores_per_socket = 56,
                max_memory = 56,
                max_storage = 56,
                max_cpu = 56,
                max_gpus = 56,
                manage_internal_firewall = True,
                enable_logs = True,
                hourly_cost = 1.337,
                hourly_price = 1.337,
                source_image = morpheus.models.list_backup_settings_200_response_backup_settings_default_schedule.listBackupSettings_200_response_backupSettings_defaultSchedule(
                    id = 56, 
                    code = '', 
                    name = '', ),
                server_os = morpheus.models.list_hosts_200_response_all_of_servers_inner_server_os.listHosts_200_response_allOf_servers_inner_serverOs(
                    id = 56, 
                    code = '', 
                    name = '', 
                    description = '', 
                    vendor = '', 
                    category = '', 
                    os_family = '', 
                    os_version = '', 
                    bit_count = 56, 
                    platform = '', ),
                volumes = [
                    morpheus.models.list_cluster_volumes_200_response_all_of_volumes_inner.listClusterVolumes_200_response_allOf_volumes_inner(
                        id = 56, 
                        name = '', 
                        description = '', 
                        controller = morpheus.models.get_alerts_200_response_all_of_check_groups_inner_instance.getAlerts_200_response_allOf_checkGroups_inner_instance(
                            id = 56, 
                            name = '', ), 
                        controller_id = 56, 
                        controller_mount_point = '', 
                        resizeable = True, 
                        root_volume = True, 
                        unit_number = '', 
                        device_name = '', 
                        device_display_name = '', 
                        volume_name = '', 
                        volume_path = '', 
                        volume_type = '', 
                        ref_type = '', 
                        ref_id = 56, 
                        disk_mode = '', 
                        disk_type = '', 
                        type = morpheus.models.list_backup_settings_200_response_backup_settings_default_schedule.listBackupSettings_200_response_backupSettings_defaultSchedule(
                            id = 56, 
                            code = '', 
                            name = '', ), 
                        type_id = 56, 
                        category = '', 
                        status = '', 
                        status_message = '', 
                        configurable_iops = True, 
                        max_storage = 56, 
                        used_storage = 56, 
                        display_order = 56, 
                        max_iops = '', 
                        uuid = '', 
                        active = True, 
                        read_only = True, 
                        removable = True, 
                        pool_name = '', 
                        zone = morpheus.models.get_alerts_200_response_all_of_check_groups_inner_instance.getAlerts_200_response_allOf_checkGroups_inner_instance(
                            id = 56, 
                            name = '', ), 
                        zone_id = 56, 
                        datastore = , 
                        datastore_id = 56, 
                        datastore_option = '', 
                        storage_group = '', 
                        namespace = '', 
                        storage_server = '', 
                        source = '', 
                        unique_id = '', 
                        internal_id = '', 
                        external_id = '', 
                        provision_type = '', 
                        copy_type = '', 
                        fiber_wwn = '', 
                        file_name = '', 
                        claim_name = '', 
                        share_path = '', 
                        source_id = '', 
                        source_image = '', 
                        image_type = '', 
                        online = True, 
                        raw_data = '', 
                        account = , 
                        owner = , )
                    ],
                controllers = [
                    morpheus.models.list_guidances_200_response_all_of_discoveries_inner_any_of_resource_controllers_inner.listGuidances_200_response_allOf_discoveries_inner_anyOf_resource_controllers_inner(
                        id = 56, 
                        name = '', 
                        type = morpheus.models.list_backup_settings_200_response_backup_settings_default_schedule.listBackupSettings_200_response_backupSettings_defaultSchedule(
                            id = 56, 
                            code = '', 
                            name = '', ), 
                        max_devices = 56, 
                        reserved_unit_number = 56, )
                    ],
                interfaces = [
                    morpheus.models.list_hosts_200_response_all_of_servers_inner_interfaces_inner.listHosts_200_response_allOf_servers_inner_interfaces_inner(
                        id = 56, 
                        ref_type = '', 
                        ref_id = '', 
                        name = '', 
                        internal_id = '', 
                        external_id = '', 
                        unique_id = '', 
                        public_ip_address = '', 
                        public_ipv6_address = '', 
                        ip_address = '', 
                        ipv6_address = '', 
                        ip_subnet = '', 
                        ipv6_subnet = '', 
                        description = '', 
                        dhcp = True, 
                        active = True, 
                        pool_assigned = True, 
                        primary_interface = True, 
                        network = morpheus.models.get_alerts_200_response_all_of_check_groups_inner_instance.getAlerts_200_response_allOf_checkGroups_inner_instance(
                            id = 56, 
                            name = '', ), 
                        subnet = '', 
                        network_group = '', 
                        network_position = '', 
                        network_pool = morpheus.models.get_alerts_200_response_all_of_check_groups_inner_instance.getAlerts_200_response_allOf_checkGroups_inner_instance(
                            id = 56, 
                            name = '', ), 
                        network_domain = '', 
                        type = morpheus.models.list_backup_settings_200_response_backup_settings_default_schedule.listBackupSettings_200_response_backupSettings_defaultSchedule(
                            id = 56, 
                            code = '', 
                            name = '', ), 
                        ip_mode = '', 
                        mac_address = '', )
                    ],
                labels = [
                    None
                    ],
                tags = [
                    None
                    ],
                enabled = True,
                tag_compliant = '',
                containers = [
                    56
                    ],
                config = morpheus.models.list_hosts_200_response_all_of_servers_inner_config.listHosts_200_response_allOf_servers_inner_config(
                    pool_provider_type = '', 
                    is_vpc_selectable = True, 
                    smbios_asset_tag = '', 
                    is_ec2 = True, 
                    resource_pool_id = 56, 
                    host_id = 56, 
                    create_user = null, 
                    nested_virtualization = '', 
                    vmware_folder_id = '', 
                    no_agent = True, 
                    power_schedule_type = 56, ),
                instance = morpheus.models.list_hosts_200_response_all_of_servers_inner_instance.listHosts_200_response_allOf_servers_inner_instance(
                    id = 56, 
                    name = '', 
                    display_name = '', 
                    is_vpc_selectable = True, 
                    account_id = 56, 
                    account_name = '', ),
                guest_console_preferred = True,
                guest_console_type = '',
                guest_console_username = '',
                guest_console_password = '',
                guest_console_password_hash = '',
                guest_console_port = ''
            )
        else:
            return ListHosts200ResponseAllOfServersInner(
        )
        """

    def testListHosts200ResponseAllOfServersInner(self):
        """Test ListHosts200ResponseAllOfServersInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
