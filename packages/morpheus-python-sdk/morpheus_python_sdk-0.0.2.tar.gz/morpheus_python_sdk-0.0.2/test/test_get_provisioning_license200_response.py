# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.models.get_provisioning_license200_response import GetProvisioningLicense200Response

class TestGetProvisioningLicense200Response(unittest.TestCase):
    """GetProvisioningLicense200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetProvisioningLicense200Response:
        """Test GetProvisioningLicense200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetProvisioningLicense200Response`
        """
        model = GetProvisioningLicense200Response()
        if include_optional:
            return GetProvisioningLicense200Response(
                license = morpheus.models.list_provisioning_licenses_200_response_all_of_licenses_inner.listProvisioningLicenses_200_response_allOf_licenses_inner(
                    id = 56, 
                    name = '', 
                    description = '', 
                    license_type = morpheus.models.list_backup_settings_200_response_backup_settings_default_schedule.listBackupSettings_200_response_backupSettings_defaultSchedule(
                        id = 56, 
                        code = '', 
                        name = '', ), 
                    license_key = '', 
                    org_name = '', 
                    full_name = '', 
                    license_version = '', 
                    copies = 56, 
                    reservation_count = 56, 
                    tenants = [
                        None
                        ], 
                    virtual_images = [
                        morpheus.models.get_alerts_200_response_all_of_check_groups_inner_instance.getAlerts_200_response_allOf_checkGroups_inner_instance(
                            id = 56, 
                            name = '', )
                        ], 
                    account = morpheus.models.get_alerts_200_response_all_of_check_groups_inner_instance.getAlerts_200_response_allOf_checkGroups_inner_instance(
                        id = 56, 
                        name = '', ), )
            )
        else:
            return GetProvisioningLicense200Response(
        )
        """

    def testGetProvisioningLicense200Response(self):
        """Test GetProvisioningLicense200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
