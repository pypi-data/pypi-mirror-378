# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.api.storage_api import StorageApi


class TestStorageApi(unittest.TestCase):
    """StorageApi unit test stubs"""

    def setUp(self) -> None:
        self.api = StorageApi()

    def tearDown(self) -> None:
        pass

    def test_add_storage_buckets(self) -> None:
        """Test case for add_storage_buckets

        Creates a Storage Bucket
        """
        pass

    def test_add_storage_servers(self) -> None:
        """Test case for add_storage_servers

        Creates a Storage Server
        """
        pass

    def test_add_storage_volumes(self) -> None:
        """Test case for add_storage_volumes

        Creates a Storage Volume
        """
        pass

    def test_attach_server_volume(self) -> None:
        """Test case for attach_server_volume

        Attach existing storage volume
        """
        pass

    def test_detach_server_volume(self) -> None:
        """Test case for detach_server_volume

        Detach storage volume
        """
        pass

    def test_get_storage_buckets(self) -> None:
        """Test case for get_storage_buckets

        Retrieves a Specific Storage Bucket
        """
        pass

    def test_get_storage_server_types(self) -> None:
        """Test case for get_storage_server_types

        Retrieves a Specific Storage Server Type
        """
        pass

    def test_get_storage_servers(self) -> None:
        """Test case for get_storage_servers

        Retrieves a Specific Storage Server
        """
        pass

    def test_get_storage_volume_types(self) -> None:
        """Test case for get_storage_volume_types

        Retrieves a Specific Storage Volume Type
        """
        pass

    def test_get_storage_volumes(self) -> None:
        """Test case for get_storage_volumes

        Retrieves a Specific Storage Volume
        """
        pass

    def test_list_storage_buckets(self) -> None:
        """Test case for list_storage_buckets

        Retrieves all Storage Buckets
        """
        pass

    def test_list_storage_server_types(self) -> None:
        """Test case for list_storage_server_types

        Retrieves all Storage Server Types
        """
        pass

    def test_list_storage_servers(self) -> None:
        """Test case for list_storage_servers

        Retrieves all Storage Servers
        """
        pass

    def test_list_storage_volume_types(self) -> None:
        """Test case for list_storage_volume_types

        Retrieves all Storage Volume Types
        """
        pass

    def test_list_storage_volumes(self) -> None:
        """Test case for list_storage_volumes

        Retrieves all Storage Volumes
        """
        pass

    def test_remove_storage_buckets(self) -> None:
        """Test case for remove_storage_buckets

        Deletes a Storage Bucket
        """
        pass

    def test_remove_storage_servers(self) -> None:
        """Test case for remove_storage_servers

        Deletes a Storage Server
        """
        pass

    def test_remove_storage_volumes(self) -> None:
        """Test case for remove_storage_volumes

        Deletes a Storage Volume
        """
        pass

    def test_update_storage_buckets(self) -> None:
        """Test case for update_storage_buckets

        Updates a Storage Bucket
        """
        pass

    def test_update_storage_servers(self) -> None:
        """Test case for update_storage_servers

        Updates a Storage Server
        """
        pass

    def test_update_storage_volumes(self) -> None:
        """Test case for update_storage_volumes

        Updates a Storage Volume
        """
        pass


if __name__ == '__main__':
    unittest.main()
