# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.api.users_api import UsersApi


class TestUsersApi(unittest.TestCase):
    """UsersApi unit test stubs"""

    def setUp(self) -> None:
        self.api = UsersApi()

    def tearDown(self) -> None:
        pass

    def test_add_user(self) -> None:
        """Test case for add_user

        Create a New User
        """
        pass

    def test_add_user_group(self) -> None:
        """Test case for add_user_group

        Creates a User Group
        """
        pass

    def test_delete_user(self) -> None:
        """Test case for delete_user

        Delete a User
        """
        pass

    def test_delete_user_group(self) -> None:
        """Test case for delete_user_group

        Delete User Group
        """
        pass

    def test_delete_user_settings_access_token(self) -> None:
        """Test case for delete_user_settings_access_token

        Revoke API Access Token
        """
        pass

    def test_delete_user_settings_avatar(self) -> None:
        """Test case for delete_user_settings_avatar

        Delete Avatar
        """
        pass

    def test_delete_user_settings_desktop_background(self) -> None:
        """Test case for delete_user_settings_desktop_background

        Delete Desktop Background
        """
        pass

    def test_get_user(self) -> None:
        """Test case for get_user

        Get a Specific User
        """
        pass

    def test_get_user_group(self) -> None:
        """Test case for get_user_group

        Get a Specific User Group
        """
        pass

    def test_get_user_permissions(self) -> None:
        """Test case for get_user_permissions

        Get a Specific User Permissions
        """
        pass

    def test_get_user_settings_api_clients(self) -> None:
        """Test case for get_user_settings_api_clients

        Get Available API Clients
        """
        pass

    def test_list_user_groups(self) -> None:
        """Test case for list_user_groups

        Retrieves all User Groups
        """
        pass

    def test_list_user_settings(self) -> None:
        """Test case for list_user_settings

        User Settings
        """
        pass

    def test_list_users(self) -> None:
        """Test case for list_users

        List All Users
        """
        pass

    def test_list_users_available_roles(self) -> None:
        """Test case for list_users_available_roles

        List available roles for a user
        """
        pass

    def test_update_user(self) -> None:
        """Test case for update_user

        Update user
        """
        pass

    def test_update_user_group(self) -> None:
        """Test case for update_user_group

        Update User Group
        """
        pass

    def test_update_user_settings(self) -> None:
        """Test case for update_user_settings

        Update User Settings
        """
        pass

    def test_update_user_settings_access_token(self) -> None:
        """Test case for update_user_settings_access_token

        Regenerate API Access Token
        """
        pass

    def test_update_user_settings_avatar(self) -> None:
        """Test case for update_user_settings_avatar

        Update Avatar
        """
        pass

    def test_update_user_settings_desktop_background(self) -> None:
        """Test case for update_user_settings_desktop_background

        Update Desktop Background
        """
        pass


if __name__ == '__main__':
    unittest.main()
