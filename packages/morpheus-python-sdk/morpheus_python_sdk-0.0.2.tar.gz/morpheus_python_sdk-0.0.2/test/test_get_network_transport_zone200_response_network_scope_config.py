# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.models.get_network_transport_zone200_response_network_scope_config import GetNetworkTransportZone200ResponseNetworkScopeConfig

class TestGetNetworkTransportZone200ResponseNetworkScopeConfig(unittest.TestCase):
    """GetNetworkTransportZone200ResponseNetworkScopeConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetNetworkTransportZone200ResponseNetworkScopeConfig:
        """Test GetNetworkTransportZone200ResponseNetworkScopeConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetNetworkTransportZone200ResponseNetworkScopeConfig`
        """
        model = GetNetworkTransportZone200ResponseNetworkScopeConfig()
        if include_optional:
            return GetNetworkTransportZone200ResponseNetworkScopeConfig(
                nvds_name = '',
                host_membership_criteria = ''
            )
        else:
            return GetNetworkTransportZone200ResponseNetworkScopeConfig(
        )
        """

    def testGetNetworkTransportZone200ResponseNetworkScopeConfig(self):
        """Test GetNetworkTransportZone200ResponseNetworkScopeConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
