# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.api.instances_api import InstancesApi


class TestInstancesApi(unittest.TestCase):
    """InstancesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = InstancesApi()

    def tearDown(self) -> None:
        pass

    def test_add_instance(self) -> None:
        """Test case for add_instance

        Create an Instance
        """
        pass

    def test_backup_instance(self) -> None:
        """Test case for backup_instance

        Backup an instance
        """
        pass

    def test_backups_instance(self) -> None:
        """Test case for backups_instance

        Get list of backups for an Instance
        """
        pass

    def test_cancel_expiration_instance(self) -> None:
        """Test case for cancel_expiration_instance

        Cancel Expiration of an Instance
        """
        pass

    def test_cancel_removal_instance(self) -> None:
        """Test case for cancel_removal_instance

        Cancel Removal of an Instance
        """
        pass

    def test_cancel_shutdown_instance(self) -> None:
        """Test case for cancel_shutdown_instance

        Cancel Shutdown of an Instance
        """
        pass

    def test_clone_image_instance(self) -> None:
        """Test case for clone_image_instance

        Clone to Image
        """
        pass

    def test_clone_instance(self) -> None:
        """Test case for clone_instance

        Clone an Instance
        """
        pass

    def test_create_instance_schedule(self) -> None:
        """Test case for create_instance_schedule

        Create a new Instance Schedule
        """
        pass

    def test_delete_all_snapshots_instance(self) -> None:
        """Test case for delete_all_snapshots_instance

        Delete All Snapshots of Instance
        """
        pass

    def test_delete_all_snapshots_instance_container(self) -> None:
        """Test case for delete_all_snapshots_instance_container

        Delete All Snapshots of Instance Container
        """
        pass

    def test_delete_instance(self) -> None:
        """Test case for delete_instance

        Delete an instance
        """
        pass

    def test_delete_instance_schedule(self) -> None:
        """Test case for delete_instance_schedule

        Deletes an Instance Schedule
        """
        pass

    def test_delete_snapshot_instance(self) -> None:
        """Test case for delete_snapshot_instance

        Delete Snapshot of Instance
        """
        pass

    def test_eject_instance(self) -> None:
        """Test case for eject_instance

        Eject an instance
        """
        pass

    def test_execute_instance_action(self) -> None:
        """Test case for execute_instance_action

        Execute Instance Action
        """
        pass

    def test_extend_expiration_instance(self) -> None:
        """Test case for extend_expiration_instance

        Extend Expiration of an Instance
        """
        pass

    def test_extend_shutdown_instance(self) -> None:
        """Test case for extend_shutdown_instance

        Extend Shutdown of an Instance
        """
        pass

    def test_get_env_variables(self) -> None:
        """Test case for get_env_variables

        Get Env Variables
        """
        pass

    def test_get_instance(self) -> None:
        """Test case for get_instance

        Retrieves a Specific Instance
        """
        pass

    def test_get_instance_actions(self) -> None:
        """Test case for get_instance_actions

        List Instance Actions
        """
        pass

    def test_get_instance_containers(self) -> None:
        """Test case for get_instance_containers

        Get Container Details
        """
        pass

    def test_get_instance_history(self) -> None:
        """Test case for get_instance_history

        Get Instance History
        """
        pass

    def test_get_instance_schedule(self) -> None:
        """Test case for get_instance_schedule

        Get a Specific Instance Schedule
        """
        pass

    def test_get_instance_schedules(self) -> None:
        """Test case for get_instance_schedules

        Get all Instance Schedules
        """
        pass

    def test_get_instance_stats(self) -> None:
        """Test case for get_instance_stats

        Get Statistics for all Instances
        """
        pass

    def test_get_instance_threshold(self) -> None:
        """Test case for get_instance_threshold

        Get an Instance Scale Threshold
        """
        pass

    def test_get_instance_type_provisioning(self) -> None:
        """Test case for get_instance_type_provisioning

        Get Specific Instance Type for Provisioning
        """
        pass

    def test_get_prepare_apply_instance(self) -> None:
        """Test case for get_prepare_apply_instance

        Prepare To Apply an Instance
        """
        pass

    def test_get_snapshot_instance(self) -> None:
        """Test case for get_snapshot_instance

        Get a Specific Snapshot
        """
        pass

    def test_get_state_instance(self) -> None:
        """Test case for get_state_instance

        Get State of an Instance
        """
        pass

    def test_get_validate_apply_instance(self) -> None:
        """Test case for get_validate_apply_instance

        Validate Apply State for an Instance
        """
        pass

    def test_import_snapshot_instance(self) -> None:
        """Test case for import_snapshot_instance

        Import Snapshot of an Instance
        """
        pass

    def test_linked_clone_snapshot_instance(self) -> None:
        """Test case for linked_clone_snapshot_instance

        Create Linked Clone of Instance Snapshot
        """
        pass

    def test_list_instance_service_plans(self) -> None:
        """Test case for list_instance_service_plans

        Get Available Service Plans for an Instance
        """
        pass

    def test_list_instance_types_provisioning(self) -> None:
        """Test case for list_instance_types_provisioning

        Get All Instance Types for Provisioning
        """
        pass

    def test_list_instances(self) -> None:
        """Test case for list_instances

        Get All Instances
        """
        pass

    def test_list_security_groups_instance(self) -> None:
        """Test case for list_security_groups_instance

        Get Security Groups for an Instance
        """
        pass

    def test_lock_instance(self) -> None:
        """Test case for lock_instance

        Lock an Instance
        """
        pass

    def test_refresh_state_instance(self) -> None:
        """Test case for refresh_state_instance

        Refresh State of an Instance
        """
        pass

    def test_remove_instances_from_control(self) -> None:
        """Test case for remove_instances_from_control

        Remove From Control
        """
        pass

    def test_resize_instance(self) -> None:
        """Test case for resize_instance

        Resize an Instance
        """
        pass

    def test_restart_instance(self) -> None:
        """Test case for restart_instance

        Restart an instance
        """
        pass

    def test_revert_snapshot_instance(self) -> None:
        """Test case for revert_snapshot_instance

        Revert Instance to Snapshot
        """
        pass

    def test_run_workflow_instance(self) -> None:
        """Test case for run_workflow_instance

        Run Workflow on an Instance
        """
        pass

    def test_set_apply_instance(self) -> None:
        """Test case for set_apply_instance

        Apply State of an Instance
        """
        pass

    def test_set_instance_security_groups(self) -> None:
        """Test case for set_instance_security_groups

        Set Security Groups for an Instance
        """
        pass

    def test_snapshot_instance(self) -> None:
        """Test case for snapshot_instance

        Snapshot an Instance
        """
        pass

    def test_snapshots_instance(self) -> None:
        """Test case for snapshots_instance

        Get list of snapshots for an Instance
        """
        pass

    def test_start_instance(self) -> None:
        """Test case for start_instance

        Start an instance
        """
        pass

    def test_stop_instance(self) -> None:
        """Test case for stop_instance

        Stop an instance
        """
        pass

    def test_suspend_instance(self) -> None:
        """Test case for suspend_instance

        Suspend an instance
        """
        pass

    def test_unlock_instance(self) -> None:
        """Test case for unlock_instance

        Unlock an Instance
        """
        pass

    def test_update_instance(self) -> None:
        """Test case for update_instance

        Updating an Instance
        """
        pass

    def test_update_instance_network_interface(self) -> None:
        """Test case for update_instance_network_interface

        Updating a label for an Instance's Network
        """
        pass

    def test_update_instance_schedule(self) -> None:
        """Test case for update_instance_schedule

        Updating an Instance Schedule
        """
        pass

    def test_update_instance_threshold(self) -> None:
        """Test case for update_instance_threshold

        Updates an Instance Scale Threshold
        """
        pass


if __name__ == '__main__':
    unittest.main()
