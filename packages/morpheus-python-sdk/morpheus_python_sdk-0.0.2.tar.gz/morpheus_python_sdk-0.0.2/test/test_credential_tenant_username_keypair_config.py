# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.models.credential_tenant_username_keypair_config import CredentialTenantUsernameKeypairConfig

class TestCredentialTenantUsernameKeypairConfig(unittest.TestCase):
    """CredentialTenantUsernameKeypairConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CredentialTenantUsernameKeypairConfig:
        """Test CredentialTenantUsernameKeypairConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CredentialTenantUsernameKeypairConfig`
        """
        model = CredentialTenantUsernameKeypairConfig()
        if include_optional:
            return CredentialTenantUsernameKeypairConfig(
                type = 'tenant-username-keypair',
                name = '',
                description = '',
                enabled = True,
                integration = morpheus.models.add_credentials_request_credential_one_of_integration.addCredentials_request_credential_oneOf_integration(
                    id = null, ),
                auth_path = 'My Tenant',
                username = 'jsmith',
                auth_key = morpheus.models.add_credentials_request_credential_one_of_2_auth_key.addCredentials_request_credential_oneOf_2_authKey(
                    id = 9, )
            )
        else:
            return CredentialTenantUsernameKeypairConfig(
                type = 'tenant-username-keypair',
                name = '',
                auth_path = 'My Tenant',
                username = 'jsmith',
                auth_key = morpheus.models.add_credentials_request_credential_one_of_2_auth_key.addCredentials_request_credential_oneOf_2_authKey(
                    id = 9, ),
        )
        """

    def testCredentialTenantUsernameKeypairConfig(self):
        """Test CredentialTenantUsernameKeypairConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
