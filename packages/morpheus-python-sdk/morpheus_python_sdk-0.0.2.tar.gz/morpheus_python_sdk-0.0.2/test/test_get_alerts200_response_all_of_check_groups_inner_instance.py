# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.models.get_alerts200_response_all_of_check_groups_inner_instance import GetAlerts200ResponseAllOfCheckGroupsInnerInstance

class TestGetAlerts200ResponseAllOfCheckGroupsInnerInstance(unittest.TestCase):
    """GetAlerts200ResponseAllOfCheckGroupsInnerInstance unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetAlerts200ResponseAllOfCheckGroupsInnerInstance:
        """Test GetAlerts200ResponseAllOfCheckGroupsInnerInstance
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetAlerts200ResponseAllOfCheckGroupsInnerInstance`
        """
        model = GetAlerts200ResponseAllOfCheckGroupsInnerInstance()
        if include_optional:
            return GetAlerts200ResponseAllOfCheckGroupsInnerInstance(
                id = 56,
                name = ''
            )
        else:
            return GetAlerts200ResponseAllOfCheckGroupsInnerInstance(
        )
        """

    def testGetAlerts200ResponseAllOfCheckGroupsInnerInstance(self):
        """Test GetAlerts200ResponseAllOfCheckGroupsInnerInstance"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
