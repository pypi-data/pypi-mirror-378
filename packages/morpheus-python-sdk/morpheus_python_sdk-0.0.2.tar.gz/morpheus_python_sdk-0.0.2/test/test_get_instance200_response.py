# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.models.get_instance200_response import GetInstance200Response

class TestGetInstance200Response(unittest.TestCase):
    """GetInstance200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetInstance200Response:
        """Test GetInstance200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetInstance200Response`
        """
        model = GetInstance200Response()
        if include_optional:
            return GetInstance200Response(
                instance = morpheus.models.add_instance_200_response_all_of_one_of_instance.addInstance_200_response_allOf_oneOf_instance(
                    id = 56, 
                    uuid = '', 
                    account_id = 56, 
                    tenant = morpheus.models.get_alerts_200_response_all_of_check_groups_inner_instance.getAlerts_200_response_allOf_checkGroups_inner_instance(
                        id = 56, 
                        name = '', ), 
                    instance_type = morpheus.models.add_instance_200_response_all_of_one_of_instance_instance_type.addInstance_200_response_allOf_oneOf_instance_instanceType(
                        id = 56, 
                        code = '', 
                        category = '', 
                        name = '', 
                        image = '', ), 
                    group = morpheus.models.get_alerts_200_response_all_of_check_groups_inner_instance.getAlerts_200_response_allOf_checkGroups_inner_instance(
                        id = 56, 
                        name = '', ), 
                    cloud = morpheus.models.list_apps_200_response_all_of_apps_inner_blueprint.listApps_200_response_allOf_apps_inner_blueprint(
                        id = 56, 
                        name = '', 
                        type = '', ), 
                    cluster = morpheus.models.list_instances_200_response_all_of_instances_inner_cluster.listInstances_200_response_allOf_instances_inner_cluster(
                        id = 56, 
                        name = '', 
                        type = morpheus.models.list_backup_settings_200_response_backup_settings_default_schedule.listBackupSettings_200_response_backupSettings_defaultSchedule(
                            id = 56, 
                            code = '', 
                            name = '', ), ), 
                    containers = [
                        56
                        ], 
                    servers = [
                        56
                        ], 
                    connection_info = [
                        morpheus.models.add_instance_200_response_all_of_one_of_instance_connection_info_inner.addInstance_200_response_allOf_oneOf_instance_connectionInfo_inner(
                            ip = '', 
                            port = 56, 
                            name = '', )
                        ], 
                    layout = morpheus.models.add_instance_200_response_all_of_one_of_instance_layout.addInstance_200_response_allOf_oneOf_instance_layout(
                        id = 56, 
                        name = '', 
                        provision_type_id = 56, 
                        provision_type_code = '', ), 
                    plan = morpheus.models.list_backup_settings_200_response_backup_settings_default_schedule.listBackupSettings_200_response_backupSettings_defaultSchedule(
                        id = 56, 
                        code = '', 
                        name = '', ), 
                    name = '', 
                    display_name = '', 
                    description = '', 
                    environment = '', 
                    config = morpheus.models.add_instance_200_response_all_of_one_of_instance_config.addInstance_200_response_allOf_oneOf_instance_config(
                        create_user = True, 
                        is_ec2 = True, 
                        is_vpc_selectable = True, 
                        no_agent = null, 
                        security_groups = [
                            morpheus.models.list_instances_200_response_all_of_instances_inner_config_user_group.listInstances_200_response_allOf_instances_inner_config_userGroup(
                                id = '', )
                            ], 
                        smbios_asset_tag = '', 
                        nested_virtualization = '', 
                        vmware_folder_id = '', 
                        custom_options = morpheus.models.config.config(), 
                        resource_pool_id = null, 
                        pool_provider_type = '', 
                        user_group = morpheus.models.list_instances_200_response_all_of_instances_inner_config_user_group.listInstances_200_response_allOf_instances_inner_config_userGroup(
                            id = '', ), 
                        expire_days = '', 
                        shutdown_days = '', 
                        name = '', 
                        host_name = '', 
                        site = morpheus.models.get_alerts_200_response_all_of_checks_inner_account.getAlerts_200_response_allOf_checks_inner_account(
                            id = 56, ), 
                        environment_prefix = '', 
                        instance_context = '', 
                        memory_display = '', 
                        expose = [
                            None
                            ], 
                        create_backup = True, 
                        backup = morpheus.models.list_instances_200_response_all_of_instances_inner_config_backup.listInstances_200_response_allOf_instances_inner_config_backup(
                            create_backup = True, 
                            job_action = '', 
                            job_retention_count = '', 
                            provider_backup_type = 56, ), 
                        replication_group = morpheus.models.add_instance_200_response_all_of_one_of_instance_config_replication_group.addInstance_200_response_allOf_oneOf_instance_config_replicationGroup(
                            provider_method = '', ), 
                        layout_size = 56, 
                        lb_instances = [
                            None
                            ], ), 
                    config_group = '', 
                    config_id = '', 
                    config_role = '', 
                    volumes = [
                        morpheus.models.add_instance_200_response_all_of_one_of_instance_volumes_inner.addInstance_200_response_allOf_oneOf_instance_volumes_inner(
                            controller_id = 56, 
                            datastore_id = '', 
                            display_order = 56, 
                            id = 56, 
                            uuid = '', 
                            max_iops = '', 
                            max_storage = 56, 
                            name = '', 
                            short_name = '', 
                            resizeable = True, 
                            plan_resizable = True, 
                            root_volume = True, 
                            size = 56, 
                            storage_type = 56, 
                            unit_number = '', 
                            controller_mount_point = '', )
                        ], 
                    controllers = [
                        morpheus.models.list_guidances_200_response_all_of_discoveries_inner_any_of_resource_controllers_inner.listGuidances_200_response_allOf_discoveries_inner_anyOf_resource_controllers_inner(
                            id = 56, 
                            name = '', 
                            max_devices = 56, 
                            reserved_unit_number = 56, )
                        ], 
                    interfaces = [
                        morpheus.models.add_instance_200_response_all_of_one_of_instance_interfaces_inner.addInstance_200_response_allOf_oneOf_instance_interfaces_inner(
                            id = '', 
                            network = morpheus.models.add_instance_200_response_all_of_one_of_instance_interfaces_inner_network.addInstance_200_response_allOf_oneOf_instance_interfaces_inner_network(
                                id = 56, 
                                subnet = '', 
                                dhcp_server = True, 
                                name = '', 
                                pool = morpheus.models.add_instance_200_response_all_of_one_of_instance_interfaces_inner_network_pool.addInstance_200_response_allOf_oneOf_instance_interfaces_inner_network_pool(
                                    id = 56, 
                                    name = '', ), ), 
                            ip_address = '', 
                            network_interface_type_id = 56, 
                            ip_mode = '', )
                        ], 
                    custom_options = morpheus.models.config.config(), 
                    instance_version = '', 
                    labels = [
                        ''
                        ], 
                    tags = [
                        morpheus.models.add_instance_200_response_all_of_one_of_instance_tags_inner.addInstance_200_response_allOf_oneOf_instance_tags_inner(
                            name = '', 
                            value = '', )
                        ], 
                    evars = [
                        morpheus.models.add_instance_200_response_all_of_one_of_instance_evars_inner.addInstance_200_response_allOf_oneOf_instance_evars_inner(
                            name = '', 
                            value = null, 
                            export = True, 
                            masked = True, )
                        ], 
                    max_memory = 56, 
                    max_storage = 56, 
                    max_cores = 56, 
                    cores_per_socket = 56, 
                    max_cpu = '', 
                    hourly_cost = 1.337, 
                    hourly_price = 1.337, 
                    instance_price = morpheus.models.add_instance_200_response_all_of_one_of_instance_instance_price.addInstance_200_response_allOf_oneOf_instance_instancePrice(
                        price = 1.337, 
                        cost = 1.337, 
                        currency = '', 
                        unit = '', ), 
                    date_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    host_name = '', 
                    domain_name = '', 
                    environment_prefix = '', 
                    firewall_enabled = True, 
                    network_level = '', 
                    auto_scale = True, 
                    instance_context = '', 
                    current_deploy_id = '', 
                    locked = True, 
                    status = '', 
                    status_message = '', 
                    error_message = '', 
                    status_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    status_percent = '', 
                    status_eta = '', 
                    user_status = '', 
                    expire_days = 56, 
                    renew_days = 56, 
                    expire_count = 56, 
                    expire_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    expire_warning_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    expire_warning_sent = True, 
                    shutdown_days = 56, 
                    shutdown_renew_days = 56, 
                    shutdown_count = 56, 
                    shutdown_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    shutdown_warning_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    shutdown_warning_sent = True, 
                    removal_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_by = morpheus.models.list_activity_200_response_all_of_activity_inner_activity_inner_user.listActivity_200_response_allOf_activity_inner_activity_inner_user(
                        id = 56, 
                        username = '', ), 
                    owner = morpheus.models.list_activity_200_response_all_of_activity_inner_activity_inner_user.listActivity_200_response_allOf_activity_inner_activity_inner_user(
                        id = 56, 
                        username = '', ), 
                    notes = '', 
                    stats = morpheus.models.add_instance_200_response_all_of_one_of_instance_stats.addInstance_200_response_allOf_oneOf_instance_stats(
                        used_storage = 56, 
                        max_storage = 56, 
                        used_memory = 56, 
                        max_memory = 56, 
                        used_cpu = 1.337, 
                        cpu_usage = 1.337, 
                        cpu_usage_peak = 1.337, 
                        cpu_usage_avg = 1.337, ), 
                    power_schedule = '', 
                    is_scalable = True, 
                    instance_threshold = morpheus.models.config.config(), 
                    is_busy = True, 
                    apps = , )
            )
        else:
            return GetInstance200Response(
        )
        """

    def testGetInstance200Response(self):
        """Test GetInstance200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
