# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.models.add_policies200_response import AddPolicies200Response

class TestAddPolicies200Response(unittest.TestCase):
    """AddPolicies200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddPolicies200Response:
        """Test AddPolicies200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddPolicies200Response`
        """
        model = AddPolicies200Response()
        if include_optional:
            return AddPolicies200Response(
                policy = morpheus.models.add_policies_200_response_all_of_policy.addPolicies_200_response_allOf_policy(
                    id = 56, 
                    name = '', 
                    description = '', 
                    policy_type = morpheus.models.list_backup_settings_200_response_backup_settings_default_schedule.listBackupSettings_200_response_backupSettings_defaultSchedule(
                        id = 56, 
                        code = '', 
                        name = '', ), 
                    zone = morpheus.models.get_alerts_200_response_all_of_check_groups_inner_instance.getAlerts_200_response_allOf_checkGroups_inner_instance(
                        id = 56, 
                        name = '', ), 
                    site = morpheus.models.get_alerts_200_response_all_of_check_groups_inner_instance.getAlerts_200_response_allOf_checkGroups_inner_instance(
                        id = 56, 
                        name = '', ), 
                    user = morpheus.models.list_activity_200_response_all_of_activity_inner_activity_inner_user.listActivity_200_response_allOf_activity_inner_activity_inner_user(
                        id = 56, 
                        username = '', ), 
                    role = morpheus.models.add_policies_200_response_all_of_policy_role.addPolicies_200_response_allOf_policy_role(
                        id = 56, 
                        authority = '', ), 
                    ref_type = '', 
                    ref_id = '', 
                    each_user = True, 
                    config = null, 
                    enabled = True, 
                    owner = , 
                    accounts = [
                        
                        ], ),
                success = True
            )
        else:
            return AddPolicies200Response(
        )
        """

    def testAddPolicies200Response(self):
        """Test AddPolicies200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
