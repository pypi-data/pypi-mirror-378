# coding: utf-8

"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

    The version of the OpenAPI document: 8.0.8
    Contact: dev@morpheusdata.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from morpheus.models.list_tasks200_response_all_of_tasks_inner_any_of1_task_options import ListTasks200ResponseAllOfTasksInnerAnyOf1TaskOptions

class TestListTasks200ResponseAllOfTasksInnerAnyOf1TaskOptions(unittest.TestCase):
    """ListTasks200ResponseAllOfTasksInnerAnyOf1TaskOptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListTasks200ResponseAllOfTasksInnerAnyOf1TaskOptions:
        """Test ListTasks200ResponseAllOfTasksInnerAnyOf1TaskOptions
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListTasks200ResponseAllOfTasksInnerAnyOf1TaskOptions`
        """
        model = ListTasks200ResponseAllOfTasksInnerAnyOf1TaskOptions()
        if include_optional:
            return ListTasks200ResponseAllOfTasksInnerAnyOf1TaskOptions(
                password = '',
                password_hash = '',
                ansible_tower_git_ref = '',
                local_script_git_id = '',
                host = '',
                username = '',
                ssh_key = '',
                ansible_group = '',
                ansible_tower_execute_mode = '',
                local_script_git_ref = '',
                port = ''
            )
        else:
            return ListTasks200ResponseAllOfTasksInnerAnyOf1TaskOptions(
        )
        """

    def testListTasks200ResponseAllOfTasksInnerAnyOf1TaskOptions(self):
        """Test ListTasks200ResponseAllOfTasksInnerAnyOf1TaskOptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
