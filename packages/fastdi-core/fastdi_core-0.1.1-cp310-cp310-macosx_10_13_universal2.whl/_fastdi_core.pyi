from typing import Any, Callable, List, Tuple, Optional

class Container:
    def register_provider(
        self,
        key: str,
        callable: Callable[..., Any],
        singleton: bool,
        is_async: bool,
        dep_keys: List[str],
    ) -> None: ...
    def resolve(self, key: str) -> Any: ...
    def resolve_many(self, keys: List[str]) -> List[Any]: ...
    def resolve_many_plan(self, keys: List[str]) -> List[Any]: ...
    def begin_override_layer(self) -> None: ...
    def set_override(
        self,
        key: str,
        callable: Callable[..., Any],
        singleton: bool,
        is_async: bool,
        dep_keys: List[str],
    ) -> None: ...
    def end_override_layer(self) -> None: ...
    def get_provider_info(self, key: str) -> Tuple[Callable[..., Any], bool, bool, List[str]]: ...
    def get_cached(self, key: str) -> Optional[Any]: ...
    def set_cached(self, key: str, value: Any) -> None: ...
