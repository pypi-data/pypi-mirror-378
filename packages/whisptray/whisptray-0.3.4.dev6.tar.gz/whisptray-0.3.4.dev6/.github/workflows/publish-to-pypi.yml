name: Publish Python distributions to PyPI

on:
  release:
    types: [published]
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for setuptools_scm

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8' # A version compatible with your project

      - name: Install build dependencies
        run: pip install build

      - name: Build sdist
        run: python -m build --sdist

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist-artifact
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        # os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for setuptools_scm

      - name: Set up QEMU (for Linux arm64, ppc64le)
        if: matrix.os == 'ubuntu-latest'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,ppc64le # ppc64le is skipped by CIBW_SKIP in Makefile

      - name: Install cibuildwheel
        run: pip install cibuildwheel

      - name: Build wheels via Make
        run: |
          os_lowercase=$(echo "${{ runner.os }}" | tr '[:upper:]' '[:lower:]')
          make "build-wheels-${os_lowercase}"

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel-artifact-${{ matrix.os }}
          path: wheelhouse/*.whl

  publish_to_pypi:
    name: Publish distributions to PyPI
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      # url: https://test.pypi.org/p/whisptray 
      url: https://pypi.org/p/whisptray
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
      - name: Set up Python for publishing tools
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Use a generic recent Python for tooling

      - name: Upgrade packaging tools
        run: python -m pip install --upgrade pip setuptools wheel twine pkginfo

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          # Downloads all artifacts from the workflow run into the 'artifacts' directory
          # sdist-artifact will be in artifacts/sdist-artifact/
          # wheel-artifact-ubuntu-latest will be in artifacts/wheel-artifact-ubuntu-latest/
          # etc.
          path: artifacts 

      - name: Prepare package files
        run: |
          mkdir -p dist
          cp artifacts/sdist-artifact/*.tar.gz dist/
          find artifacts -name '*.whl' -exec cp {} dist/ \;
          echo "Files to publish:"
          ls -l dist

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        # No explicit user/password/token needed due to trusted publishing (id-token: write) 