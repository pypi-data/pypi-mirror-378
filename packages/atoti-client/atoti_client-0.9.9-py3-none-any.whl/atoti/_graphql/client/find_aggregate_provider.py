# Generated by ariadne-codegen
# Source: python/atoti-client/graphql/operations.gql

from typing import Optional

from pydantic import Field

from .base_model import BaseModel
from .fragments import AggregateProviderFragment
from .mixins import NonNullable


class FindAggregateProvider(BaseModel):
    data_model: "FindAggregateProviderDataModel" = Field(alias="dataModel")


class FindAggregateProviderDataModel(BaseModel, NonNullable):
    cube: "FindAggregateProviderDataModelCube"


class FindAggregateProviderDataModelCube(BaseModel, NonNullable):
    aggregate_provider: Optional[
        "FindAggregateProviderDataModelCubeAggregateProvider"
    ] = Field(alias="aggregateProvider")


class FindAggregateProviderDataModelCubeAggregateProvider(AggregateProviderFragment):
    pass


FindAggregateProvider.model_rebuild()
FindAggregateProviderDataModel.model_rebuild()
FindAggregateProviderDataModelCube.model_rebuild()
