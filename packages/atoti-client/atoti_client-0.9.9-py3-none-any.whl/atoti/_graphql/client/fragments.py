# Generated by ariadne-codegen
# Source: python/atoti-client/graphql/operations.gql

from typing import Annotated, List, Literal, Optional, Union

from pydantic import Field

from ..._constant import ScalarConstant
from .base_model import BaseModel
from .enums import (
    AggregateProviderPluginKey,
    DatabaseRestrictionMembershipConditionOperator,
    DatabaseRestrictionRelationalConditionOperator,
)
from .input_types import AggregateProviderFilterCondition, CubeRestrictionCondition


class DimensionIdentifierFragment(BaseModel):
    name: str


class HierarchyIdentifierFragment(BaseModel):
    dimension: "HierarchyIdentifierFragmentDimension"
    name: str


class HierarchyIdentifierFragmentDimension(DimensionIdentifierFragment):
    pass


class LevelIdentifierFragment(BaseModel):
    hierarchy: "LevelIdentifierFragmentHierarchy"
    name: str


class LevelIdentifierFragmentHierarchy(HierarchyIdentifierFragment):
    pass


class MeasureIdentifierFragment(BaseModel):
    name: str


class AggregateProviderFragment(BaseModel):
    filter: Optional["AggregateProviderFragmentFilter"]
    levels: Optional[List["AggregateProviderFragmentLevels"]]
    measures: Optional[List["AggregateProviderFragmentMeasures"]]
    partitioning: Optional[str]
    plugin_key: AggregateProviderPluginKey = Field(alias="pluginKey")


class AggregateProviderFragmentFilter(BaseModel):
    value: AggregateProviderFilterCondition


class AggregateProviderFragmentLevels(LevelIdentifierFragment):
    pass


class AggregateProviderFragmentMeasures(MeasureIdentifierFragment):
    pass


class TableIdentifierFragment(BaseModel):
    typename__: str = Field(alias="__typename")
    name: str


class ColumnIdentifierFragment(BaseModel):
    typename__: str = Field(alias="__typename")
    name: str
    table: "ColumnIdentifierFragmentTable"


class ColumnIdentifierFragmentTable(TableIdentifierFragment):
    typename__: Literal["ExternalTable", "InMemoryTable", "Table"] = Field(
        alias="__typename"
    )


class CubeIdentifierFragment(BaseModel):
    name: str


class CubeRestrictionFragment(BaseModel):
    condition: "CubeRestrictionFragmentCondition"


class CubeRestrictionFragmentCondition(BaseModel):
    value: CubeRestrictionCondition


class DatabaseRestrictionFragment(BaseModel):
    condition: List[
        List[
            Annotated[
                Union[
                    "DatabaseRestrictionFragmentConditionDatabaseRestrictionMembershipCondition",
                    "DatabaseRestrictionFragmentConditionDatabaseRestrictionRelationalCondition",
                ],
                Field(discriminator="typename__"),
            ]
        ]
    ]


class DatabaseRestrictionFragmentConditionDatabaseRestrictionMembershipCondition(
    BaseModel
):
    typename__: Literal["DatabaseRestrictionMembershipCondition"] = Field(
        alias="__typename"
    )
    elements: List[ScalarConstant]
    membership_operator: DatabaseRestrictionMembershipConditionOperator = Field(
        alias="membershipOperator"
    )
    subject: "DatabaseRestrictionFragmentConditionDatabaseRestrictionMembershipConditionSubject"


class DatabaseRestrictionFragmentConditionDatabaseRestrictionMembershipConditionSubject(
    ColumnIdentifierFragment
):
    typename__: Literal["Column", "ExternalColumn", "InMemoryColumn"] = Field(
        alias="__typename"
    )


class DatabaseRestrictionFragmentConditionDatabaseRestrictionRelationalCondition(
    BaseModel
):
    typename__: Literal["DatabaseRestrictionRelationalCondition"] = Field(
        alias="__typename"
    )
    relational_operator: DatabaseRestrictionRelationalConditionOperator = Field(
        alias="relationalOperator"
    )
    subject: "DatabaseRestrictionFragmentConditionDatabaseRestrictionRelationalConditionSubject"
    target: ScalarConstant


class DatabaseRestrictionFragmentConditionDatabaseRestrictionRelationalConditionSubject(
    ColumnIdentifierFragment
):
    typename__: Literal["Column", "ExternalColumn", "InMemoryColumn"] = Field(
        alias="__typename"
    )


class JoinIdentifierFragment(BaseModel):
    typename__: str = Field(alias="__typename")
    name: str
    source: "JoinIdentifierFragmentSource"


class JoinIdentifierFragmentSource(TableIdentifierFragment):
    typename__: Literal["ExternalTable", "InMemoryTable", "Table"] = Field(
        alias="__typename"
    )


class MemberPropertyFragment(BaseModel):
    column: "MemberPropertyFragmentColumn"
    name: str


class MemberPropertyFragmentColumn(ColumnIdentifierFragment):
    typename__: Literal["Column", "ExternalColumn", "InMemoryColumn"] = Field(
        alias="__typename"
    )


class SelectionFieldIdentifierFragment(BaseModel):
    column: "SelectionFieldIdentifierFragmentColumn"
    joins: List["SelectionFieldIdentifierFragmentJoins"]


class SelectionFieldIdentifierFragmentColumn(ColumnIdentifierFragment):
    typename__: Literal["Column", "ExternalColumn", "InMemoryColumn"] = Field(
        alias="__typename"
    )


class SelectionFieldIdentifierFragmentJoins(JoinIdentifierFragment):
    typename__: Literal["ExternalJoin", "InMemoryJoin", "Join"] = Field(
        alias="__typename"
    )


DimensionIdentifierFragment.model_rebuild()
HierarchyIdentifierFragment.model_rebuild()
LevelIdentifierFragment.model_rebuild()
MeasureIdentifierFragment.model_rebuild()
AggregateProviderFragment.model_rebuild()
TableIdentifierFragment.model_rebuild()
ColumnIdentifierFragment.model_rebuild()
CubeIdentifierFragment.model_rebuild()
CubeRestrictionFragment.model_rebuild()
DatabaseRestrictionFragment.model_rebuild()
JoinIdentifierFragment.model_rebuild()
MemberPropertyFragment.model_rebuild()
SelectionFieldIdentifierFragment.model_rebuild()
