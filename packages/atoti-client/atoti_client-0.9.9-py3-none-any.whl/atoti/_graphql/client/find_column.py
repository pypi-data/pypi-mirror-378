# Generated by ariadne-codegen
# Source: python/atoti-client/graphql/operations.gql

from typing import Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .fragments import ColumnIdentifierFragment
from .mixins import NonNullable


class FindColumn(BaseModel):
    data_model: "FindColumnDataModel" = Field(alias="dataModel")


class FindColumnDataModel(BaseModel, NonNullable):
    database: "FindColumnDataModelDatabase"


class FindColumnDataModelDatabase(BaseModel):
    table: "FindColumnDataModelDatabaseTable"


class FindColumnDataModelDatabaseTable(BaseModel, NonNullable):
    typename__: Literal["ExternalTable", "InMemoryTable", "Table"] = Field(
        alias="__typename"
    )
    column: Optional["FindColumnDataModelDatabaseTableColumn"]


class FindColumnDataModelDatabaseTableColumn(ColumnIdentifierFragment):
    typename__: Literal["Column", "ExternalColumn", "InMemoryColumn"] = Field(
        alias="__typename"
    )


FindColumn.model_rebuild()
FindColumnDataModel.model_rebuild()
FindColumnDataModelDatabase.model_rebuild()
FindColumnDataModelDatabaseTable.model_rebuild()
