# Generated by ariadne-codegen
# Source: python/atoti-client/graphql/operations.gql

from typing import List, Literal

from pydantic import Field

from .base_model import BaseModel
from .fragments import JoinIdentifierFragment, TableIdentifierFragment
from .mixins import NonNullable


class GetDatabaseFields(BaseModel):
    database_data_model: "GetDatabaseFieldsDatabaseDataModel" = Field(
        alias="databaseDataModel"
    )


class GetDatabaseFieldsDatabaseDataModel(BaseModel, NonNullable):
    database: "GetDatabaseFieldsDatabaseDataModelDatabase"


class GetDatabaseFieldsDatabaseDataModelDatabase(BaseModel):
    tables: List["GetDatabaseFieldsDatabaseDataModelDatabaseTables"]


class GetDatabaseFieldsDatabaseDataModelDatabaseTables(TableIdentifierFragment):
    typename__: Literal["ExternalTable", "InMemoryTable", "Table"] = Field(
        alias="__typename"
    )
    columns: List["GetDatabaseFieldsDatabaseDataModelDatabaseTablesColumns"]
    joins: List["GetDatabaseFieldsDatabaseDataModelDatabaseTablesJoins"]


class GetDatabaseFieldsDatabaseDataModelDatabaseTablesColumns(BaseModel):
    typename__: Literal["Column", "ExternalColumn", "InMemoryColumn"] = Field(
        alias="__typename"
    )
    name: str


class GetDatabaseFieldsDatabaseDataModelDatabaseTablesJoins(JoinIdentifierFragment):
    typename__: Literal["ExternalJoin", "InMemoryJoin", "Join"] = Field(
        alias="__typename"
    )
    target: "GetDatabaseFieldsDatabaseDataModelDatabaseTablesJoinsTarget"


class GetDatabaseFieldsDatabaseDataModelDatabaseTablesJoinsTarget(
    TableIdentifierFragment
):
    typename__: Literal["ExternalTable", "InMemoryTable", "Table"] = Field(
        alias="__typename"
    )


GetDatabaseFields.model_rebuild()
GetDatabaseFieldsDatabaseDataModel.model_rebuild()
GetDatabaseFieldsDatabaseDataModelDatabase.model_rebuild()
GetDatabaseFieldsDatabaseDataModelDatabaseTables.model_rebuild()
GetDatabaseFieldsDatabaseDataModelDatabaseTablesJoins.model_rebuild()
