config:

    # Max line length
    pythonLineLength: 160

    # Add project file fragment for ruff config
    pythonProjectFileFragments:
        - ${BASEDIR}/templates/ruff.toml.jinja

    # Stamp files for ruff execution
    pythonRuffFormatStamp: ${outputDir}/.ruff-format
    pythonRuffFixStamp: ${outputDir}/.ruff-fix
    pythonRuffCheckStamp: ${outputDir}/.ruff-check

    # Extra arguments for ruff command lines
    pythonRuffCommonExtraArgs: ""
    pythonRuffFormatExtraArgs: ""
    pythonRuffFixExtraArgs: ""
    pythonRuffCheckExtraArgs: ""

    # Auto-fix rules
    pythonAutoFixRules: ["I"] # Default: only fix imports
    pythonAutoFixJoinedRules:
        __resolver__: nmk_python.ruff.JoinedRulesResolver
        params:
            rules:
                - ${pythonAutoFixRules}

    # Ignored rules
    pythonIgnoredRules:
        - E203 # space before ":"; sometimes formatting with black introduces this kind of space in slice expressions
        - E501 # line length; we're working with lines wider than the recommended 79 length

    # Require VSCode specific extension for ruff analysis
    vscodeExtensionsNames:
        - charliermarsh.ruff

tasks:

    # Python source code format with ruff
    py.format:
        description: Format python code
        emoji: ":snake:.:lipstick:"
        deps:
            - out
            - py.project
        appendToDeps: build
        if: ${pythonSrcFiles}   # Only if python source files are found
        output:
            - ${pythonRuffFormatStamp}
        input:
            - ${pythonProjectFile}
            - ${pythonSrcFiles}
        builder: nmk_python.ruff.RuffBuilder
        params:
            src_folders: ${pythonSrcFolders}
            command: format ${pythonRuffCommonExtraArgs} ${pythonRuffFormatExtraArgs}

    # Python source code fix with ruff
    py.fix:
        description: Fix python code
        emoji: ":snake:.:wrench:"
        deps:
            - py.format
        appendToDeps: build
        if: ${pythonSrcFiles}   # Only if python source files are found
        output:
            - ${pythonRuffFixStamp}
        input:
            - ${pythonProjectFile}
            - ${pythonSrcFiles}
        builder: nmk_python.ruff.RuffBuilder
        params:
            src_folders: ${pythonSrcFolders}
            command: check --fix-only --select ${pythonAutoFixJoinedRules} ${pythonRuffCommonExtraArgs} ${pythonRuffFixExtraArgs}

    # Python source code analysis with ruff
    py.analyze:
        description: Analyze python code
        emoji: ":snake:.:eye: "
        deps:
            - py.fix
        appendToDeps: build
        if: ${pythonSrcFiles}   # Only if python source files are found
        output:
            - ${pythonRuffCheckStamp}
        input:
            - ${pythonProjectFile}
            - ${pythonSrcFiles}
        builder: nmk_python.ruff.RuffBuilder
        params:
            src_folders: ${pythonSrcFolders}
            command: check ${pythonRuffCommonExtraArgs} ${pythonRuffCheckExtraArgs}
