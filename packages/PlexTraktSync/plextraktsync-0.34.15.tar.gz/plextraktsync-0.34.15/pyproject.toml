[project]
name = "PlexTraktSync"
dynamic = ["version"]
description = "Plex-Trakt-Sync is a two-way-sync between trakt.tv and Plex Media Server"
readme = "README.md"
license = {file = "LICENSE"}
# See: https://pypi.python.org/pypi?:action=list_classifiers
classifiers = [
  "Development Status :: 5 - Production/Stable",

  # Indicate who your project is intended for
  "Environment :: Console",
  "Operating System :: OS Independent",

  # Pick your license as you wish (see also "license" above)
  "License :: OSI Approved :: MIT License",

  # List of Python versions and their support status:
  # https://en.wikipedia.org/wiki/History_of_Python#Support
  # https://endoflife.date/python
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.9"

[tool.setuptools.dynamic]
version = {attr = "plextraktsync.__version__"}

[project.urls]
Homepage = "https://github.com/Taxel/PlexTraktSync"
Repository = "https://github.com/Taxel/PlexTraktSync.git"
Issues = "https://github.com/Taxel/PlexTraktSync/issues"

[build-system]
requires = [
    "setuptools-declarative-requirements>=1.3.0",
    "setuptools>=42",
    "wheel",
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = [
    "plextraktsync",
    "plextraktsync.commands",
    "plextraktsync.config",
    "plextraktsync.decorators",
    "plextraktsync.logger",
    "plextraktsync.media",
    "plextraktsync.mixin",
    "plextraktsync.factory",
    "plextraktsync.plan",
    "plextraktsync.plex",
    "plextraktsync.plex.guid",
    "plextraktsync.plex.guid.provider",
    "plextraktsync.plugin",
    "plextraktsync.queue",
    "plextraktsync.rich",
    "plextraktsync.sync",
    "plextraktsync.sync.plugin",
    "plextraktsync.trakt",
    "plextraktsync.util",
    "plextraktsync.watch",
]

[project.scripts]
plextraktsync = "plextraktsync.cli:cli"

[tool.ruff]
# https://docs.astral.sh/ruff/settings/#line-length
line-length = 150

[tool.ruff.lint]
# https://docs.astral.sh/ruff/linter/#rule-selection
# https://docs.astral.sh/ruff/settings/#lint_extend-select
extend-select = [
    "E", # pycodestyle
    "F", # Pyflakes
    "UP", # pyupgrade
    "B", # flake8-bugbear
    "SIM", # flake8-simplify
    "I", # isort
]
extend-ignore = [
    # Not safe changes
    "SIM102",
    "SIM103",
    # TODO
    "SIM108",
    "B019", # Concious decision
    "B904", # Haven't figured out which one to use
]

[tool.ruff.lint.isort]
# https://docs.astral.sh/ruff/settings/#lint_isort_required-imports
required-imports = ["from __future__ import annotations"]
