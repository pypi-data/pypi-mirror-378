name: Build extensions
on:
  workflow_dispatch:
  pull_request:
    paths:
      - "src/utils/**"

permissions:
  contents: write          # needed to push the branch with updated descriptor
  pull-requests: write     # needed to call the pulls REST API (create PR)
  id-token: write        # pypi publishing

jobs:
  build-extensions:
    runs-on: ubuntu-latest
    outputs:
      has-wheels: ${{ steps.build-extensions.outputs.has-wheels }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - name: Install venv
        run: |
          uv venv -p python3.13
          uv pip install -e .[duckdb-ext-dev]
      - name: Run extension generation script
        id: build-extensions
        run: |
          source .venv/bin/activate
          echo "has-wheels=false" >> "$GITHUB_OUTPUT"
          python -m utils.build_extensions
          if ls dist/*.whl 1> /dev/null 2>&1; then
            echo "has-wheels=true" >> "$GITHUB_OUTPUT"
          fi
      - name: Summarise build result
        run: |
          echo "Built wheels:"
          ls -lh dist/*.whl || echo "No wheels built"
          echo "Descriptor file:"
          git diff descriptor.yml || echo "No changes to descriptor.yml"
      - uses: actions/upload-artifact@v4
        if: steps.build-extensions.outputs.has-wheels == 'true'
        with:
          name: dist
          path: dist
      - name: Create PR for updated descriptor
        if: steps.build-extensions.outputs.has-wheels == 'true' && github.ref == 'refs/heads/main'
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "chore: update descriptor.yml"
          title: "chore: update descriptor.yml"
          body: |
            Automated update of descriptor.yml produced by the build-extensions workflow.
            This PR was created because new wheels were built.
          branch: chore/update-descriptor-${{ github.run_id }}
          add-paths: |
            descriptor.yml
          labels: automated,descriptor
          signoff: false
          delete-branch: true
  publish-to-test-pypi:
    runs-on: ubuntu-latest
    needs: build-extensions
    environment: testpypi
    if: needs.build-extensions.outputs.has-wheels == 'true' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: dist
          path: dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          print-hash: true
  publish-to-pypi:
    runs-on: ubuntu-latest
    needs: build-extensions
    environment: pypi
    if: needs.build-extensions.outputs.has-wheels == 'true' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: dist
          path: dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          print-hash: true
