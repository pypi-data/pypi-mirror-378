services:
  # MongoDB instances
  mongodb1:
    image: mongo:7
    container_name: test-mongodb1
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: testdb
    ports:
      - "27017:27017"
    networks:
      - test-network
    profiles:
      - mongo

  mongodb2:
    image: mongo:7
    container_name: test-mongodb2
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: testdb
    ports:
      - "27018:27017"
    networks:
      - test-network
    profiles:
      - mongo

  # PostgreSQL instances
  postgres1:
    image: postgres:15
    container_name: test-postgres1
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: testdb
    ports:
      - "5432:5432"
    networks:
      - test-network
    profiles:
      - postgres

  postgres2:
    image: postgres:15
    container_name: test-postgres2
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: testdb
    ports:
      - "5433:5432"
    networks:
      - test-network
    profiles:
      - postgres

  # MariaDB instances
  mariadb1:
    image: mariadb:10
    container_name: test-mariadb1
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: testdb
      MYSQL_USER: admin
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    networks:
      - test-network
    profiles:
      - mariadb

  mariadb2:
    image: mariadb:10
    container_name: test-mariadb2
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: testdb
      MYSQL_USER: admin
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    networks:
      - test-network
    profiles:
      - mariadb

networks:
  test-network:
    driver: bridge