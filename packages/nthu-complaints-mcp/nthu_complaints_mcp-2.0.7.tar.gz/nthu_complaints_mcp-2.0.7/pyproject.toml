[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "nthu-complaints-mcp"
version = "2.0.7"
description = "NTHU Complaints API Testing MCP Server - A powerful Model Context Protocol server for testing and interacting with NTHU complaint system APIs"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "NTHU Complaints Team"},
]
maintainers = [
    {name = "NTHU Complaints Team"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Testing",
    "Topic :: Education",
    "Topic :: Communications",
]
keywords = [
    "mcp",
    "model-context-protocol",
    "api-testing",
    "complaints",
    "nthu",
    "fastmcp",
    "university",
    "student-services"
]
requires-python = ">=3.8"
dependencies = [
    "fastmcp>=0.2.0",
    "httpx>=0.24.0",
    "asyncio-mqtt>=0.11.0",
    "pydantic>=2.0.7",
    "click>=8.0.0",
    "rich>=13.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-httpx>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-httpx>=0.21.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/nthu-complaints/nthu-complaints-mcp"
Documentation = "https://github.com/nthu-complaints/nthu-complaints-mcp#readme"
Repository = "https://github.com/nthu-complaints/nthu-complaints-mcp.git"
Issues = "https://github.com/nthu-complaints/nthu-complaints-mcp/issues"
Changelog = "https://github.com/nthu-complaints/nthu-complaints-mcp/blob/main/CHANGELOG.md"

[project.scripts]
nthu-complaints-mcp = "nthu_complaints_mcp.cli:main"
nthu-complaints = "nthu_complaints_mcp.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["nthu_complaints_mcp"]

[tool.hatch.build.targets.sdist]
include = [
    "/nthu_complaints_mcp",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["nthu_complaints_mcp"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["nthu_complaints_mcp"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/virtualenv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstract",
]