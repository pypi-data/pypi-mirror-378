[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "carapis-api"
version = "2.0.4"
description = "Universal Python client for CARAPIS Vehicles API - Access automotive data from 25+ global marketplaces including Cars.com, AutoScout24, Encar, Auto.ru, and more. Enterprise-grade automotive data extraction with real-time vehicle listings, pricing, and market intelligence."
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "CARAPIS Team", email = "info@carapis.com"}
]
maintainers = [
    {name = "CARAPIS Team", email = "info@carapis.com"}
]
keywords = [
    "automotive", "vehicles", "cars", "api", "client", "python", "carapis",
    "automotive-data", "vehicle-listings", "car-marketplace", "automotive-api",
    "cars.com", "autoscout24", "encar", "auto.ru", "automotive-scraping",
    "vehicle-data", "car-data", "marketplace-api", "automotive-intelligence",
    "vehicle-search", "car-pricing", "automotive-analytics", "dealership-tools",
    "automotive-platform", "vehicle-inventory", "car-market-data",
    "automotive-insights", "real-time-data", "enterprise-api", "ssr",
    "django", "fastapi", "flask", "async", "asyncio"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
    "Typing :: Typed"
]
requires-python = ">=3.8"
dependencies = [
    "httpx>=0.24.0",
    "attrs>=21.3.0",
    "python-dateutil>=2.8.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "tomlkit>=0.12.0",
    "rich>=13.0.0",
    "questionary>=2.0.0",
    "build>=1.0.0",
    "twine>=4.0.0"
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "httpx[testing]>=0.24.0"
]

[project.urls]
Homepage = "https://carapis.com"
Documentation = "https://docs.carapis.com"
Funding = "https://carapis.com/pricing"

[tool.setuptools]
packages = ["carapis", "carapis.services", "carapis.generated", "carapis.generated.vehicles_api", "carapis.generated.vehicles_api.django_revolution_vehicles_api"]

[tool.setuptools.package-data]
carapis = ["py.typed"]
"carapis.generated" = ["**/*"]

# Exclude development files from distribution
[tool.setuptools.exclude-package-data]
"*" = ["tests/*", "scripts/*", "*.md", "*.txt", "*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | generated
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
skip_glob = ["generated/**/*"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "generated.*"
ignore_errors = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "generated/*",
    "setup.py",
    "*/site-packages/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
