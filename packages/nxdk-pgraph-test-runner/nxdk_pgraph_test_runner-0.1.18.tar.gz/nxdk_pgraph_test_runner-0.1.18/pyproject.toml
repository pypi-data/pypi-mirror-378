[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "nxdk-pgraph-test-runner"
dynamic = ["version"]
description = 'Executes and captures the results of https://github.com/abaire/nxdk_pgraph_tests in an emulator'
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = ["xemu", "nv2a", "xbox", "pgraph"]
authors = [
  { name = "Erik Abair", email = "erik.abair@bearbrains.work" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "platformdirs~=4.3.6",
  "tomli_w~=1.2.0",
  "ifaddr~=0.2.0",
  "mergedeep~=1.3.4",
  "pyftpdlib~=2.0.1",
  "nxdk-pgraph-test-repacker~=0.0.4",
  "pyopengl~=3.1.9",
  "glfw~=2.8.0",
  'tomli; python_version < "3.11"',
]

[project.urls]
Documentation = "https://github.com/abaire/nxdk-pgraph-test-runner#readme"
Issues = "https://github.com/abaire/nxdk-pgraph-test-runner/issues"
Source = "https://github.com/abaire/nxdk-pgraph-test-runner"

[project.scripts]
nxdk-pgraph-test-runner = "nxdk_pgraph_test_runner:run"

[tool.hatch.version]
path = "src/nxdk_pgraph_test_runner/__about__.py"

[tool.hatch.envs.types]
type = "virtual"
path = ".venv-mypy"
extra-dependencies = [
  "pip",
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/nxdk_pgraph_test_runner tests}"

[tool.mypy]
disable_error_code = ["import-untyped", "import-not-found"]

[tool.coverage.run]
source_pkgs = ["nxdk_pgraph_test_runner", "tests"]
branch = true
parallel = true
omit = [
  "src/nxdk_pgraph_test_runner/__about__.py",
]

[tool.coverage.paths]
nxdk_pgraph_test_runner = ["src/nxdk_pgraph_test_runner", "*/nxdk-pgraph-test-runner/src/nxdk_pgraph_test_runner"]
tests = ["tests", "*/nxdk-pgraph-test-runner/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.hatch.envs.default]
type = "virtual"
path = "venv"

[tool.hatch.envs.hatch-test]
type = "virtual"
path = "venv"
extra-dependencies = [
  "pytest",
]
