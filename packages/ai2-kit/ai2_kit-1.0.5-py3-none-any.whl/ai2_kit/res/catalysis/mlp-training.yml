# Define artifacts here so that they can be used in the workflow sections.
# You are free to define as many artifacts as you need.

# The artifact for the training data must be npy format.
# The artifact for the initial structure can be .xyz, POSCAR or other ase supported formats.

# Path here should use absolute path (full path).
# For example:
# /public/home/user01/demo/ai2cat/data/train/Ag13O2
# /public/home/user01/demo/ai2cat/data/explore/init.xyz

$artifacts

workflow:
  general:
    type_map: $type_map
    mass_map: $mass_map
    # limit the max iteration of the workflow
    # increase this when you want to run more iterations
    max_iters: 1

  label:
    cp2k:
      # limit the max number of structures to label
      limit: 50
      # default input template for cp2k
      input_template: !load_text cp2k.inp

  train:
    deepmd:
      model_num: 4
      # Specific the artifacts to be used as initial train data here.
      init_dataset : $train_data
      input_template: !load_yaml deepmd.json

  explore:
    lammps:
      nsteps: 1000
      timestep: 0.0005
      sample_freq: 10
      ensemble: nvt
      # Specific the artifacts to be used as initial structure here.
      system_files: $explore_data

      template_vars:
         POST_INIT: |
            neighbor 2.0 bin
            box      tilt large

      explore_vars:
        TEMP: [50,100,200,300,400,600,800,1000]
        PRES: [ 1 ]

  select:
    model_devi:
        # the upper and lower bound of the deviation of the model
        f_trust_lo: 0.2
        f_trust_hi: 0.6

  update:
    walkthrough:
      # The threshold decides when to move to next row of the table.
      # The passing rate is defined as the ration of good structures.
      # The smaller the threshold is, the more aggressive the workflow is.
      passing_rate_threshold: 0.8

      # You can override the default configuration for each iteration here.
      # The default configuration is for iter 0.
      # Some common configurations to change includes: nsteps, system_files, etc.
      table:
        - explore:  # iter 1
            lammps:
              nsteps: 3000

        - explore:  # iter 2
            lammps:
              nsteps: 5000

        - explore:  # iter 3
            lammps:
              nsteps: 10000

        - explore:  # iter 4
            lammps:
              nsteps: 20000

        - explore:  # iter 5
            lammps:
              nsteps: 20000

        - explore:  # iter 6
            lammps:
              nsteps: 50000

        - explore:  # iter 7
            lammps:
              nsteps: 100000
