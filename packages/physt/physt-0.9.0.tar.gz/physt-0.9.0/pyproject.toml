[project]
name = "physt"
version = "0.9.0"
description = "P(i/y)thon h(i/y)stograms."
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
authors = [{ name = "Jan Pipek", email = "jan.pipek@gmail.com" }]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "numpy>=1.25",
    "packaging",
    "typing_extensions",
    "hypothesis>=6.96.1",
    "click>=8.1.8",
    "narwhals>=2.0.1",
    "rich>=14.1.0",
]

[tool.uv]
dev-dependencies = [
    "bumpver>=2025.1131",
    "ipython>=8.18.1",
    "mypy>=1.18.2",
    "nbsphinx>=0.9.7",
    "physt[all]",
    "pytest>=8.4.1",
    "pytest-xdist>=3.8.0",
    "sphinx>=7.4.7",
    "sphinx-rtd-theme>=3.0.2",
    "sphinxcontrib-apidoc>=0.6.0",
]

[project.optional-dependencies]
astropy = ["astropy>=6.0"]
dask = ["dask[array]>=2023.0"]
pandas = ["pandas>=1.3"]
polars = ["polars>=1.0", "physt[pandas]"]
xarray = ["xarray"]
matplotlib = ["matplotlib>=3.0"]
plotly = ["plotly"]
# TODO: Re-enable vega?
# vega3 = ["vega3"]
folium = ["folium"]
# root = ["uproot3"]  # TODO: Update to uproot4
all = [
    "physt[astropy,dask,pandas,polars,xarray,matplotlib,plotly,folium]",
]

[project.scripts]
physt = "physt.cli:app"

[build-system]
requires = ["flit_core>=3.4"]
build-backend = "flit_core.buildapi"

[tool.mypy]
# TODO: revisit
ignore_missing_imports = true
# plugins = ["numpy.typing.mypy_plugin"]
exclude = ["docs"]

[tool.isort]
profile = "black"

[tool.distutils.bdist_wheel]
universal = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
# Be a bit tolerant
# line-length = 100
extend-exclude = ["docs"]
target-version = "py39"

[tool.ruff.per-file-ignores]
"tests/*.py" = ["E402"]


[tool.bumpver]
current_version = "v0.9.0"
version_pattern = "vMAJOR.MINOR.PATCH[PYTAGNUM]"
commit_message = "Bump version: {old_version} â†’ {new_version}"
commit = false
tag = false
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
    'version = "{pep440_version}"',
]
"conda/meta.yaml" = ['{% set version = "{pep440_version}" %}']
