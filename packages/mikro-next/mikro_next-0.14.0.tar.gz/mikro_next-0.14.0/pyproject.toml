[project]
name = "mikro-next"
version = "0.14.0"
description = "next images for arkitekt"
authors = [{ name = "jhnnsrs", email = "jhnnsrs@gmail.com" }]
requires-python = ">=3.11"
readme = "README.md"
license = "MIT"
dependencies = [
    "zarr>=3.1",
    "xarray>=2024.11.0",
    "s3fs>=2024.10.0",
    "pandas>=2.2",
    "dask>=2024.12.1",
    "rath>=3.7",
    "numpy>=1.26; python_version ~= '3.12'",
    "websockets>=15.0.1",
    "pytest>=8.3.5",
    "fakts-next>=2",
    "numcodecs>=0.16.1",
]

[project.optional-dependencies]
turms = []
table = ["pyarrow>=12.0.1"]
complete = ["pyarrow>=12.0.1"]

[tool.uv]
dev-dependencies =  [
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.1.1",
    "pytest>=8.3.5",
    "python-semantic-release>=9.21.0",
    "testcontainers==3.7.0",
    "autoflake>=1.7.7,<2",
    "aiohttp>=3.8.3,<4",
    "black>=23.1.0,<24",
    "pytest-aiohttp>=1.0.4,<2",
    "ruff>0.11",
    "cryptography>=44.0.3",
    "pyjwt>=2.10.1",
    "dokker>=2.3",
    "pillow>=11.2.1",
    "fakts-next>=1.1.0",
    "rekuest-next>=0.12.2",
    "pyarrow>=18.1.0",
    "arkitekt-next==0.17",
]


[tool.hatch.build.targets.sdist]
include = ["mikro_next"]

[tool.hatch.build.targets.wheel]
include = ["mikro_next"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
exclude = ["venv/", "tests/"]
ignore_missing_imports = true

[tool.ruff]
extend-select = ["ANN", "D1"]
ignore = ["ANN101"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 100

[tool.pytest.ini_options]
markers = [
    "integration: marks tests that require a deployment via testcontainers",
]

[[tool.pydoc-markdown.loaders]]
type = "python"
search_path = ["mikro"]

[tool.pydoc-markdown.renderer]
type = "docusaurus"
docs_base_path = "website/docs"


[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
upload_to_pypi = true
branch = "main"
build_command = "uv build"
