/'
 ' Diagram generated by cwl2puml v{{ version }}
 ' timestamp: {{ timestamp }}
 '/
@startuml
hide empty description

{% macro serialize_workflow(workflow) -%}
    {% for step in workflow.steps %}
        {% set process = index.get(step.run.split('#')[-1]) %}
        {% if 'Workflow' == process.class_ %}
state "{{ workflow.id }}" as {{ workflow.id | to_puml_name }} {
            {% for input in process.inputs %}
    state "{{ input.id }}" as {{ process.id | to_puml_name }}_{{ input.id | to_puml_name }} <<entryPoint>>
            {% endfor %}
            {% for input in step.in_  %}
    {% if '/' not in input.source %}{{ workflow.id | to_puml_name }}_{% endif %}{{ input.source | to_puml_name }} --> {{ process.id | to_puml_name }}_{{ input.id | to_puml_name }}
            {% endfor %}

            {{ serialize_workflow(process) }}

            {% for output in process.outputs %}
    state "{{ output.id }}" as {{ step.id | to_puml_name }}_{{ output.id | to_puml_name }} <<exitPoint>>
    {{ output.outputSource[0] | to_puml_name }} --> {{ step.id | to_puml_name }}_{{ output.id | to_puml_name }}
            {% endfor %}
}
        {% else %}
    state {{ step.id | to_puml_name }} {
            {% for input in step.in_  %}
        state "{{ input.id }}" as {{ step.id | to_puml_name }}_{{ input.id | to_puml_name }} <<entryPoint>>
        {% if '/' not in input.source %}{{ workflow.id | to_puml_name }}_{% endif %}{{ input.source | to_puml_name }} --> {{ step.id | to_puml_name }}_{{ input.id | to_puml_name }}
            {% endfor %}

            {% for output in step.out  %}
        state "{{ output }}" as {{ step.id | to_puml_name }}_{{ output | to_puml_name }} <<exitPoint>>
            {% endfor %}
    }
        {% endif %}
    {% endfor %}
{%- endmacro %}

{% set process = index.get(workflow_id) %}
{% if 'Workflow' == process.class_ %}
state "{{ process.id }}" as {{ process.id | to_puml_name }} {
    {% for input in process.inputs %}
    state "{{ input.id }}" as {{ process.id | to_puml_name }}_{{ input.id | to_puml_name }} <<entryPoint>>
    {% endfor %}

{{ serialize_workflow(process) }}

        {% for output in process.outputs %}
state "{{ output.id }}" as {{ process.id | to_puml_name }}_{{ output.id | to_puml_name }} <<exitPoint>>
{{ output.outputSource[0] | to_puml_name }} --> {{ process.id | to_puml_name }}_{{ output.id | to_puml_name }}
        {% endfor %}
}
        {% for input in process.inputs %}
[*] --> {{ process.id | to_puml_name }}_{{ input.id | to_puml_name }}
        {% endfor %}

        {% for output in process.outputs %}
{{ process.id | to_puml_name }}_{{ output.id | to_puml_name }} --> [*]
        {% endfor %}
{% endif %}


@enduml
