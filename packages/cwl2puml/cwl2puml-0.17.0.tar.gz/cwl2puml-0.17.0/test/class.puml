/'
 ' Diagram generated by cwl2puml v0.14.0
 ' timestamp: 2025-09-20T09:51:50.873
 '/
@startuml


class "water-bodies" as water_bodies extends Workflow {
    __ Inputs __
    
    + stac_api_endpoint: https://raw.githubusercontent.com/eoap/schemas/main/experimental/api-endpoint.yaml#APIEndpoint
    
    + search_request: https://raw.githubusercontent.com/eoap/schemas/main/experimental/discovery.yaml#STACSearchSettings
    
    + bands: string[] = ['green', 'nir']
    

    __ Outputs __
    
    + zarr_stac_catalog: Directory
    
    + stac_catalog: Directory
    

    
    __ Steps __
        
    - discovery: stac_client
        
    - convert_search: convert_search
        
    - water_bodies: detect_water_body
        
    - stac: stac
        
    - stac_zarr: stac_zarr
        
    
}

    
    package "Requirements" {
    
        
water_bodies --> ScatterFeatureRequirement
        
    
        
water_bodies --> SubworkflowFeatureRequirement
        
    
        
water_bodies --> SchemaDefRequirement
        
    
    }
    

    

class "convert-search" as convert_search extends CommandLineTool {
    __ Inputs __
    
    + search_request: https://raw.githubusercontent.com/eoap/schemas/main/experimental/discovery.yaml#STACSearchSettings
    
    + search_results: File
    

    __ Outputs __
    
    + items: Any
    
    + aoi: string
    

    
}

    
    package "Requirements" {
    
        
convert_search --> InlineJavascriptRequirement
        
    
        
convert_search --> SchemaDefRequirement
        
    
        
convert_search --> InitialWorkDirRequirement
        
    
    }
    

    
    package "Hints" {
    
        
convert_search --> DockerRequirement
        
    
    }
    

class "stac-zarr" as stac_zarr extends CommandLineTool {
    __ Inputs __
    
    + stac_catalog: Directory
    

    __ Outputs __
    
    + zarr_stac_catalog: Directory
    

    
}

    
    package "Requirements" {
    
        
stac_zarr --> InlineJavascriptRequirement
        
    
        
stac_zarr --> EnvVarRequirement
        
    
        
stac_zarr --> ResourceRequirement
        
    
    }
    

    
    package "Hints" {
    
        
stac_zarr --> DockerRequirement
        
    
    }
    

class "stac" as stac extends CommandLineTool {
    __ Inputs __
    
    + item: string[]
    
    + rasters: File[]
    

    __ Outputs __
    
    + temp_stac_catalog: Directory
    

    
}

    
    package "Requirements" {
    
        
stac --> InlineJavascriptRequirement
        
    
        
stac --> EnvVarRequirement
        
    
        
stac --> ResourceRequirement
        
    
    }
    

    
    package "Hints" {
    
        
stac --> DockerRequirement
        
    
    }
    

class "detect_water_body" as detect_water_body extends Workflow {
    __ Inputs __
    
    + aoi: string
    
    + epsg: string = EPSG:4326
    
    + bands: string[]
    
    + item: string
    

    __ Outputs __
    
    + detected_water_body: File
    

    
    __ Steps __
        
    - crop: crop
        
    - normalized_difference: norm_diff
        
    - otsu: otsu
        
    
}

    
    package "Requirements" {
    
        
detect_water_body --> ScatterFeatureRequirement
        
    
    }
    

    

class "stac-client" as stac_client extends CommandLineTool {
    __ Inputs __
    
    + api_endpoint: https://raw.githubusercontent.com/eoap/schemas/main/experimental/api-endpoint.yaml#APIEndpoint
    
    + search_request: https://raw.githubusercontent.com/eoap/schemas/main/experimental/discovery.yaml#STACSearchSettings
    

    __ Outputs __
    
    + search_output: File
    

    
}

    
    package "Requirements" {
    
        
stac_client --> InlineJavascriptRequirement
        
    
        
stac_client --> NetworkAccess
        
    
        
stac_client --> SchemaDefRequirement
        
    
    }
    

    
    package "Hints" {
    
        
stac_client --> DockerRequirement
        
    
    }
    

class "norm_diff" as norm_diff extends CommandLineTool {
    __ Inputs __
    
    + rasters: File[]
    

    __ Outputs __
    
    + ndwi: File
    

    
}

    
    package "Requirements" {
    
        
norm_diff --> InlineJavascriptRequirement
        
    
        
norm_diff --> EnvVarRequirement
        
    
        
norm_diff --> ResourceRequirement
        
    
    }
    

    
    package "Hints" {
    
        
norm_diff --> DockerRequirement
        
    
    }
    

class "crop" as crop extends CommandLineTool {
    __ Inputs __
    
    + item: string
    
    + aoi: string
    
    + epsg: string
    
    + band: string
    

    __ Outputs __
    
    + cropped: File
    

    
}

    
    package "Requirements" {
    
        
crop --> InlineJavascriptRequirement
        
    
        
crop --> EnvVarRequirement
        
    
        
crop --> ResourceRequirement
        
    
    }
    

    
    package "Hints" {
    
        
crop --> DockerRequirement
        
    
    }
    

class "otsu" as otsu extends CommandLineTool {
    __ Inputs __
    
    + raster: File
    

    __ Outputs __
    
    + binary_mask_item: File
    

    
}

    
    package "Requirements" {
    
        
otsu --> InlineJavascriptRequirement
        
    
        
otsu --> EnvVarRequirement
        
    
        
otsu --> ResourceRequirement
        
    
    }
    

    
    package "Hints" {
    
        
otsu --> DockerRequirement
        
    
    }
    



    
    package "Steps" {
    
water_bodies --> stac_client
    
water_bodies --> convert_search
    
water_bodies --> detect_water_body
    
water_bodies --> stac
    
water_bodies --> stac_zarr
    
    }
    

    
        
note left of water_bodies::stac_api_endpoint
    STAC API endpoint
end note
        
    
        
note left of water_bodies::search_request
    STAC search request
end note
        
    
        
note left of water_bodies::bands
    bands used for the NDWI
end note
        
    

    

    
        
note left of convert_search::search_request
    Search request from the discovery step
end note
        
    
        
note left of convert_search::search_results
    Search results from the discovery step
end note
        
    

    

    
        
    

    

    
        
    
        
    

    
    package "Steps" {
    
detect_water_body --> crop
    
detect_water_body --> norm_diff
    
detect_water_body --> otsu
    
    }
    

    
        
note left of detect_water_body::aoi
    area of interest as a bounding box
end note
        
    
        
note left of detect_water_body::epsg
    EPSG code
end note
        
    
        
note left of detect_water_body::bands
    bands used for the NDWI
end note
        
    
        
note left of detect_water_body::item
    STAC item
end note
        
    

    

    
        
note left of stac_client::api_endpoint
    STAC API endpoint for Landsat-9 data
end note
        
    
        
note left of stac_client::search_request
    STAC API settings for Landsat-9 data
end note
        
    

    

    
        
    

    

    
        
    
        
    
        
    
        
    

    

    
        
    


@enduml