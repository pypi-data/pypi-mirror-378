/'
 ' Diagram generated by cwl2puml v{{ version }}
 ' timestamp: {{ timestamp }}
 '/
@startuml
autonumber "<b>[000]"

{% macro serialize_workflow(workflow) -%}
{% for step in workflow.steps %}
{% if step.when %}alt#LightGreen {{ step.when }}{% endif %}
{% if step.scatter %}loop {{ step.scatterMethod }} {{ step.scatter }}{% endif %}
        {% set process = index.get(step.run[1:]) %}
        {% if 'Workflow' == process.class_ %}
box "{% if process.label %}{{ process.label }}{% else %}{{ process.id }}{% endif %}"
        control "{{ process.id }}" as {{ process.id | to_puml_name }}_or
        activate {{ process.id | to_puml_name }}_or

                {% for input in step.in_  %}
        {{ workflow.id | to_puml_name }}_or -> {{ process.id | to_puml_name }}_or : ""{{ input.id }}"" (from ""{{ input.source }}"")
                {% endfor %}

        {{ serialize_workflow(process) }}

                {% for output in process.outputs %}
        {{ workflow.id | to_puml_name }}_or <-- {{ process.id | to_puml_name }}_or : ""{{ output.id }}"" (from ""{{ output.outputSource[0] }}"")
                {% endfor %}

        deactivate {{ process.id | to_puml_name }}_or
end box
        {% else %}
participant "{{ process.id }}" as {{ step.id | to_puml_name }}
activate {{ step.id | to_puml_name }}

                {% for input in step.in_  %}
{{ workflow.id | to_puml_name }}_or -> {{ step.id | to_puml_name }} : ""{{ input.id }}"" (from ""{{ input.source }}"")
                {% endfor %}

{{ step.id | to_puml_name }} -> {{ step.id | to_puml_name }} : Compute

                {% for output in step.out  %}
{{ workflow.id | to_puml_name }}_or <-- {{ step.id | to_puml_name }} : ""{{ output }}""
                {% endfor %}

deactivate {{ step.id | to_puml_name }}
        {% endif %}
{% if step.scatter %}end{% endif %}
{% if step.when %}
else condition not satisfied
        {{ workflow.id | to_puml_name }}_or -> {{ workflow.id | to_puml_name }}_or : ""{{step.run}}"" execution skipped
end
{% endif %}
{% endfor %}
{%- endmacro %}

entity "Workflow runner" as wfrunner
activate wfrunner

{% set process = index.get(workflow_id) %}
{% if 'Workflow' == process.class_ %}
== {% if process.doc %}{{ process.doc }}{% elif process.label %}{{ process.label }}{% else %}{{ process.id }}{% endif %} ==
control "{{ process.id }}" as {{ process.id | to_puml_name }}_or
activate {{ process.id | to_puml_name }}_or

        {% for input in process.inputs %}
wfrunner -> {{ process.id | to_puml_name }}_or : ""{{ input.id }}""
        {% endfor %}

{{ serialize_workflow(process) }}

        {% for output in process.outputs %}
wfrunner <-- {{ process.id | to_puml_name }}_or : ""{{ output.id }}"" (from ""{{ output.outputSource[0] }}"")
        {% endfor %}

deactivate {{ process.id | to_puml_name }}_or
{% endif %}

deactivate wfrunner

@enduml
