[project]
name = "joythief"
# Version is set on publication
version = "0.6.1"
description = "Comparison is the thief of joy"
authors = [
    {name = "Jonathan Sharpe", email = "mail@jonrshar.pe"}
]
license = "ISC"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
]
dynamic = ["classifiers"]

[project.urls]
repository = "https://github.com/textbook/joythief"
documentation = "https://joythief.readthedocs.io/"
Issues = "https://github.com/textbook/joythief/issues"
Coverage = "https://coveralls.io/github/textbook/joythief"
Sponsor = "https://ko-fi.com/textbook"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[dependency-groups]
dev = [
    { include-group = "test" },
    { include-group = "lint" },
    "coverage (>=7.10.6,<8)",
    "tox (>=4.30.2,<5)",
]
lint = [
    "black (>=25.1.0,<26)",
    "isort (>=6.0.1,<7)",
    "mypy (>=1.18.1,<2)",
]
test = [
    "pytest (>=8.4.2,<9)",
]

[tool.coverage.html]
directory = "coverage/html"

[tool.coverage.lcov]
output = "coverage/lcov.info"

[tool.coverage.report]
exclude_also = [
    "if tp\\.TYPE_CHECKING:",
    "raise NotImplementedError"
]

[tool.coverage.run]
data_file = "coverage/.coverage"
omit = ["tests/**"]

[tool.isort]
profile = "black"

[tool.mypy]
strict = true

[[tool.mypy.overrides]]
module = "tests.*"
disable_error_code = [
    "no-untyped-def"
]

[tool.poetry]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Testing",
    "Topic :: Utilities",
    "Typing :: Typed",
]
packages = [{include = "joythief", from = "src"}]

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
myst-parser = {version = "^4.0.1", markers = "python_version>='3.11'"}
sphinx = {version = "^8.2.3", markers = "python_version>='3.11'"}
furo = {version = "^2025.7.19", markers = "python_version>='3.11'"}

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.tox]
envlist = ["py39", "py310", "py311", "py312", "py313"]
isolated_build = true

[tool.tox.env_run_base]
commands = [["pytest"]]
dependency_groups = ["test"]
