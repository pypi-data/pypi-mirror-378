# This file was auto-generated by Fern from our API Definition.

from .......core.pydantic_utilities import UniversalBaseModel
import typing
from .......core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class DomainUserProperties(UniversalBaseModel):
    name: typing.Optional[str] = None
    domain: typing.Optional[str] = None
    domainsid: typing.Optional[str] = None
    distinguishedname: typing.Optional[str] = None
    unconstraineddelegation: typing.Optional[bool] = None
    trustedtoauth: typing.Optional[bool] = None
    passwordnotreqd: typing.Optional[bool] = None
    enabled: typing.Optional[bool] = None
    lastlogon: typing.Optional[str] = None
    pwdlastset: typing.Optional[str] = None
    admincount: typing.Optional[int] = None
    displayname: typing.Optional[str] = None
    description: typing.Optional[str] = None
    email: typing.Optional[str] = None
    samaccountname: typing.Optional[str] = None
    userpassword: typing.Optional[str] = None
    sensitive: typing.Optional[bool] = None
    dontreqpreauth: typing.Optional[bool] = None
    serviceprincipalnames: typing.Optional[typing.List[str]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
